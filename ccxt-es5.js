"use strict";var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};function _objectValues(obj){var values=[];var keys=Object.keys(obj);for(var k=0;k<keys.length;++k)values.push(obj[keys[k]]);return values;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}(function(){//-----------------------------------------------------------------------------
var version='1.3.44';var isNode=typeof window==='undefined';var isReactNative=typeof navigator!=='undefined'&&navigator&&navigator.product&&navigator.product=='ReactNative'||false;//-----------------------------------------------------------------------------
var CCXTError=function(_Error){_inherits(CCXTError,_Error);function CCXTError(message){_classCallCheck(this,CCXTError);// a workaround to make `instanceof CCXTError` work in ES5
var _this=_possibleConstructorReturn(this,(CCXTError.__proto__||Object.getPrototypeOf(CCXTError)).call(this,message));_this.constructor=CCXTError;_this.__proto__=CCXTError.prototype;_this.message=message;return _this;}return CCXTError;}(Error);var ExchangeError=function(_CCXTError){_inherits(ExchangeError,_CCXTError);function ExchangeError(message){_classCallCheck(this,ExchangeError);var _this2=_possibleConstructorReturn(this,(ExchangeError.__proto__||Object.getPrototypeOf(ExchangeError)).call(this,message));_this2.constructor=ExchangeError;_this2.__proto__=ExchangeError.prototype;_this2.message=message;return _this2;}return ExchangeError;}(CCXTError);var AuthenticationError=function(_CCXTError2){_inherits(AuthenticationError,_CCXTError2);function AuthenticationError(message){_classCallCheck(this,AuthenticationError);var _this3=_possibleConstructorReturn(this,(AuthenticationError.__proto__||Object.getPrototypeOf(AuthenticationError)).call(this,message));_this3.constructor=AuthenticationError;_this3.__proto__=AuthenticationError.prototype;_this3.message=message;return _this3;}return AuthenticationError;}(CCXTError);var NetworkError=function(_CCXTError3){_inherits(NetworkError,_CCXTError3);function NetworkError(message){_classCallCheck(this,NetworkError);var _this4=_possibleConstructorReturn(this,(NetworkError.__proto__||Object.getPrototypeOf(NetworkError)).call(this,message));_this4.constructor=NetworkError;_this4.__proto__=NetworkError.prototype;_this4.message=message;return _this4;}return NetworkError;}(CCXTError);var DDoSProtection=function(_NetworkError){_inherits(DDoSProtection,_NetworkError);function DDoSProtection(message){_classCallCheck(this,DDoSProtection);var _this5=_possibleConstructorReturn(this,(DDoSProtection.__proto__||Object.getPrototypeOf(DDoSProtection)).call(this,message));_this5.constructor=DDoSProtection;_this5.__proto__=DDoSProtection.prototype;_this5.message=message;return _this5;}return DDoSProtection;}(NetworkError);var RequestTimeout=function(_NetworkError2){_inherits(RequestTimeout,_NetworkError2);function RequestTimeout(message){_classCallCheck(this,RequestTimeout);var _this6=_possibleConstructorReturn(this,(RequestTimeout.__proto__||Object.getPrototypeOf(RequestTimeout)).call(this,message));_this6.constructor=RequestTimeout;_this6.__proto__=RequestTimeout.prototype;_this6.message=message;return _this6;}return RequestTimeout;}(NetworkError);var ExchangeNotAvailable=function(_NetworkError3){_inherits(ExchangeNotAvailable,_NetworkError3);function ExchangeNotAvailable(message){_classCallCheck(this,ExchangeNotAvailable);var _this7=_possibleConstructorReturn(this,(ExchangeNotAvailable.__proto__||Object.getPrototypeOf(ExchangeNotAvailable)).call(this,message));_this7.constructor=ExchangeNotAvailable;_this7.__proto__=ExchangeNotAvailable.prototype;_this7.message=message;return _this7;}return ExchangeNotAvailable;}(NetworkError);//-----------------------------------------------------------------------------
// utility helpers
var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};var decimal=function decimal(float){return parseFloat(float).toString();};var timeout=function timeout(ms,promise){return Promise.race([promise,sleep(ms).then(function(){throw new RequestTimeout('request timed out');})]);};var capitalize=function capitalize(string){return string.length?string.charAt(0).toUpperCase()+string.slice(1):string;};var keysort=function keysort(object){var result={};Object.keys(object).sort().forEach(function(key){return result[key]=object[key];});return result;};var extend=function extend(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}var result={};var _loop=function _loop(i){if(_typeof(args[i])==='object')Object.keys(args[i]).forEach(function(key){return result[key]=args[i][key];});};for(var i=0;i<args.length;i++){_loop(i);}return result;};var omit=function omit(object){var result=extend(object);for(var i=1;i<arguments.length;i++){if(typeof arguments[i]==='string')delete result[arguments[i]];else if(Array.isArray(arguments[i]))for(var k=0;k<arguments[i].length;k++){delete result[arguments[i][k]];}}return result;};var indexBy=function indexBy(array,key){var result={};for(var i=0;i<array.length;i++){var element=array[i];if(typeof element[key]!='undefined'){result[element[key]]=element;}}return result;};var sortBy=function sortBy(array,key){var descending=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;descending=descending?-1:1;return array.sort(function(a,b){return a[key]<b[key]?-descending:a[key]>b[key]?descending:0;});};var flatten=function flatten(array){var result=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];for(var i=0,length=array.length;i<length;i++){var value=array[i];if(Array.isArray(value)){flatten(value,result);}else{result.push(value);}}return result;};var unique=function unique(array){return array.filter(function(value,index,self){return self.indexOf(value)==index;});};var pluck=function pluck(array,key){return array.filter(function(element){return typeof element[key]!='undefined';}).map(function(element){return element[key];});};var urlencode=function urlencode(object){return qs.stringify(object);};var sum=function sum(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}var result=args.filter(function(arg){return typeof arg!='undefined';});return result.length>0?result.reduce(function(sum,value){return sum+value;},0):undefined;};var ordered=function ordered(x){return x;};// a stub to keep assoc keys in order, in JS it does nothing, it's mostly for Python
//-----------------------------------------------------------------------------
// platform-specific code (Node.js / Web Browsers)
if(isNode){var CryptoJS=module.require('crypto-js');var fetch=module.require('node-fetch');var qs=module.require('qs');}else if(isReactNative){var CryptoJS=require('crypto-js');var fetch=window.fetch;var qs=require('qs');}else{// a quick fetch polyfill
var fetch=function fetch(url,options){var verbose=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return new Promise(function(resolve,reject){if(verbose)console.log(url,options);var xhr=new XMLHttpRequest();var method=options.method||'GET';xhr.open(method,url,true);xhr.onreadystatechange=function(){if(xhr.readyState==4){if(xhr.status==200)resolve(xhr.responseText);else{// [403, 404, ...].indexOf (xhr.status) >= 0
throw new Error(method,url,xhr.status,xhr.responseText);}}};if(typeof options.headers!='undefined')for(var header in options.headers){xhr.setRequestHeader(header,options.headers[header]);}xhr.send(options.body);});};}//-----------------------------------------------------------------------------
// string ←→ binary ←→ base64 conversion routines
var stringToBinary=function stringToBinary(str){var arr=new Uint8Array(str.length);for(var i=0;i<str.length;i++){arr[i]=str.charCodeAt(i);}return CryptoJS.lib.WordArray.create(arr);};var stringToBase64=function stringToBase64(string){return CryptoJS.enc.Latin1.parse(string).toString(CryptoJS.enc.Base64);},utf16ToBase64=function utf16ToBase64(string){return CryptoJS.enc.Utf16.parse(string).toString(CryptoJS.enc.Base64);},base64ToBinary=function base64ToBinary(string){return CryptoJS.enc.Base64.parse(string);},base64ToString=function base64ToString(string){return CryptoJS.enc.Base64.parse(string).toString(CryptoJS.enc.Utf8);},binaryToString=function binaryToString(string){return string;};var binaryConcat=function binaryConcat(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}return args.reduce(function(a,b){return a.concat(b);});};// url-safe-base64 without equals signs, with + replaced by - and slashes replaced by underscores
var urlencodeBase64=function urlencodeBase64(base64string){return base64string.replace(/[=]+$/,'').replace(/\+/g,'-').replace(/\//g,'_');};//-----------------------------------------------------------------------------
// cryptography
var hash=function hash(request){var hash=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'md5';var digest=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'hex';var result=CryptoJS[hash.toUpperCase()](request);return digest=='binary'?result:result.toString(CryptoJS.enc[capitalize(digest)]);};var hmac=function hmac(request,secret){var hash=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'sha256';var digest=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'hex';var encoding=digest=='binary'?'Latin1':capitalize(digest);return CryptoJS['Hmac'+hash.toUpperCase()](request,secret).toString(CryptoJS.enc[capitalize(encoding)]);};//-----------------------------------------------------------------------------
// a JSON Web Token authentication method
var jwt=function jwt(request,secret){var alg=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'HS256';var hash=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'sha256';var encodedHeader=urlencodeBase64(stringToBase64(JSON.stringify({'alg':alg,'typ':'JWT'}))),encodedData=urlencodeBase64(stringToBase64(JSON.stringify(request))),token=[encodedHeader,encodedData].join('.'),signature=urlencodeBase64(utf16ToBase64(hmac(token,secret,hash,'utf16')));return[token,signature].join('.');};//-----------------------------------------------------------------------------
// the base class
var Exchange=function Exchange(config){var _this12=this;this.hash=hash;this.hmac=hmac;this.jwt=jwt;// JSON Web Token
this.binaryConcat=binaryConcat;this.stringToBinary=stringToBinary;this.stringToBase64=stringToBase64;this.base64ToBinary=base64ToBinary;this.base64ToString=base64ToString;this.binaryToString=binaryToString;this.utf16ToBase64=utf16ToBase64;this.urlencode=urlencode;this.omit=omit;this.pluck=pluck;this.unique=unique;this.extend=extend;this.flatten=flatten;this.indexBy=indexBy;this.sortBy=sortBy;this.keysort=keysort;this.decimal=decimal;this.capitalize=capitalize;this.json=JSON.stringify;this.sum=sum;this.ordered=ordered;this.encode=function(string){return string;};this.decode=function(string){return string;};if(isNode)this.nodeVersion=process.version.match(/\d+\.\d+.\d+/)[0];this.init=function(){var _this8=this;if(this.api)Object.keys(this.api).forEach(function(type){Object.keys(_this8.api[type]).forEach(function(method){var urls=_this8.api[type][method];var _loop2=function _loop2(){var url=urls[i].trim();var splitPath=url.split(/[^a-zA-Z0-9]/);var uppercaseMethod=method.toUpperCase();var lowercaseMethod=method.toLowerCase();var camelcaseMethod=capitalize(lowercaseMethod);var camelcaseSuffix=splitPath.map(capitalize).join('');var underscoreSuffix=splitPath.map(function(x){return x.trim().toLowerCase();}).filter(function(x){return x.length>0;}).join('_');if(camelcaseSuffix.indexOf(camelcaseMethod)===0)camelcaseSuffix=camelcaseSuffix.slice(camelcaseMethod.length);if(underscoreSuffix.indexOf(lowercaseMethod)===0)underscoreSuffix=underscoreSuffix.slice(lowercaseMethod.length);var camelcase=type+camelcaseMethod+capitalize(camelcaseSuffix);var underscore=type+'_'+lowercaseMethod+'_'+underscoreSuffix;var f=function f(params){return _this8.request(url,type,uppercaseMethod,params);};_this8[camelcase]=f;_this8[underscore]=f;};for(var i=0;i<urls.length;i++){_loop2();}});});if(this.markets)this.setMarkets(this.markets);};this.fetch=function(url){var method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';var _this9=this;var headers=arguments.length>2&&arguments[2]!==undefined?arguments[2]:undefined;var body=arguments.length>3&&arguments[3]!==undefined?arguments[3]:undefined;if(isNode&&this.userAgent)if(typeof this.userAgent=='string')headers=extend({'User-Agent':this.userAgent},headers);else if(_typeof(this.userAgent)=='object'&&'User-Agent'in this.userAgent)headers=extend(this.userAgent,headers);if(this.proxy.length)headers=extend({'Origin':'*'},headers);var options={'method':method,'headers':headers,'body':body};url=this.proxy+url;if(this.verbose)console.log(this.id,method,url,"\nRequest:\n",options);return timeout(this.timeout,fetch(url,options).catch(function(e){if(isNode){throw new ExchangeNotAvailable([_this9.id,method,url,e.type,e.message].join(' '));}throw e;// rethrow all unknown errors
}).then(function(response){if(typeof response=='string')return response;return response.text().then(function(text){if(_this9.verbose)console.log(_this9.id,method,url,text?"\nResponse:\n"+text:'');if(response.status>=200&&response.status<=300)return text;var error=undefined;var details=text;if([429].indexOf(response.status)>=0){error=DDoSProtection;}else if([500,501,502,404,525].indexOf(response.status)>=0){error=ExchangeNotAvailable;}else if([400,403,405,503].indexOf(response.status)>=0){var ddosProtection=text.match(/cloudflare|incapsula/i);if(ddosProtection){error=DDoSProtection;}else{error=ExchangeNotAvailable;details=text+' (possible reasons: '+['invalid API keys','bad or old nonce','exchange is down or offline','on maintenance','DDoS protection','rate-limiting'].join(', ')+')';}}else if([408,504].indexOf(response.status)>=0){error=RequestTimeout;}else if([401,422,511].indexOf(response.status)>=0){error=AuthenticationError;}else{error=Error;}throw new error([_this9.id,method,url,response.status,response.statusText,details].join(' '));});}).then(function(response){return _this9.handleResponse(url,method,headers,response);}));};this.handleResponse=function(url){var method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';var headers=arguments.length>2&&arguments[2]!==undefined?arguments[2]:undefined;var body=arguments.length>3&&arguments[3]!==undefined?arguments[3]:undefined;try{return JSON.parse(body);}catch(e){var maintenance=body.match(/offline|busy|retry|wait|unavailable|maintain|maintenance|maintenancing/i);var ddosProtection=body.match(/cloudflare|incapsula|overload/i);if(e instanceof SyntaxError){var error=ExchangeNotAvailable;var details='not accessible from this location at the moment';if(maintenance)details='offline, on maintenance or unreachable from this location at the moment';if(ddosProtection)error=DDoSProtection;throw new error([this.id,method,url,details].join(' '));}if(this.verbose)console.log(this.id,method,url,'error',e,"response body:\n'"+body+"'");throw e;}};this.set_markets=this.setMarkets=function(markets){var values=_objectValues(markets);this.markets=indexBy(values,'symbol');this.marketsById=indexBy(markets,'id');this.markets_by_id=this.marketsById;this.symbols=Object.keys(this.markets);var base=this.pluck(values.filter(function(market){return'base'in market;}),'base');var quote=this.pluck(values.filter(function(market){return'quote'in market;}),'quote');this.currencies=this.unique(base.concat(quote));return this.markets;};this.load_markets=this.loadMarkets=function(){var _this10=this;var reload=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(!reload&&this.markets){if(!this.marketsById){return new Promise(function(resolve,reject){return resolve(_this10.setMarkets(_this10.markets));});}return new Promise(function(resolve,reject){return resolve(_this10.markets);});}return this.fetchMarkets().then(function(markets){return _this10.setMarkets(markets);});};this.fetch_tickers=function(){return this.fetchTickers();};this.fetchTickers=function(){throw new ExchangeError(this.id+' API does not allow to fetch all tickers at once with a single call to fetch_tickers () for now');};this.fetch_markets=function(){return this.fetchMarkets();};this.fetchMarkets=function(){var _this11=this;return new Promise(function(resolve,reject){return resolve(_this11.markets);});};this.commonCurrencyCode=function(currency){if(!this.substituteCommonCurrencyCodes)return currency;if(currency=='XBT')return'BTC';if(currency=='BCC')return'BCH';if(currency=='DRK')return'DASH';return currency;};this.market=function(market){return typeof market==='string'&&typeof this.markets!='undefined'&&typeof this.markets[market]!='undefined'?this.markets[market]:market;};this.market_id=this.marketId=function(market){return this.market(market).id||market;};this.symbol=function(market){return this.market(market).symbol||market;};this.extract_params=this.extractParams=function(string){var re=/{([a-zA-Z0-9_]+?)}/g;var matches=[];var match=void 0;while(match=re.exec(string)){matches.push(match[1]);}return matches;};this.implode_params=this.implodeParams=function(string,params){for(var property in params){string=string.replace('{'+property+'}',params[property]);}return string;};this.create_limit_buy_order=this.createLimitBuyOrder=function(market,amount,price){var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};return this.createOrder(market,'limit','buy',amount,price,params);};this.create_limit_sell_order=this.createLimitSellOrder=function(market,amount,price){var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};return this.createOrder(market,'limit','sell',amount,price,params);};this.create_market_buy_order=this.createMarketBuyOrder=function(market,amount){var params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return this.createOrder(market,'market','buy',amount,undefined,params);};this.create_market_sell_order=this.createMarketSellOrder=function(market,amount){var params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return this.createOrder(market,'market','sell',amount,undefined,params);};this.iso8601=function(timestamp){return new Date(timestamp).toISOString();};this.parse8601=Date.parse;this.seconds=function(){return Math.floor(_this12.milliseconds()/1000);};this.microseconds=function(){return Math.floor(_this12.milliseconds()*1000);};this.milliseconds=Date.now;this.nonce=this.seconds;this.id=undefined;this.rateLimit=2000;// milliseconds = seconds * 1000
this.timeout=10000;// milliseconds = seconds * 1000
this.verbose=false;this.userAgent=false;this.twofa=false;// two-factor authentication
this.substituteCommonCurrencyCodes=true;this.yyyymmddhhmmss=function(timestamp){var date=new Date(timestamp);var yyyy=date.getUTCFullYear();var MM=date.getUTCMonth();var dd=date.getUTCDay();var hh=date.getUTCHours();var mm=date.getUTCMinutes();var ss=date.getUTCSeconds();MM=MM<10?'0'+MM:MM;dd=dd<10?'0'+dd:dd;hh=hh<10?'0'+hh:hh;mm=mm<10?'0'+mm:mm;ss=ss<10?'0'+ss:ss;return yyyy+'-'+MM+'-'+dd+' '+hh+':'+mm+':'+ss;};if(isNode)this.userAgent={'User-Agent':'ccxt/'+version+' (+https://github.com/kroitor/ccxt)'+' Node.js/'+this.nodeVersion+' (JavaScript)'// prepended to URL, like https://proxy.com/https://exchange.com/api...
};this.proxy='';for(var property in config){this[property]=config[property];}this.fetch_balance=this.fetchBalance;this.fetch_order_book=this.fetchOrderBook;this.fetch_ticker=this.fetchTicker;this.fetch_trades=this.fetchTrades;this.init();};//=============================================================================
var _1broker={'id':'_1broker','name':'1Broker','countries':'US','rateLimit':1500,'version':'v2','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766021-420bd9fc-5ecb-11e7-8ed6-56d0081efed2.jpg','api':'https://1broker.com/api','www':'https://1broker.com','doc':'https://1broker.com/?c=en/content/api-documentation'},'api':{'private':{'get':['market/bars','market/categories','market/details','market/list','market/quotes','market/ticks','order/cancel','order/create','order/open','position/close','position/close_cancel','position/edit','position/history','position/open','position/shared/get','social/profile_statistics','social/profile_trades','user/bitcoin_deposit_address','user/details','user/overview','user/quota_status','user/transaction_log']}},fetchCategories:function fetchCategories(){var categories,_this13=this;return Promise.resolve().then(function(){return _this13.privateGetMarketCategories();}).then(function(_resp){categories=_resp;return categories['response'];});},fetchMarkets:function fetchMarkets(){function _recursive(){if(c<categories.length){return Promise.resolve().then(function(){category=categories[c];return this_.privateGetMarketList({'category':category.toLowerCase()});}).then(function(_resp){markets=_resp;for(p=0;p<markets['response'].length;p++){market=markets['response'][p];id=market['symbol'];symbol=undefined;base=undefined;quote=undefined;if(category=='FOREX'||category=='CRYPTO'){symbol=market['name'];parts=symbol.split('/');base=parts[0];quote=parts[1];}else{base=id;quote='USD';symbol=base+'/'+quote;}base=this_.commonCurrencyCode(base);quote=this_.commonCurrencyCode(quote);result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}c++;return _recursive();});}}var this_,categories,result,c,category,markets,p,market,id,symbol,base,quote,parts,_this14=this;return Promise.resolve().then(function(){this_=_this14;// workaround for Babel bug (not passing `this` to _recursive() call)
return _this14.fetchCategories();}).then(function(_resp){categories=_resp;result=[];c=0;return _recursive();}).then(function(){return result;});},fetchBalance:function fetchBalance(){var balance,response,result,c,currency,_this18=this;return Promise.resolve().then(function(){return _this18.loadMarkets();}).then(function(){return _this18.privateGetUserOverview();}).then(function(_resp){balance=_resp;response=balance['response'];result={'info':response};for(c=0;c<_this18.currencies.length;c++){currency=_this18.currencies[c];result[currency]={'free':undefined,'used':undefined,'total':undefined};}result['BTC']['free']=parseFloat(response['balance']);result['BTC']['total']=result['BTC']['free'];return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,bidPrice,askPrice,bid,ask,_this19=this,_arguments7=arguments;return Promise.resolve().then(function(){params=_arguments7.length>1&&_arguments7[1]!==undefined?_arguments7[1]:{};return _this19.loadMarkets();}).then(function(){return _this19.privateGetMarketQuotes(_this19.extend({'symbols':_this19.marketId(market)},params));}).then(function(_resp){response=_resp;orderbook=response['response'][0];timestamp=_this19.parse8601(orderbook['updated']);bidPrice=parseFloat(orderbook['bid']);askPrice=parseFloat(orderbook['ask']);bid=[bidPrice,undefined];ask=[askPrice,undefined];return{'timestamp':timestamp,'datetime':_this19.iso8601(timestamp),'bids':[bid],'asks':[ask]};});},fetchTicker:function fetchTicker(market){var result,orderbook,ticker,timestamp,_this20=this;return Promise.resolve().then(function(){return _this20.loadMarkets();}).then(function(){return _this20.privateGetMarketBars({'symbol':_this20.marketId(market),'resolution':60,'limit':1});}).then(function(_resp){result=_resp;return _this20.fetchOrderBook(market);}).then(function(_resp){orderbook=_resp;ticker=result['response'][0];timestamp=_this20.parse8601(ticker['date']);return{'timestamp':timestamp,'datetime':_this20.iso8601(timestamp),'high':parseFloat(ticker['h']),'low':parseFloat(ticker['l']),'bid':orderbook['bids'][0][0],'ask':orderbook['asks'][0][0],'vwap':undefined,'open':parseFloat(ticker['o']),'close':parseFloat(ticker['c']),'first':undefined,'last':undefined,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':undefined};});},createOrder:function createOrder(market,type,side,amount){var price,params,order,result,_this21=this,_arguments9=arguments;return Promise.resolve().then(function(){price=_arguments9.length>4&&_arguments9[4]!==undefined?_arguments9[4]:undefined;params=_arguments9.length>5&&_arguments9[5]!==undefined?_arguments9[5]:{};return _this21.loadMarkets();}).then(function(){order={'symbol':_this21.marketId(market),'margin':amount,'direction':side=='sell'?'short':'long','leverage':1,'type':side};if(type=='limit'){order['price']=price;}else{order['type']+='_market';}return _this21.privateGetOrderCreate(_this21.extend(order,params));}).then(function(_resp){result=_resp;return{'info':result,'id':result['response']['order_id']};});},cancelOrder:function cancelOrder(id){var _this22=this;return Promise.resolve().then(function(){return _this22.loadMarkets();}).then(function(){return _this22.privatePostOrderCancel({'order_id':id});});},request:function request(path){var api,method,params,headers,body,url,query,response,_this23=this,_arguments11=arguments;return Promise.resolve().then(function(){api=_arguments11.length>1&&_arguments11[1]!==undefined?_arguments11[1]:'public';method=_arguments11.length>2&&_arguments11[2]!==undefined?_arguments11[2]:'GET';params=_arguments11.length>3&&_arguments11[3]!==undefined?_arguments11[3]:{};headers=_arguments11.length>4&&_arguments11[4]!==undefined?_arguments11[4]:undefined;body=_arguments11.length>5&&_arguments11[5]!==undefined?_arguments11[5]:undefined;if(!_this23.apiKey){throw new AuthenticationError(_this23.id+' requires apiKey for all requests');}url=_this23.urls['api']+'/'+_this23.version+'/'+path+'.php';query=_this23.extend({'token':_this23.apiKey},params);url+='?'+_this23.urlencode(query);return _this23.fetch(url,method);}).then(function(_resp){response=_resp;if('warning'in response){if(response['warning']){throw new ExchangeError(_this23.id+' Warning: '+response['warning_message']);}}if('error'in response){if(response['error']){throw new ExchangeError(_this23.id+' Error: '+response['error_code']+response['error_message']);}}return response;});}};//-----------------------------------------------------------------------------
var cryptocapital={'id':'cryptocapital','name':'Crypto Capital','comment':'Crypto Capital API','countries':'PA',// Panama
'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27993158-7a13f140-64ac-11e7-89cc-a3b441f0b0f8.jpg','www':'https://cryptocapital.co','doc':'https://github.com/cryptocap'},'api':{'public':{'get':['stats','historical-prices','order-book','transactions']},'private':{'post':['balances-and-info','open-orders','user-transactions','btc-deposit-address/get','btc-deposit-address/new','deposits/get','withdrawals/get','orders/new','orders/edit','orders/cancel','orders/status','withdrawals/new']}},fetchBalance:function fetchBalance(){var response,balance,result,c,currency,account,_this24=this;return Promise.resolve().then(function(){return _this24.privatePostBalancesAndInfo();}).then(function(_resp){response=_resp;balance=response['balances-and-info'];result={'info':balance};for(c=0;c<_this24.currencies.length;c++){currency=_this24.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balance['available']){account['free']=parseFloat(balance['available'][currency]);}if(currency in balance['on_hold']){account['used']=parseFloat(balance['on_hold'][currency]);}account['total']=_this24.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,_timestamp,price,amount,_this25=this,_arguments13=arguments;return Promise.resolve().then(function(){params=_arguments13.length>1&&_arguments13[1]!==undefined?_arguments13[1]:{};return _this25.publicGetOrderBook(_this25.extend({'currency':_this25.marketId(market)},params));}).then(function(_resp){response=_resp;orderbook=response['order-book'];timestamp=_this25.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this25.iso8601(timestamp)};sides={'bids':'bid','asks':'ask'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];_timestamp=parseInt(order['timestamp'])*1000;price=parseFloat(order['price']);amount=parseFloat(order['order_amount']);result[key].push([price,amount,_timestamp]);}}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,_this26=this;return Promise.resolve().then(function(){return _this26.publicGetStats({'currency':_this26.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['stats'];timestamp=_this26.milliseconds();return{'timestamp':timestamp,'datetime':_this26.iso8601(timestamp),'high':parseFloat(ticker['max']),'low':parseFloat(ticker['min']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['last_price']),'change':parseFloat(ticker['daily_change']),'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['total_btc_traded'])};});},fetchTrades:function fetchTrades(market){var _this27=this;return _this27.publicGetTransactions({'currency':_this27.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,order,result,_this28=this,_arguments16=arguments;return Promise.resolve().then(function(){price=_arguments16.length>4&&_arguments16[4]!==undefined?_arguments16[4]:undefined;params=_arguments16.length>5&&_arguments16[5]!==undefined?_arguments16[5]:{};order={'side':side,'type':type,'currency':_this28.marketId(market),'amount':amount};if(type=='limit'){order['limit_price']=price;}return _this28.privatePostOrdersNew(_this28.extend(order,params));}).then(function(_resp){result=_resp;return{'info':result,'id':result};});},cancelOrder:function cancelOrder(id){var _this29=this;return _this29.privatePostOrdersCancel({'id':id});},request:function request(path){var api,method,params,headers,body,url,query,request,response,errors,e,error,_this30=this,_arguments18=arguments;return Promise.resolve().then(function(){api=_arguments18.length>1&&_arguments18[1]!==undefined?_arguments18[1]:'public';method=_arguments18.length>2&&_arguments18[2]!==undefined?_arguments18[2]:'GET';params=_arguments18.length>3&&_arguments18[3]!==undefined?_arguments18[3]:{};headers=_arguments18.length>4&&_arguments18[4]!==undefined?_arguments18[4]:undefined;body=_arguments18.length>5&&_arguments18[5]!==undefined?_arguments18[5]:undefined;if(_this30.id=='cryptocapital'){throw new ExchangeError(_this30.id+' is an abstract base API for _1btcxe');}url=_this30.urls['api']+'/'+path;if(api=='public'){if(Object.keys(params).length){url+='?'+_this30.urlencode(params);}}else{query=_this30.extend({'api_key':_this30.apiKey,'nonce':_this30.nonce()},params);request=_this30.json(query);query['signature']=_this30.hmac(_this30.encode(request),_this30.encode(_this30.secret));body=_this30.json(query);headers={'Content-Type':'application/json'};}return _this30.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('errors'in response){errors=[];for(e=0;e<response['errors'].length;e++){error=response['errors'][e];errors.push(error['code']+': '+error['message']);}errors=errors.join(' ');throw new ExchangeError(_this30.id+' '+errors);}return _this30.fetch(url,method,headers,body);});}};//-----------------------------------------------------------------------------
var _1btcxe=extend(cryptocapital,{'id':'_1btcxe','name':'1BTCXE','countries':'PA',// Panama
'comment':'Crypto Capital API','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766049-2b294408-5ecc-11e7-85cc-adaff013dc1a.jpg','api':'https://1btcxe.com/api','www':'https://1btcxe.com','doc':'https://1btcxe.com/api-docs.php'},'markets':{'BTC/USD':{'id':'USD','symbol':'BTC/USD','base':'BTC','quote':'USD'},'BTC/EUR':{'id':'EUR','symbol':'BTC/EUR','base':'BTC','quote':'EUR'},'BTC/CNY':{'id':'CNY','symbol':'BTC/CNY','base':'BTC','quote':'CNY'},'BTC/RUB':{'id':'RUB','symbol':'BTC/RUB','base':'BTC','quote':'RUB'},'BTC/CHF':{'id':'CHF','symbol':'BTC/CHF','base':'BTC','quote':'CHF'},'BTC/JPY':{'id':'JPY','symbol':'BTC/JPY','base':'BTC','quote':'JPY'},'BTC/GBP':{'id':'GBP','symbol':'BTC/GBP','base':'BTC','quote':'GBP'},'BTC/CAD':{'id':'CAD','symbol':'BTC/CAD','base':'BTC','quote':'CAD'},'BTC/AUD':{'id':'AUD','symbol':'BTC/AUD','base':'BTC','quote':'AUD'},'BTC/AED':{'id':'AED','symbol':'BTC/AED','base':'BTC','quote':'AED'},'BTC/BGN':{'id':'BGN','symbol':'BTC/BGN','base':'BTC','quote':'BGN'},'BTC/CZK':{'id':'CZK','symbol':'BTC/CZK','base':'BTC','quote':'CZK'},'BTC/DKK':{'id':'DKK','symbol':'BTC/DKK','base':'BTC','quote':'DKK'},'BTC/HKD':{'id':'HKD','symbol':'BTC/HKD','base':'BTC','quote':'HKD'},'BTC/HRK':{'id':'HRK','symbol':'BTC/HRK','base':'BTC','quote':'HRK'},'BTC/HUF':{'id':'HUF','symbol':'BTC/HUF','base':'BTC','quote':'HUF'},'BTC/ILS':{'id':'ILS','symbol':'BTC/ILS','base':'BTC','quote':'ILS'},'BTC/INR':{'id':'INR','symbol':'BTC/INR','base':'BTC','quote':'INR'},'BTC/MUR':{'id':'MUR','symbol':'BTC/MUR','base':'BTC','quote':'MUR'},'BTC/MXN':{'id':'MXN','symbol':'BTC/MXN','base':'BTC','quote':'MXN'},'BTC/NOK':{'id':'NOK','symbol':'BTC/NOK','base':'BTC','quote':'NOK'},'BTC/NZD':{'id':'NZD','symbol':'BTC/NZD','base':'BTC','quote':'NZD'},'BTC/PLN':{'id':'PLN','symbol':'BTC/PLN','base':'BTC','quote':'PLN'},'BTC/RON':{'id':'RON','symbol':'BTC/RON','base':'BTC','quote':'RON'},'BTC/SEK':{'id':'SEK','symbol':'BTC/SEK','base':'BTC','quote':'SEK'},'BTC/SGD':{'id':'SGD','symbol':'BTC/SGD','base':'BTC','quote':'SGD'},'BTC/THB':{'id':'THB','symbol':'BTC/THB','base':'BTC','quote':'THB'},'BTC/TRY':{'id':'TRY','symbol':'BTC/TRY','base':'BTC','quote':'TRY'},'BTC/ZAR':{'id':'ZAR','symbol':'BTC/ZAR','base':'BTC','quote':'ZAR'}}});//-----------------------------------------------------------------------------
var anxpro={'id':'anxpro','name':'ANXPro','countries':['JP','SG','HK','NZ'],'version':'2','rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27765983-fd8595da-5ec9-11e7-82e3-adb3ab8c2612.jpg','api':'https://anxpro.com/api','www':'https://anxpro.com','doc':['http://docs.anxv2.apiary.io','https://anxpro.com/pages/api']},'api':{'public':{'get':['{currency_pair}/money/ticker','{currency_pair}/money/depth/full','{currency_pair}/money/trade/fetch']},'private':{'post':['{currency_pair}/money/order/add','{currency_pair}/money/order/cancel','{currency_pair}/money/order/quote','{currency_pair}/money/order/result','{currency_pair}/money/orders','money/{currency}/address','money/{currency}/send_simple','money/info','money/trade/list','money/wallet/history']}},'markets':{'BTC/USD':{'id':'BTCUSD','symbol':'BTC/USD','base':'BTC','quote':'USD'},'BTC/HKD':{'id':'BTCHKD','symbol':'BTC/HKD','base':'BTC','quote':'HKD'},'BTC/EUR':{'id':'BTCEUR','symbol':'BTC/EUR','base':'BTC','quote':'EUR'},'BTC/CAD':{'id':'BTCCAD','symbol':'BTC/CAD','base':'BTC','quote':'CAD'},'BTC/AUD':{'id':'BTCAUD','symbol':'BTC/AUD','base':'BTC','quote':'AUD'},'BTC/SGD':{'id':'BTCSGD','symbol':'BTC/SGD','base':'BTC','quote':'SGD'},'BTC/JPY':{'id':'BTCJPY','symbol':'BTC/JPY','base':'BTC','quote':'JPY'},'BTC/GBP':{'id':'BTCGBP','symbol':'BTC/GBP','base':'BTC','quote':'GBP'},'BTC/NZD':{'id':'BTCNZD','symbol':'BTC/NZD','base':'BTC','quote':'NZD'},'LTC/BTC':{'id':'LTCBTC','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'DOGE/BTC':{'id':'DOGEBTC','symbol':'DOGE/BTC','base':'DOGE','quote':'BTC'},'STR/BTC':{'id':'STRBTC','symbol':'STR/BTC','base':'STR','quote':'BTC'},'XRP/BTC':{'id':'XRPBTC','symbol':'XRP/BTC','base':'XRP','quote':'BTC'}},fetchBalance:function fetchBalance(){var response,balance,currencies,result,c,currency,account,wallet,_this31=this;return Promise.resolve().then(function(){return _this31.privatePostMoneyInfo();}).then(function(_resp){response=_resp;balance=response['data'];currencies=Object.keys(balance['Wallets']);result={'info':balance};for(c=0;c<currencies.length;c++){currency=currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balance['Wallets']){wallet=balance['Wallets'][currency];account['free']=parseFloat(wallet['Available_Balance']['value']);account['total']=parseFloat(wallet['Balance']['value']);account['used']=account['total']-account['free'];}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,t,timestamp,result,sides,s,side,orders,i,order,price,amount,_this32=this,_arguments20=arguments;return Promise.resolve().then(function(){params=_arguments20.length>1&&_arguments20[1]!==undefined?_arguments20[1]:{};return _this32.publicGetCurrencyPairMoneyDepthFull(_this32.extend({'currency_pair':_this32.marketId(market)},params));}).then(function(_resp){response=_resp;orderbook=response['data'];t=parseInt(orderbook['dataUpdateTime']);timestamp=parseInt(t/1000);result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this32.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['amount']);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,t,timestamp,bid,ask,_this33=this;return Promise.resolve().then(function(){return _this33.publicGetCurrencyPairMoneyTicker({'currency_pair':_this33.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['data'];t=parseInt(ticker['dataUpdateTime']);timestamp=parseInt(t/1000);bid=undefined;ask=undefined;if(ticker['buy']['value']){bid=parseFloat(ticker['buy']['value']);}if(ticker['sell']['value']){ask=parseFloat(ticker['sell']['value']);}return{'timestamp':timestamp,'datetime':_this33.iso8601(timestamp),'high':parseFloat(ticker['high']['value']),'low':parseFloat(ticker['low']['value']),'bid':bid,'ask':ask,'vwap':parseFloat(ticker['vwap']['value']),'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']['value']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['avg']['value']),'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']['value'])};});},fetchTrades:function fetchTrades(market){var error,_this34=this;error=_this34.id+' switched off the trades endpoint, see their docs at http://docs.anxv2.apiary.io/reference/market-data/currencypairmoneytradefetch-disabled';throw new ExchangeError(error);return _this34.publicGetCurrencyPairMoneyTradeFetch({'currency_pair':_this34.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,order,result,_this35=this,_arguments23=arguments;return Promise.resolve().then(function(){price=_arguments23.length>4&&_arguments23[4]!==undefined?_arguments23[4]:undefined;params=_arguments23.length>5&&_arguments23[5]!==undefined?_arguments23[5]:{};order={'currency_pair':_this35.marketId(market),'amount_int':amount,'type':side};if(type=='limit'){order['price_int']=price;}return _this35.privatePostCurrencyPairOrderAdd(_this35.extend(order,params));}).then(function(_resp){result=_resp;return{'info':result,'id':result['data']};});},cancelOrder:function cancelOrder(id){var _this36=this;return _this36.privatePostCurrencyPairOrderCancel({'oid':id});},nonce:function nonce(){return this.milliseconds();},request:function request(path){var api,method,params,headers,body,request,query,url,nonce,secret,auth,response,_test,_this37=this,_arguments25=arguments;return Promise.resolve().then(function(){api=_arguments25.length>1&&_arguments25[1]!==undefined?_arguments25[1]:'public';method=_arguments25.length>2&&_arguments25[2]!==undefined?_arguments25[2]:'GET';params=_arguments25.length>3&&_arguments25[3]!==undefined?_arguments25[3]:{};headers=_arguments25.length>4&&_arguments25[4]!==undefined?_arguments25[4]:undefined;body=_arguments25.length>5&&_arguments25[5]!==undefined?_arguments25[5]:undefined;request=_this37.implodeParams(path,params);query=_this37.omit(params,_this37.extractParams(path));url=_this37.urls['api']+'/'+_this37.version+'/'+request;if(api=='public'){if(Object.keys(query).length){url+='?'+_this37.urlencode(query);}}else{nonce=_this37.nonce();body=_this37.urlencode(_this37.extend({'nonce':nonce},query));secret=_this37.base64ToBinary(_this37.secret);auth=request+"\0"+body;headers={'Content-Type':'application/x-www-form-urlencoded','Rest-Key':_this37.apiKey,'Rest-Sign':_this37.hmac(_this37.encode(auth),secret,'sha512','base64')};}return _this37.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test='result'in response;if(_test&&response['result']=='success'){return response;}else{throw new ExchangeError(_this37.id+' '+_this37.json(response));}});}};//-----------------------------------------------------------------------------
var bit2c={'id':'bit2c','name':'Bit2C','countries':'IL',// Israel
'rateLimit':3000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg','api':'https://www.bit2c.co.il','www':'https://www.bit2c.co.il','doc':['https://www.bit2c.co.il/home/api','https://github.com/OferE/bit2c']},'api':{'public':{'get':['Exchanges/{pair}/Ticker','Exchanges/{pair}/orderbook','Exchanges/{pair}/trades']},'private':{'post':['Account/Balance','Account/Balance/v2','Merchant/CreateCheckout','Order/AccountHistory','Order/AddCoinFundsRequest','Order/AddFund','Order/AddOrder','Order/AddOrderMarketPriceBuy','Order/AddOrderMarketPriceSell','Order/CancelOrder','Order/MyOrders','Payment/GetMyId','Payment/Send']}},'markets':{'BTC/NIS':{'id':'BtcNis','symbol':'BTC/NIS','base':'BTC','quote':'NIS'},'LTC/BTC':{'id':'LtcBtc','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'LTC/NIS':{'id':'LtcNis','symbol':'LTC/NIS','base':'LTC','quote':'NIS'}},fetchBalance:function fetchBalance(){var balance,result,c,currency,account,available,_this38=this;return Promise.resolve().then(function(){return _this38.privatePostAccountBalanceV2();}).then(function(_resp){balance=_resp;result={'info':balance};for(c=0;c<_this38.currencies.length;c++){currency=_this38.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balance){available='AVAILABLE_'+currency;account['free']=balance[available];account['total']=balance[currency];account['used']=account['total']-account['free'];}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_timestamp2,_this39=this,_arguments27=arguments;return Promise.resolve().then(function(){params=_arguments27.length>1&&_arguments27[1]!==undefined?_arguments27[1]:{};return _this39.publicGetExchangesPairOrderbook(_this39.extend({'pair':_this39.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this39.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this39.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order[0];amount=order[1];_timestamp2=order[2]*1000;result[side].push([price,amount,_timestamp2]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this40=this;return Promise.resolve().then(function(){return _this40.publicGetExchangesPairTicker({'pair':_this40.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=_this40.milliseconds();return{'timestamp':timestamp,'datetime':_this40.iso8601(timestamp),'high':parseFloat(ticker['h']),'low':parseFloat(ticker['l']),'bid':undefined,'ask':undefined,'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['ll']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['av']),'baseVolume':undefined,'quoteVolume':parseFloat(ticker['a'])};});},fetchTrades:function fetchTrades(market){var _this41=this;return _this41.publicGetExchangesPairTrades({'pair':_this41.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,result,_this42=this,_arguments30=arguments;return Promise.resolve().then(function(){price=_arguments30.length>4&&_arguments30[4]!==undefined?_arguments30[4]:undefined;params=_arguments30.length>5&&_arguments30[5]!==undefined?_arguments30[5]:{};method='privatePostOrderAddOrder';order={'Amount':amount,'Pair':_this42.marketId(market)};if(type=='market'){method+='MarketPrice'+_this42.capitalize(side);}else{order['Price']=price;order['Total']=amount*price;order['IsBid']=side=='buy';}return _this42[method](_this42.extend(order,params));}).then(function(_resp){result=_resp;return{'info':result,'id':result['NewOrder']['id']};});},cancelOrder:function cancelOrder(id){var _this43=this;return _this43.privatePostOrderCancelOrder({'id':id});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api']+'/'+this.implodeParams(path,params);if(api=='public'){url+='.json';}else{var nonce=this.nonce();var query=this.extend({'nonce':nonce},params);body=this.urlencode(query);headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'key':this.apiKey,'sign':this.hmac(this.encode(body),this.encode(this.secret),'sha512','base64')};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bitbay={'id':'bitbay','name':'BitBay','countries':['PL','EU'],// Poland
'rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766132-978a7bd8-5ece-11e7-9540-bc96d1e9bbb8.jpg','www':'https://bitbay.net','api':{'public':'https://bitbay.net/API/Public','private':'https://bitbay.net/API/Trading/tradingApi.php'},'doc':['https://bitbay.net/public-api','https://bitbay.net/account/tab-api','https://github.com/BitBayNet/API']},'api':{'public':{'get':['{id}/all','{id}/market','{id}/orderbook','{id}/ticker','{id}/trades']},'private':{'post':['info','trade','cancel','orderbook','orders','transfer','withdraw','history','transactions']}},'markets':{'BTC/USD':{'id':'BTCUSD','symbol':'BTC/USD','base':'BTC','quote':'USD'},'BTC/EUR':{'id':'BTCEUR','symbol':'BTC/EUR','base':'BTC','quote':'EUR'},'BTC/PLN':{'id':'BTCPLN','symbol':'BTC/PLN','base':'BTC','quote':'PLN'},'LTC/USD':{'id':'LTCUSD','symbol':'LTC/USD','base':'LTC','quote':'USD'},'LTC/EUR':{'id':'LTCEUR','symbol':'LTC/EUR','base':'LTC','quote':'EUR'},'LTC/PLN':{'id':'LTCPLN','symbol':'LTC/PLN','base':'LTC','quote':'PLN'},'LTC/BTC':{'id':'LTCBTC','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'ETH/USD':{'id':'ETHUSD','symbol':'ETH/USD','base':'ETH','quote':'USD'},'ETH/EUR':{'id':'ETHEUR','symbol':'ETH/EUR','base':'ETH','quote':'EUR'},'ETH/PLN':{'id':'ETHPLN','symbol':'ETH/PLN','base':'ETH','quote':'PLN'},'ETH/BTC':{'id':'ETHBTC','symbol':'ETH/BTC','base':'ETH','quote':'BTC'},'LSK/USD':{'id':'LSKUSD','symbol':'LSK/USD','base':'LSK','quote':'USD'},'LSK/EUR':{'id':'LSKEUR','symbol':'LSK/EUR','base':'LSK','quote':'EUR'},'LSK/PLN':{'id':'LSKPLN','symbol':'LSK/PLN','base':'LSK','quote':'PLN'},'LSK/BTC':{'id':'LSKBTC','symbol':'LSK/BTC','base':'LSK','quote':'BTC'}},fetchBalance:function fetchBalance(){var response,balance,result,c,currency,account,_this44=this;return Promise.resolve().then(function(){return _this44.privatePostInfo();}).then(function(_resp){response=_resp;balance=response['balances'];result={'info':balance};for(c=0;c<_this44.currencies.length;c++){currency=_this44.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balance){account['free']=parseFloat(balance[currency]['available']);account['used']=parseFloat(balance[currency]['locked']);account['total']=_this44.sum(account['free'],account['used']);}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,_this45=this,_arguments33=arguments;return Promise.resolve().then(function(){params=_arguments33.length>1&&_arguments33[1]!==undefined?_arguments33[1]:{};return _this45.publicGetIdOrderbook(_this45.extend({'id':_this45.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this45.milliseconds();result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this45.iso8601(timestamp)};return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this46=this;return Promise.resolve().then(function(){return _this46.publicGetIdTicker({'id':_this46.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=_this46.milliseconds();return{'timestamp':timestamp,'datetime':_this46.iso8601(timestamp),'high':parseFloat(ticker['max']),'low':parseFloat(ticker['min']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':parseFloat(ticker['vwap']),'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['average']),'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this47=this;return _this47.publicGetIdTrades({'id':_this47.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,p,_this48=this,_arguments36=arguments;price=_arguments36.length>4&&_arguments36[4]!==undefined?_arguments36[4]:undefined;params=_arguments36.length>5&&_arguments36[5]!==undefined?_arguments36[5]:{};p=_this48.market(market);return _this48.privatePostTrade(_this48.extend({'type':side,'currency':p['base'],'amount':amount,'payment_currency':p['quote'],'rate':price},params));},cancelOrder:function cancelOrder(id){var _this49=this;return _this49.privatePostCancel({'id':id});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api'][api];if(api=='public'){url+='/'+this.implodeParams(path,params)+'.json';}else{body=this.urlencode(this.extend({'method':path,'moment':this.nonce()},params));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'API-Key':this.apiKey,'API-Hash':this.hmac(this.encode(body),this.encode(this.secret),'sha512')};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bitbays={'id':'bitbays','name':'BitBays','countries':['CN','GB','HK','AU','CA'],'rateLimit':1500,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27808599-983687d2-6051-11e7-8d95-80dfcbe5cbb4.jpg','api':'https://bitbays.com/api','www':'https://bitbays.com','doc':'https://bitbays.com/help/api/'},'api':{'public':{'get':['ticker','trades','depth']},'private':{'post':['cancel','info','orders','order','transactions','trade']}},'markets':{'BTC/USD':{'id':'btc_usd','symbol':'BTC/USD','base':'BTC','quote':'USD'},'BTC/CNY':{'id':'btc_cny','symbol':'BTC/CNY','base':'BTC','quote':'CNY'},'ODS/BTC':{'id':'ods_btc','symbol':'ODS/BTC','base':'ODS','quote':'BTC'},'LSK/BTC':{'id':'lsk_btc','symbol':'LSK/BTC','base':'LSK','quote':'BTC'},'LSK/CNY':{'id':'lsk_cny','symbol':'LSK/CNY','base':'LSK','quote':'CNY'}},fetchBalance:function fetchBalance(){var response,balance,result,c,currency,lowercase,account,_this50=this;return Promise.resolve().then(function(){return _this50.privatePostInfo();}).then(function(_resp){response=_resp;balance=response['result']['wallet'];result={'info':balance};for(c=0;c<_this50.currencies.length;c++){currency=_this50.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if(lowercase in balance){account['free']=parseFloat(balance[lowercase]['avail']);account['used']=parseFloat(balance[lowercase]['lock']);account['total']=_this50.sum(account['free'],account['used']);}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this51=this,_arguments39=arguments;return Promise.resolve().then(function(){params=_arguments39.length>1&&_arguments39[1]!==undefined?_arguments39[1]:{};return _this51.publicGetDepth(_this51.extend({'market':_this51.marketId(market)},params));}).then(function(_resp){response=_resp;orderbook=response['result'];timestamp=_this51.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this51.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,_this52=this;return Promise.resolve().then(function(){return _this52.publicGetTicker({'market':_this52.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['result'];timestamp=_this52.milliseconds();return{'timestamp':timestamp,'datetime':_this52.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this53=this;return _this53.publicGetTrades({'market':_this53.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this54=this,_arguments42=arguments;return Promise.resolve().then(function(){price=_arguments42.length>4&&_arguments42[4]!==undefined?_arguments42[4]:undefined;params=_arguments42.length>5&&_arguments42[5]!==undefined?_arguments42[5]:{};order={'market':_this54.marketId(market),'op':side,'amount':amount};if(type=='market'){order['order_type']=1;order['price']=price;}else{order['order_type']=0;}return _this54.privatePostTrade(_this54.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['result']['id'].toString()};});},cancelOrder:function cancelOrder(id){var _this55=this;return _this55.privatePostCancel({'id':id});},request:function request(path){var api,method,params,headers,body,url,nonce,response,_test2,_this56=this,_arguments44=arguments;return Promise.resolve().then(function(){api=_arguments44.length>1&&_arguments44[1]!==undefined?_arguments44[1]:'public';method=_arguments44.length>2&&_arguments44[2]!==undefined?_arguments44[2]:'GET';params=_arguments44.length>3&&_arguments44[3]!==undefined?_arguments44[3]:{};headers=_arguments44.length>4&&_arguments44[4]!==undefined?_arguments44[4]:undefined;body=_arguments44.length>5&&_arguments44[5]!==undefined?_arguments44[5]:undefined;url=_this56.urls['api']+'/'+_this56.version+'/'+path;if(api=='public'){if(Object.keys(params).length){url+='?'+_this56.urlencode(params);}}else{nonce=_this56.nonce();body=_this56.urlencode(_this56.extend({'nonce':nonce},params));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Key':_this56.apiKey,'Sign':_this56.hmac(_this56.encode(body),_this56.secret,'sha512')};}return _this56.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test2='status'in response;if(_test2&&response['status']==200){return response;}else{throw new ExchangeError(_this56.id+' '+_this56.json(response));}});}};//-----------------------------------------------------------------------------
var bitcoincoid={'id':'bitcoincoid','name':'Bitcoin.co.id','countries':'ID',// Indonesia
'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766138-043c7786-5ecf-11e7-882b-809c14f38b53.jpg','api':{'public':'https://vip.bitcoin.co.id/api','private':'https://vip.bitcoin.co.id/tapi'},'www':'https://www.bitcoin.co.id','doc':['https://vip.bitcoin.co.id/downloads/BITCOINCOID-API-DOCUMENTATION.pdf','https://vip.bitcoin.co.id/trade_api']},'api':{'public':{'get':['{pair}/ticker','{pair}/trades','{pair}/depth']},'private':{'post':['getInfo','transHistory','trade','tradeHistory','openOrders','cancelOrder']}},'markets':{'BTC/IDR':{'id':'btc_idr','symbol':'BTC/IDR','base':'BTC','quote':'IDR','baseId':'btc','quoteId':'idr'},'BTS/BTC':{'id':'bts_btc','symbol':'BTS/BTC','base':'BTS','quote':'BTC','baseId':'bts','quoteId':'btc'},'DASH/BTC':{'id':'drk_btc','symbol':'DASH/BTC','base':'DASH','quote':'BTC','baseId':'drk','quoteId':'btc'},'DOGE/BTC':{'id':'doge_btc','symbol':'DOGE/BTC','base':'DOGE','quote':'BTC','baseId':'doge','quoteId':'btc'},'ETH/BTC':{'id':'eth_btc','symbol':'ETH/BTC','base':'ETH','quote':'BTC','baseId':'eth','quoteId':'btc'},'LTC/BTC':{'id':'ltc_btc','symbol':'LTC/BTC','base':'LTC','quote':'BTC','baseId':'ltc','quoteId':'btc'},'NXT/BTC':{'id':'nxt_btc','symbol':'NXT/BTC','base':'NXT','quote':'BTC','baseId':'nxt','quoteId':'btc'},'STR/BTC':{'id':'str_btc','symbol':'STR/BTC','base':'STR','quote':'BTC','baseId':'str','quoteId':'btc'},'NEM/BTC':{'id':'nem_btc','symbol':'NEM/BTC','base':'NEM','quote':'BTC','baseId':'nem','quoteId':'btc'},'XRP/BTC':{'id':'xrp_btc','symbol':'XRP/BTC','base':'XRP','quote':'BTC','baseId':'xrp','quoteId':'btc'}},fetchBalance:function fetchBalance(){var response,balance,frozen,result,c,currency,lowercase,account,_this57=this;return Promise.resolve().then(function(){return _this57.privatePostGetInfo();}).then(function(_resp){response=_resp;balance=response['return']['balance'];frozen=response['return']['balance_hold'];result={'info':balance};for(c=0;c<_this57.currencies.length;c++){currency=_this57.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if(lowercase in balance){account['free']=parseFloat(balance[lowercase]);}if(lowercase in frozen){account['used']=parseFloat(frozen[lowercase]);}account['total']=_this57.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this58=this,_arguments46=arguments;return Promise.resolve().then(function(){params=_arguments46.length>1&&_arguments46[1]!==undefined?_arguments46[1]:{};return _this58.publicGetPairDepth(_this58.extend({'pair':_this58.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this58.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this58.iso8601(timestamp)};sides={'bids':'buy','asks':'sell'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[key].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var pair,response,ticker,timestamp,baseVolume,quoteVolume,_this59=this;return Promise.resolve().then(function(){pair=_this59.market(market);return _this59.publicGetPairTicker({'pair':pair['id']});}).then(function(_resp){response=_resp;ticker=response['ticker'];timestamp=parseFloat(ticker['server_time'])*1000;baseVolume='vol_'+pair['baseId'].toLowerCase();quoteVolume='vol_'+pair['quoteId'].toLowerCase();return{'timestamp':timestamp,'datetime':_this59.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker[baseVolume]),'quoteVolume':parseFloat(ticker[quoteVolume]),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this60=this;return _this60.publicGetPairTrades({'pair':_this60.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,p,order,base,result,_this61=this,_arguments49=arguments;price=_arguments49.length>4&&_arguments49[4]!==undefined?_arguments49[4]:undefined;params=_arguments49.length>5&&_arguments49[5]!==undefined?_arguments49[5]:{};p=_this61.market(market);order={'pair':p['id'],'type':side,'price':price};base=p['base'].toLowerCase();order[base]=amount;result=_this61.privatePostTrade(_this61.extend(order,params));return{'info':result,'id':result['return']['order_id'].toString()};},cancelOrder:function cancelOrder(id){var params,_this62=this,_arguments50=arguments;params=_arguments50.length>1&&_arguments50[1]!==undefined?_arguments50[1]:{};return _this62.privatePostCancelOrder(_this62.extend({'id':id},params));},request:function request(path){var api,method,params,headers,body,url,response,_this63=this,_arguments51=arguments;return Promise.resolve().then(function(){api=_arguments51.length>1&&_arguments51[1]!==undefined?_arguments51[1]:'public';method=_arguments51.length>2&&_arguments51[2]!==undefined?_arguments51[2]:'GET';params=_arguments51.length>3&&_arguments51[3]!==undefined?_arguments51[3]:{};headers=_arguments51.length>4&&_arguments51[4]!==undefined?_arguments51[4]:undefined;body=_arguments51.length>5&&_arguments51[5]!==undefined?_arguments51[5]:undefined;url=_this63.urls['api'][api];if(api=='public'){url+='/'+_this63.implodeParams(path,params);}else{body=_this63.urlencode(_this63.extend({'method':path,'nonce':_this63.nonce()},params));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Key':_this63.apiKey,'Sign':_this63.hmac(_this63.encode(body),_this63.encode(_this63.secret),'sha512')};}return _this63.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this63.id+' '+response['error']);}return response;});}};//-----------------------------------------------------------------------------
var bitfinex={'id':'bitfinex','name':'Bitfinex','countries':'US','version':'v1','rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg','api':'https://api.bitfinex.com','www':'https://www.bitfinex.com','doc':['https://bitfinex.readme.io/v1/docs','https://bitfinex.readme.io/v2/docs','https://github.com/bitfinexcom/bitfinex-api-node']},'api':{'public':{'get':['book/{symbol}','candles/{symbol}','lendbook/{currency}','lends/{currency}','pubticker/{symbol}','stats/{symbol}','symbols','symbols_details','today','trades/{symbol}']},'private':{'post':['account_infos','balances','basket_manage','credits','deposit/new','funding/close','history','history/movements','key_info','margin_infos','mytrades','offer/cancel','offer/new','offer/status','offers','order/cancel','order/cancel/all','order/cancel/multi','order/cancel/replace','order/new','order/new/multi','order/status','orders','position/claim','positions','summary','taken_funds','total_taken_funds','transfer','unused_taken_funds','withdraw']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,baseId,quoteId,base,quote,symbol,_this64=this;return Promise.resolve().then(function(){return _this64.publicGetSymbolsDetails();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['pair'].toUpperCase();baseId=id.slice(0,3);quoteId=id.slice(3,6);base=baseId;quote=quoteId;// issue #4 Bitfinex names Dash as DSH, instead of DASH
if(base=='DSH'){base='DASH';}symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'baseId':baseId,'quoteId':quoteId,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,b,account,currency,uppercase,result,c,_currency,_account,_this65=this;return Promise.resolve().then(function(){return _this65.loadMarkets();}).then(function(){return _this65.privatePostBalances();}).then(function(_resp){response=_resp;balances={};for(b=0;b<response.length;b++){account=response[b];if(account['type']=='exchange'){currency=account['currency'];// issue #4 Bitfinex names Dash as DSH, instead of DASH
if(currency=='DSH'){currency='DASH';}uppercase=currency.toUpperCase();balances[uppercase]=account;}}result={'info':response};for(c=0;c<_this65.currencies.length;c++){_currency=_this65.currencies[c];_account={'free':undefined,'used':undefined,'total':undefined};if(_currency in balances){_account['free']=parseFloat(balances[_currency]['available']);_account['total']=parseFloat(balances[_currency]['amount']);_account['used']=_account['total']-_account['free'];}result[_currency]=_account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_timestamp3,_this66=this,_arguments54=arguments;return Promise.resolve().then(function(){params=_arguments54.length>1&&_arguments54[1]!==undefined?_arguments54[1]:{};return _this66.loadMarkets();}).then(function(){return _this66.publicGetBookSymbol(_this66.extend({'symbol':_this66.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this66.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this66.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['amount']);_timestamp3=parseInt(parseFloat(order['timestamp']));result[side].push([price,amount,_timestamp3]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this67=this;return Promise.resolve().then(function(){return _this67.loadMarkets();}).then(function(){return _this67.publicGetPubtickerSymbol({'symbol':_this67.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=parseFloat(ticker['timestamp'])*1000;return{'timestamp':timestamp,'datetime':_this67.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last_price']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['mid']),'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this68=this;return Promise.resolve().then(function(){return _this68.loadMarkets();}).then(function(){return _this68.publicGetTradesSymbol({'symbol':_this68.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,result,_this69=this,_arguments57=arguments;return Promise.resolve().then(function(){price=_arguments57.length>4&&_arguments57[4]!==undefined?_arguments57[4]:undefined;params=_arguments57.length>5&&_arguments57[5]!==undefined?_arguments57[5]:{};return _this69.loadMarkets();}).then(function(){order={'symbol':_this69.marketId(market),'amount':amount.toString(),'side':side,'type':'exchange '+type,'ocoorder':false,'buy_price_oco':0,'sell_price_oco':0};if(type=='market'){order['price']=_this69.nonce().toString();}else{order['price']=price;}return _this69.privatePostOrderNew(_this69.extend(order,params));}).then(function(_resp){result=_resp;return{'info':result,'id':result['order_id'].toString()};});},cancelOrder:function cancelOrder(id){var _this70=this;return Promise.resolve().then(function(){return _this70.loadMarkets();}).then(function(){return _this70.privatePostOrderCancel({'order_id':id});});},nonce:function nonce(){return this.milliseconds();},request:function request(path){var api,method,params,headers,body,request,query,url,nonce,payload,secret,response,_this71=this,_arguments59=arguments;return Promise.resolve().then(function(){api=_arguments59.length>1&&_arguments59[1]!==undefined?_arguments59[1]:'public';method=_arguments59.length>2&&_arguments59[2]!==undefined?_arguments59[2]:'GET';params=_arguments59.length>3&&_arguments59[3]!==undefined?_arguments59[3]:{};headers=_arguments59.length>4&&_arguments59[4]!==undefined?_arguments59[4]:undefined;body=_arguments59.length>5&&_arguments59[5]!==undefined?_arguments59[5]:undefined;request='/'+_this71.version+'/'+_this71.implodeParams(path,params);query=_this71.omit(params,_this71.extractParams(path));url=_this71.urls['api']+request;if(api=='public'){if(Object.keys(query).length){url+='?'+_this71.urlencode(query);}}else{nonce=_this71.nonce();query=_this71.extend({'nonce':nonce.toString(),'request':request},query);query=_this71.json(query);query=_this71.encode(query);payload=_this71.stringToBase64(query);secret=_this71.encode(_this71.secret);headers={'X-BFX-APIKEY':_this71.apiKey,'X-BFX-PAYLOAD':payload,'X-BFX-SIGNATURE':_this71.hmac(payload,secret,'sha384')};}return _this71.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('message'in response){throw new ExchangeError(_this71.id+' '+_this71.json(response));}return response;});}};//-----------------------------------------------------------------------------
var bitflyer={'id':'bitflyer','name':'bitFlyer','countries':'JP','version':'v1','rateLimit':500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg','api':'https://api.bitflyer.jp','www':'https://bitflyer.jp','doc':'https://bitflyer.jp/API'},'api':{'public':{'get':['getmarkets',// or 'markets'
'getboard',// or 'board'
'getticker',// or 'ticker'
'getexecutions',// or 'executions'
'gethealth','getchats']},'private':{'get':['getpermissions','getbalance','getcollateral','getcollateralaccounts','getaddresses','getcoinins','getcoinouts','getbankaccounts','getdeposits','getwithdrawals','getchildorders','getparentorders','getparentorder','getexecutions','getpositions','gettradingcommission'],'post':['sendcoin','withdraw','sendchildorder','cancelchildorder','sendparentorder','cancelparentorder','cancelallchildorders']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,currencies,base,quote,symbol,numCurrencies,_this72=this;return Promise.resolve().then(function(){return _this72.publicGetMarkets();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['product_code'];currencies=id.split('_');base=undefined;quote=undefined;symbol=id;numCurrencies=currencies.length;if(numCurrencies==2){base=currencies[0];quote=currencies[1];symbol=base+'/'+quote;}result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,b,account,currency,result,c,_currency2,_account2,_this73=this;return Promise.resolve().then(function(){return _this73.loadMarkets();}).then(function(){return _this73.privateGetBalance();}).then(function(_resp){response=_resp;balances={};for(b=0;b<response.length;b++){account=response[b];currency=account['currency_code'];balances[currency]=account;}result={'info':response};for(c=0;c<_this73.currencies.length;c++){_currency2=_this73.currencies[c];_account2={'free':undefined,'used':undefined,'total':undefined};if(_currency2 in balances){_account2['total']=balances[_currency2]['amount'];_account2['free']=balances[_currency2]['available'];_account2['used']=_account2['total']-_account2['free'];}result[_currency2]=_account2;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this74=this,_arguments62=arguments;return Promise.resolve().then(function(){params=_arguments62.length>1&&_arguments62[1]!==undefined?_arguments62[1]:{};return _this74.loadMarkets();}).then(function(){return _this74.publicGetBoard(_this74.extend({'product_code':_this74.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this74.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this74.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['size']);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this75=this;return Promise.resolve().then(function(){return _this75.loadMarkets();}).then(function(){return _this75.publicGetTicker({'product_code':_this75.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=_this75.parse8601(ticker['timestamp']);return{'timestamp':timestamp,'datetime':_this75.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['best_bid']),'ask':parseFloat(ticker['best_ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['ltp']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['volume_by_product']),'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this76=this;return Promise.resolve().then(function(){return _this76.loadMarkets();}).then(function(){return _this76.publicGetExecutions({'product_code':_this76.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,result,_this77=this,_arguments65=arguments;return Promise.resolve().then(function(){price=_arguments65.length>4&&_arguments65[4]!==undefined?_arguments65[4]:undefined;params=_arguments65.length>5&&_arguments65[5]!==undefined?_arguments65[5]:{};return _this77.loadMarkets();}).then(function(){order={'product_code':_this77.marketId(market),'child_order_type':type.toUpperCase(),'side':side.toUpperCase(),'price':price,'size':amount};return _this77.privatePostSendchildorder(_this77.extend(order,params));}).then(function(_resp){result=_resp;return{'info':result,'id':result['child_order_acceptance_id']};});},cancelOrder:function cancelOrder(id){var params,_this78=this,_arguments66=arguments;return Promise.resolve().then(function(){params=_arguments66.length>1&&_arguments66[1]!==undefined?_arguments66[1]:{};return _this78.loadMarkets();}).then(function(){return _this78.privatePostCancelchildorder(_this78.extend({'parent_order_id':id},params));});},request:function request(path){var api,method,params,headers,body,request,url,nonce,auth,_this79=this,_arguments67=arguments;api=_arguments67.length>1&&_arguments67[1]!==undefined?_arguments67[1]:'public';method=_arguments67.length>2&&_arguments67[2]!==undefined?_arguments67[2]:'GET';params=_arguments67.length>3&&_arguments67[3]!==undefined?_arguments67[3]:{};headers=_arguments67.length>4&&_arguments67[4]!==undefined?_arguments67[4]:undefined;body=_arguments67.length>5&&_arguments67[5]!==undefined?_arguments67[5]:undefined;request='/'+_this79.version+'/'+path;if(api=='private'){request='/me'+request;}url=_this79.urls['api']+request;if(api=='public'){if(Object.keys(params).length){url+='?'+_this79.urlencode(params);}}else{nonce=_this79.nonce().toString();body=_this79.json(params);auth=[nonce,method,request,body].join('');headers={'ACCESS-KEY':_this79.apiKey,'ACCESS-TIMESTAMP':nonce,'ACCESS-SIGN':_this79.hmac(_this79.encode(auth),_this79.secret),'Content-Type':'application/json'};}return _this79.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bitlish={'id':'bitlish','name':'bitlish','countries':['GB','EU','RU'],'rateLimit':1500,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766275-dcfc6c30-5ed3-11e7-839d-00a846385d0b.jpg','api':'https://bitlish.com/api','www':'https://bitlish.com','doc':'https://bitlish.com/api'},'api':{'public':{'get':['instruments','ohlcv','pairs','tickers','trades_depth','trades_history']},'private':{'post':['accounts_operations','balance','cancel_trade','cancel_trades_by_ids','cancel_all_trades','create_bcode','create_template_wallet','create_trade','deposit','list_accounts_operations_from_ts','list_active_trades','list_bcodes','list_my_matches_from_ts','list_my_trades','list_my_trads_from_ts','list_payment_methods','list_payments','redeem_code','resign','signin','signout','trade_details','trade_options','withdraw','withdraw_by_id']}},fetchMarkets:function fetchMarkets(){var markets,result,keys,p,market,id,symbol,_symbol$split,_symbol$split2,base,quote,_this80=this;return Promise.resolve().then(function(){return _this80.publicGetPairs();}).then(function(_resp){markets=_resp;result=[];keys=Object.keys(markets);for(p=0;p<keys.length;p++){market=markets[keys[p]];id=market['id'];symbol=market['name'];_symbol$split=symbol.split('/');_symbol$split2=_slicedToArray(_symbol$split,2);base=_symbol$split2[0];quote=_symbol$split2[1];// issue #4 bitlish names Dash as DSH, instead of DASH
if(base=='DSH'){base='DASH';}symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['max']),'low':parseFloat(ticker['min']),'bid':undefined,'ask':undefined,'vwap':undefined,'open':undefined,'close':undefined,'first':parseFloat(ticker['first']),'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':undefined,'info':ticker};},fetchTickers:function fetchTickers(){var tickers,ids,result,i,id,market,symbol,ticker,_this81=this;return Promise.resolve().then(function(){return _this81.loadMarkets();}).then(function(){return _this81.publicGetTickers();}).then(function(_resp){tickers=_resp;ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this81.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this81.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,tickers,ticker,_this82=this;return Promise.resolve().then(function(){return _this82.loadMarkets();}).then(function(){p=_this82.market(market);return _this82.publicGetTickers();}).then(function(_resp){tickers=_resp;ticker=tickers[p['id']];return _this82.parseTicker(ticker,p);});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this83=this,_arguments71=arguments;return Promise.resolve().then(function(){params=_arguments71.length>1&&_arguments71[1]!==undefined?_arguments71[1]:{};return _this83.loadMarkets();}).then(function(){return _this83.publicGetTradesDepth(_this83.extend({'pair_id':_this83.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=parseInt(parseInt(orderbook['last'])/1000);result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this83.iso8601(timestamp)};sides={'bids':'bid','asks':'ask'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['volume']);result[key].push([price,amount]);}}return result;});},fetchTrades:function fetchTrades(market){var _this84=this;return Promise.resolve().then(function(){return _this84.loadMarkets();}).then(function(){return _this84.publicGetTradesHistory({'pair_id':_this84.marketId(market)});});},fetchBalance:function fetchBalance(){var response,result,currencies,balance,c,currency,account,_c,_currency3,_account3,_this85=this;return Promise.resolve().then(function(){return _this85.loadMarkets();}).then(function(){return _this85.privatePostBalance();}).then(function(_resp){response=_resp;result={'info':response};currencies=Object.keys(response);balance={};for(c=0;c<currencies.length;c++){currency=currencies[c];account=response[currency];currency=currency.toUpperCase();// issue #4 bitlish names Dash as DSH, instead of DASH
if(currency=='DSH'){currency='DASH';}balance[currency]=account;}for(_c=0;_c<_this85.currencies.length;_c++){_currency3=_this85.currencies[_c];_account3={'free':undefined,'used':undefined,'total':undefined};if(_currency3 in balance){_account3['free']=parseFloat(balance[_currency3]['funds']);_account3['used']=parseFloat(balance[_currency3]['holded']);_account3['total']=_this85.sum(_account3['free'],_account3['used']);}result[_currency3]=_account3;}return result;});},signIn:function signIn(){return this.privatePostSignin({'login':this.login,'passwd':this.password});},createOrder:function createOrder(market,type,side,amount){var price,params,order,result,_this86=this,_arguments74=arguments;return Promise.resolve().then(function(){price=_arguments74.length>4&&_arguments74[4]!==undefined?_arguments74[4]:undefined;params=_arguments74.length>5&&_arguments74[5]!==undefined?_arguments74[5]:{};return _this86.loadMarkets();}).then(function(){order={'pair_id':_this86.marketId(market),'dir':side=='buy'?'bid':'ask','amount':amount};if(type=='limit'){order['price']=price;}return _this86.privatePostCreateTrade(_this86.extend(order,params));}).then(function(_resp){result=_resp;return{'info':result,'id':result['id']};});},cancelOrder:function cancelOrder(id){var _this87=this;return Promise.resolve().then(function(){return _this87.loadMarkets();}).then(function(){return _this87.privatePostCancelTrade({'id':id});});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api']+'/'+this.version+'/'+path;if(api=='public'){if(Object.keys(params).length)url+='?'+this.urlencode(params);}else{body=this.json(this.extend({'token':this.apiKey},params));headers={'Content-Type':'application/json'};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bitmarket={'id':'bitmarket','name':'BitMarket','countries':['PL','EU'],'rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27767256-a8555200-5ef9-11e7-96fd-469a65e2b0bd.jpg','api':{'public':'https://www.bitmarket.net','private':'https://www.bitmarket.pl/api2/'// last slash is critical
},'www':['https://www.bitmarket.pl','https://www.bitmarket.net'],'doc':['https://www.bitmarket.net/docs.php?file=api_public.html','https://www.bitmarket.net/docs.php?file=api_private.html','https://github.com/bitmarket-net/api']},'api':{'public':{'get':['json/{market}/ticker','json/{market}/orderbook','json/{market}/trades','json/ctransfer','graphs/{market}/90m','graphs/{market}/6h','graphs/{market}/1d','graphs/{market}/7d','graphs/{market}/1m','graphs/{market}/3m','graphs/{market}/6m','graphs/{market}/1y']},'private':{'post':['info','trade','cancel','orders','trades','history','withdrawals','tradingdesk','tradingdeskStatus','tradingdeskConfirm','cryptotradingdesk','cryptotradingdeskStatus','cryptotradingdeskConfirm','withdraw','withdrawFiat','withdrawPLNPP','withdrawFiatFast','deposit','transfer','transfers','marginList','marginOpen','marginClose','marginCancel','marginModify','marginBalanceAdd','marginBalanceRemove','swapList','swapOpen','swapClose']}},'markets':{'BTC/PLN':{'id':'BTCPLN','symbol':'BTC/PLN','base':'BTC','quote':'PLN'},'BTC/EUR':{'id':'BTCEUR','symbol':'BTC/EUR','base':'BTC','quote':'EUR'},'LTC/PLN':{'id':'LTCPLN','symbol':'LTC/PLN','base':'LTC','quote':'PLN'},'LTC/BTC':{'id':'LTCBTC','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'LiteMineX/BTC':{'id':'LiteMineXBTC','symbol':'LiteMineX/BTC','base':'LiteMineX','quote':'BTC'},'PlnX/BTC':{'id':'PlnxBTC','symbol':'PlnX/BTC','base':'PlnX','quote':'BTC'}},fetchBalance:function fetchBalance(){var response,data,balance,result,c,currency,account,_this88=this;return Promise.resolve().then(function(){return _this88.loadMarkets();}).then(function(){return _this88.privatePostInfo();}).then(function(_resp){response=_resp;data=response['data'];balance=data['balances'];result={'info':data};for(c=0;c<_this88.currencies.length;c++){currency=_this88.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balance['available']){account['free']=balance['available'][currency];}if(currency in balance['blocked']){account['used']=balance['blocked'][currency];}account['total']=_this88.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,_this89=this,_arguments77=arguments;return Promise.resolve().then(function(){params=_arguments77.length>1&&_arguments77[1]!==undefined?_arguments77[1]:{};return _this89.publicGetJsonMarketOrderbook(_this89.extend({'market':_this89.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this89.milliseconds();result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this89.iso8601(timestamp)};return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this90=this;return Promise.resolve().then(function(){return _this90.publicGetJsonMarketTicker({'market':_this90.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=_this90.milliseconds();return{'timestamp':timestamp,'datetime':_this90.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':parseFloat(ticker['vwap']),'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this91=this;return _this91.publicGetJsonMarketTrades({'market':_this91.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,response,result,_this92=this,_arguments80=arguments;return Promise.resolve().then(function(){price=_arguments80.length>4&&_arguments80[4]!==undefined?_arguments80[4]:undefined;params=_arguments80.length>5&&_arguments80[5]!==undefined?_arguments80[5]:{};return _this92.privatePostTrade(_this92.extend({'market':_this92.marketId(market),'type':side,'amount':amount,'rate':price},params));}).then(function(_resp){response=_resp;result={'info':response};if('id'in response['order']){result['id']=response['id'];}return result;});},cancelOrder:function cancelOrder(id){var _this93=this;return _this93.privatePostCancel({'id':id});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api'][api];if(api=='public'){url+='/'+this.implodeParams(path+'.json',params);}else{var nonce=this.nonce();var query=this.extend({'tonce':nonce,'method':path},params);body=this.urlencode(query);headers={'API-Key':this.apiKey,'API-Hash':this.hmac(this.encode(body),this.encode(this.secret),'sha512')};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bitmex={'id':'bitmex','name':'BitMEX','countries':'SC',// Seychelles
'version':'v1','rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg','api':'https://www.bitmex.com','www':'https://www.bitmex.com','doc':['https://www.bitmex.com/app/apiOverview','https://github.com/BitMEX/api-connectors/tree/master/official-http']},'api':{'public':{'get':['announcement','announcement/urgent','funding','instrument','instrument/active','instrument/activeAndIndices','instrument/activeIntervals','instrument/compositeIndex','instrument/indices','insurance','leaderboard','liquidation','orderBook','orderBook/L2','quote','quote/bucketed','schema','schema/websocketHelp','settlement','stats','stats/history','trade','trade/bucketed']},'private':{'get':['apiKey','chat','chat/channels','chat/connected','execution','execution/tradeHistory','notification','order','position','user','user/affiliateStatus','user/checkReferralCode','user/commission','user/depositAddress','user/margin','user/minWithdrawalFee','user/wallet','user/walletHistory','user/walletSummary'],'post':['apiKey','apiKey/disable','apiKey/enable','chat','order','order/bulk','order/cancelAllAfter','order/closePosition','position/isolate','position/leverage','position/riskLimit','position/transferMargin','user/cancelWithdrawal','user/confirmEmail','user/confirmEnableTFA','user/confirmWithdrawal','user/disableTFA','user/logout','user/logoutAll','user/preferences','user/requestEnableTFA','user/requestWithdrawal'],'put':['order','order/bulk','user'],'delete':['apiKey','order','order/all']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,isFuturesContract,symbol,_this94=this;return Promise.resolve().then(function(){return _this94.publicGetInstrumentActive();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['symbol'];base=market['underlying'];quote=market['quoteCurrency'];isFuturesContract=id!=base+quote;base=_this94.commonCurrencyCode(base);quote=_this94.commonCurrencyCode(quote);symbol=isFuturesContract?id:base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,result,b,balance,currency,account,_this95=this;return Promise.resolve().then(function(){return _this95.loadMarkets();}).then(function(){return _this95.privateGetUserMargin({'currency':'all'});}).then(function(_resp){response=_resp;result={'info':response};for(b=0;b<response.length;b++){balance=response[b];currency=balance['currency'].toUpperCase();currency=_this95.commonCurrencyCode(currency);account={'free':balance['availableMargin'],'used':undefined,'total':balance['amount']};if(currency=='BTC'){account['free']=account['free']*0.00000001;account['total']=account['total']*0.00000001;}account['used']=account['total']-account['free'];result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,o,order,side,amount,price,_this96=this,_arguments84=arguments;return Promise.resolve().then(function(){params=_arguments84.length>1&&_arguments84[1]!==undefined?_arguments84[1]:{};return _this96.loadMarkets();}).then(function(){return _this96.publicGetOrderBookL2(_this96.extend({'symbol':_this96.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this96.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this96.iso8601(timestamp)};for(o=0;o<orderbook.length;o++){order=orderbook[o];side=order['side']=='Sell'?'asks':'bids';amount=order['size'];price=order['price'];result[side].push([price,amount]);}result['bids']=_this96.sortBy(result['bids'],0,true);result['asks']=_this96.sortBy(result['asks'],0);return result;});},fetchTicker:function fetchTicker(market){var request,quotes,quotesLength,quote,tickers,ticker,timestamp,_this97=this;return Promise.resolve().then(function(){return _this97.loadMarkets();}).then(function(){request={'symbol':_this97.marketId(market),'binSize':'1d','partial':true,'count':1,'reverse':true};return _this97.publicGetQuoteBucketed(request);}).then(function(_resp){quotes=_resp;quotesLength=quotes.length;quote=quotes[quotesLength-1];return _this97.publicGetTradeBucketed(request);}).then(function(_resp){tickers=_resp;ticker=tickers[0];timestamp=_this97.milliseconds();return{'timestamp':timestamp,'datetime':_this97.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(quote['bidPrice']),'ask':parseFloat(quote['askPrice']),'vwap':parseFloat(ticker['vwap']),'open':undefined,'close':parseFloat(ticker['close']),'first':undefined,'last':undefined,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['homeNotional']),'quoteVolume':parseFloat(ticker['foreignNotional']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this98=this;return Promise.resolve().then(function(){return _this98.loadMarkets();}).then(function(){return _this98.publicGetTrade({'symbol':_this98.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this99=this,_arguments87=arguments;return Promise.resolve().then(function(){price=_arguments87.length>4&&_arguments87[4]!==undefined?_arguments87[4]:undefined;params=_arguments87.length>5&&_arguments87[5]!==undefined?_arguments87[5]:{};return _this99.loadMarkets();}).then(function(){order={'symbol':_this99.marketId(market),'side':_this99.capitalize(side),'orderQty':amount,'ordType':_this99.capitalize(type)};if(type=='limit'){order['rate']=price;}return _this99.privatePostOrder(_this99.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['orderID']};});},cancelOrder:function cancelOrder(id){var _this100=this;return Promise.resolve().then(function(){return _this100.loadMarkets();}).then(function(){return _this100.privateDeleteOrder({'orderID':id});});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var query='/api/'+this.version+'/'+path;if(Object.keys(params).length)query+='?'+this.urlencode(params);var url=this.urls['api']+query;if(api=='private'){var nonce=this.nonce().toString();if(method=='POST')if(Object.keys(params).length)body=this.json(params);var request=[method,query,nonce,body||''].join('');headers={'Content-Type':'application/json','api-nonce':nonce,'api-key':this.apiKey,'api-signature':this.hmac(this.encode(request),this.encode(this.secret))};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bitso={'id':'bitso','name':'Bitso','countries':'MX',// Mexico
'rateLimit':2000,// 30 requests per minute
'version':'v3','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766335-715ce7aa-5ed5-11e7-88a8-173a27bb30fe.jpg','api':'https://api.bitso.com','www':'https://bitso.com','doc':'https://bitso.com/api_info'},'api':{'public':{'get':['available_books','ticker','order_book','trades']},'private':{'get':['account_status','balance','fees','fundings','fundings/{fid}','funding_destination','kyc_documents','ledger','ledger/trades','ledger/fees','ledger/fundings','ledger/withdrawals','mx_bank_codes','open_orders','order_trades/{oid}','orders/{oid}','user_trades','user_trades/{tid}','withdrawals/','withdrawals/{wid}'],'post':['bitcoin_withdrawal','debit_card_withdrawal','ether_withdrawal','orders','phone_number','phone_verification','phone_withdrawal','spei_withdrawal'],'delete':['orders/{oid}','orders/all']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,symbol,_symbol$split3,_symbol$split4,base,quote,_this101=this;return Promise.resolve().then(function(){return _this101.publicGetAvailableBooks();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets['payload'].length;p++){market=markets['payload'][p];id=market['book'];symbol=id.toUpperCase().replace('_','/');_symbol$split3=symbol.split('/');_symbol$split4=_slicedToArray(_symbol$split3,2);base=_symbol$split4[0];quote=_symbol$split4[1];result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,account,_this102=this;return Promise.resolve().then(function(){return _this102.loadMarkets();}).then(function(){return _this102.privateGetBalance();}).then(function(_resp){response=_resp;balances=response['payload']['balances'];result={'info':response};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'].toUpperCase();account={'free':parseFloat(balance['available']),'used':parseFloat(balance['locked']),'total':parseFloat(balance['total'])};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this103=this,_arguments91=arguments;return Promise.resolve().then(function(){params=_arguments91.length>1&&_arguments91[1]!==undefined?_arguments91[1]:{};return _this103.loadMarkets();}).then(function(){return _this103.publicGetOrderBook(_this103.extend({'book':_this103.marketId(market)},params));}).then(function(_resp){response=_resp;orderbook=response['payload'];timestamp=_this103.parse8601(orderbook['updated_at']);result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this103.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['amount']);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,_this104=this;return Promise.resolve().then(function(){return _this104.loadMarkets();}).then(function(){return _this104.publicGetTicker({'book':_this104.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['payload'];timestamp=_this104.parse8601(ticker['created_at']);return{'timestamp':timestamp,'datetime':_this104.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':parseFloat(ticker['vwap']),'open':undefined,'close':undefined,'first':undefined,'last':undefined,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this105=this;return Promise.resolve().then(function(){return _this105.loadMarkets();}).then(function(){return _this105.publicGetTrades({'book':_this105.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this106=this,_arguments94=arguments;return Promise.resolve().then(function(){price=_arguments94.length>4&&_arguments94[4]!==undefined?_arguments94[4]:undefined;params=_arguments94.length>5&&_arguments94[5]!==undefined?_arguments94[5]:{};return _this106.loadMarkets();}).then(function(){order={'book':_this106.marketId(market),'side':side,'type':type,'major':amount};if(type=='limit'){order['price']=price;}return _this106.privatePostOrders(_this106.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['payload']['oid']};});},cancelOrder:function cancelOrder(id){var _this107=this;return Promise.resolve().then(function(){return _this107.loadMarkets();}).then(function(){return _this107.privateDeleteOrders({'oid':id});});},request:function request(path){var api,method,params,headers,body,query,url,nonce,request,signature,auth,response,_test3,_this108=this,_arguments96=arguments;return Promise.resolve().then(function(){api=_arguments96.length>1&&_arguments96[1]!==undefined?_arguments96[1]:'public';method=_arguments96.length>2&&_arguments96[2]!==undefined?_arguments96[2]:'GET';params=_arguments96.length>3&&_arguments96[3]!==undefined?_arguments96[3]:{};headers=_arguments96.length>4&&_arguments96[4]!==undefined?_arguments96[4]:undefined;body=_arguments96.length>5&&_arguments96[5]!==undefined?_arguments96[5]:undefined;query='/'+_this108.version+'/'+_this108.implodeParams(path,params);url=_this108.urls['api']+query;if(api=='public'){if(Object.keys(params).length){url+='?'+_this108.urlencode(params);}}else{if(Object.keys(params).length){body=_this108.json(params);}nonce=_this108.nonce().toString();request=[nonce,method,query,body||''].join('');signature=_this108.hmac(_this108.encode(request),_this108.encode(_this108.secret));auth=_this108.apiKey+':'+nonce+':'+signature;headers={'Authorization':"Bitso "+auth};}return _this108.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test3='success'in response;if(_test3&&response['success']){return response;}else{throw new ExchangeError(_this108.id+' '+_this108.json(response));}});}};//-----------------------------------------------------------------------------
var bitstamp={'id':'bitstamp','name':'Bitstamp','countries':'GB','rateLimit':1000,'version':'v2','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg','api':'https://www.bitstamp.net/api','www':'https://www.bitstamp.net','doc':'https://www.bitstamp.net/api'},'api':{'public':{'get':['order_book/{id}/','ticker_hour/{id}/','ticker/{id}/','transactions/{id}/']},'private':{'post':['balance/','balance/{id}/','buy/{id}/','buy/market/{id}/','cancel_order/','liquidation_address/info/','liquidation_address/new/','open_orders/all/','open_orders/{id}/','sell/{id}/','sell/market/{id}/','transfer-from-main/','transfer-to-main/','user_transactions/','user_transactions/{id}/','withdrawal/cancel/','withdrawal/open/','withdrawal/status/','xrp_address/','xrp_withdrawal/']}},'markets':{'BTC/USD':{'id':'btcusd','symbol':'BTC/USD','base':'BTC','quote':'USD'},'BTC/EUR':{'id':'btceur','symbol':'BTC/EUR','base':'BTC','quote':'EUR'},'EUR/USD':{'id':'eurusd','symbol':'EUR/USD','base':'EUR','quote':'USD'},'XRP/USD':{'id':'xrpusd','symbol':'XRP/USD','base':'XRP','quote':'USD'},'XRP/EUR':{'id':'xrpeur','symbol':'XRP/EUR','base':'XRP','quote':'EUR'},'XRP/BTC':{'id':'xrpbtc','symbol':'XRP/BTC','base':'XRP','quote':'BTC'},'LTC/USD':{'id':'ltcusd','symbol':'LTC/USD','base':'LTC','quote':'USD'},'LTC/EUR':{'id':'ltceur','symbol':'LTC/EUR','base':'LTC','quote':'EUR'},'LTC/BTC':{'id':'ltcbtc','symbol':'LTC/BTC','base':'LTC','quote':'BTC'}},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this109=this,_arguments97=arguments;return Promise.resolve().then(function(){params=_arguments97.length>1&&_arguments97[1]!==undefined?_arguments97[1]:{};return _this109.publicGetOrderBookId(_this109.extend({'id':_this109.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=parseInt(orderbook['timestamp'])*1000;result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this109.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this110=this;return Promise.resolve().then(function(){return _this110.publicGetTickerId({'id':_this110.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=parseInt(ticker['timestamp'])*1000;return{'timestamp':timestamp,'datetime':_this110.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':parseFloat(ticker['vwap']),'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this111=this;return _this111.publicGetTransactionsId({'id':_this111.marketId(market)});},fetchBalance:function fetchBalance(){var balance,result,c,currency,lowercase,total,free,used,account,_this112=this;return Promise.resolve().then(function(){return _this112.privatePostBalance();}).then(function(_resp){balance=_resp;result={'info':balance};for(c=0;c<_this112.currencies.length;c++){currency=_this112.currencies[c];lowercase=currency.toLowerCase();total=lowercase+'_balance';free=lowercase+'_available';used=lowercase+'_reserved';account={'free':undefined,'used':undefined,'total':undefined};if(free in balance){account['free']=parseFloat(balance[free]);}if(used in balance){account['used']=parseFloat(balance[used]);}if(total in balance){account['total']=parseFloat(balance[total]);}result[currency]=account;}return result;});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,_this113=this,_arguments101=arguments;return Promise.resolve().then(function(){price=_arguments101.length>4&&_arguments101[4]!==undefined?_arguments101[4]:undefined;params=_arguments101.length>5&&_arguments101[5]!==undefined?_arguments101[5]:{};method='privatePost'+_this113.capitalize(side);order={'id':_this113.marketId(market),'amount':amount};if(type=='market'){method+='Market';}else{order['price']=price;}method+='Id';return _this113[method](_this113.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var _this114=this;return _this114.privatePostCancelOrder({'id':id});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api']+'/'+this.version+'/'+this.implodeParams(path,params);var query=this.omit(params,this.extractParams(path));if(api=='public'){if(Object.keys(query).length)url+='?'+this.urlencode(query);}else{if(!this.uid)throw new AuthenticationError(this.id+' requires `'+this.id+'.uid` property for authentication');var nonce=this.nonce().toString();var auth=nonce+this.uid+this.apiKey;var signature=this.hmac(this.encode(auth),this.encode(this.secret));query=this.extend({'key':this.apiKey,'signature':signature.toUpperCase(),'nonce':nonce},query);body=this.urlencode(query);headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bittrex={'id':'bittrex','name':'Bittrex','countries':'US','version':'v1.1','rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766352-cf0b3c26-5ed5-11e7-82b7-f3826b7a97d8.jpg','api':'https://bittrex.com/api','www':'https://bittrex.com','doc':['https://bittrex.com/Home/Api','https://www.npmjs.org/package/node.bittrex.api']},'api':{'public':{'get':['currencies','markethistory','markets','marketsummaries','marketsummary','orderbook','ticker']},'account':{'get':['balance','balances','depositaddress','deposithistory','order','orderhistory','withdrawalhistory','withdraw']},'market':{'get':['buylimit','buymarket','cancel','openorders','selllimit','sellmarket']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,symbol,_this115=this;return Promise.resolve().then(function(){return _this115.publicGetMarkets();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets['result'].length;p++){market=markets['result'][p];id=market['MarketName'];base=market['MarketCurrency'];quote=market['BaseCurrency'];base=_this115.commonCurrencyCode(base);quote=_this115.commonCurrencyCode(quote);symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,indexed,c,currency,account,balance,_this116=this;return Promise.resolve().then(function(){return _this116.loadMarkets();}).then(function(){return _this116.accountGetBalances();}).then(function(_resp){response=_resp;balances=response['result'];result={'info':balances};indexed=_this116.indexBy(balances,'Currency');for(c=0;c<_this116.currencies.length;c++){currency=_this116.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in indexed){balance=indexed[currency];account['free']=balance['Available'];account['used']=balance['Balance']-balance['Available'];account['total']=balance['Balance'];}result[currency]=account;}return result;});},parseBidAsk:function parseBidAsk(bidask){var price=parseFloat(bidask['Rate']);var amount=parseFloat(bidask['Quantity']);return[price,amount];},parseBidAsks:function parseBidAsks(bidasks){var result=[];for(var i=0;i<bidasks.length;i++){result.push(this.parseBidAsk(bidasks[i]));}return result;},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,keys,k,key,side,_this117=this,_arguments105=arguments;return Promise.resolve().then(function(){params=_arguments105.length>1&&_arguments105[1]!==undefined?_arguments105[1]:{};return _this117.loadMarkets();}).then(function(){return _this117.publicGetOrderbook(_this117.extend({'market':_this117.marketId(market),'type':'both','depth':50},params));}).then(function(_resp){response=_resp;orderbook=response['result'];timestamp=_this117.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this117.iso8601(timestamp)};sides={'bids':'buy','asks':'sell'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];result[key]=_this117.parseBidAsks(orderbook[side]);}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.parse8601(ticker['TimeStamp']);return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['High']),'low':parseFloat(ticker['Low']),'bid':parseFloat(ticker['Bid']),'ask':parseFloat(ticker['Ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['Last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['BaseVolume']),'quoteVolume':parseFloat(ticker['Volume']),'info':ticker};},fetchTickers:function fetchTickers(){var response,tickers,result,t,ticker,id,market,symbol,_id$split,_id$split2,quote,base,_this118=this;return Promise.resolve().then(function(){return _this118.loadMarkets();}).then(function(){return _this118.publicGetMarketsummaries();}).then(function(_resp){response=_resp;tickers=response['result'];result={};for(t=0;t<tickers.length;t++){ticker=tickers[t];id=ticker['MarketName'];market=undefined;symbol=id;if(id in _this118.markets_by_id){market=_this118.markets_by_id[id];symbol=market['symbol'];}else{_id$split=id.split('-');_id$split2=_slicedToArray(_id$split,2);quote=_id$split2[0];base=_id$split2[1];base=_this118.commonCurrencyCode(base);quote=_this118.commonCurrencyCode(quote);symbol=base+'/'+quote;}result[symbol]=_this118.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var m,response,ticker,_this119=this;return Promise.resolve().then(function(){return _this119.loadMarkets();}).then(function(){m=_this119.market(market);return _this119.publicGetMarketsummary({'market':m['id']});}).then(function(_resp){response=_resp;ticker=response['result'][0];return _this119.parseTicker(ticker,m);});},fetchTrades:function fetchTrades(market){var _this120=this;return Promise.resolve().then(function(){return _this120.loadMarkets();}).then(function(){return _this120.publicGetMarkethistory({'market':_this120.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,result,_this121=this,_arguments109=arguments;return Promise.resolve().then(function(){price=_arguments109.length>4&&_arguments109[4]!==undefined?_arguments109[4]:undefined;params=_arguments109.length>5&&_arguments109[5]!==undefined?_arguments109[5]:{};return _this121.loadMarkets();}).then(function(){method='marketGet'+_this121.capitalize(side)+type;order={'market':_this121.marketId(market),'quantity':amount};if(type=='limit'){order['rate']=price;}return _this121[method](_this121.extend(order,params));}).then(function(_resp){response=_resp;result={'info':response,'id':response['result']['uuid']};return result;});},cancelOrder:function cancelOrder(id){var _this122=this;return Promise.resolve().then(function(){return _this122.loadMarkets();}).then(function(){return _this122.marketGetCancel({'uuid':id});});},fetchOrder:function fetchOrder(id){var response,orderInfo,orderType,result,_this123=this;return Promise.resolve().then(function(){return _this123.loadMarkets();}).then(function(){return _this123.accountGetOrder({'uuid':id});}).then(function(_resp){response=_resp;orderInfo=response['result'];orderType=orderInfo['Type']=='LIMIT_BUY'?'buy':'sell';result={'info':response,'type':orderType,'rate':orderInfo['PricePerUnit'],'startingAmount':orderInfo['Quantity'],'remaining':orderInfo['QuantityRemaining'],'isOpen':orderInfo['IsOpen'],'isCanceled':orderInfo['CancelInitiated']};return result;});},request:function request(path){var api,method,params,headers,body,url,nonce,signature,response,_test4,_this124=this,_arguments112=arguments;return Promise.resolve().then(function(){api=_arguments112.length>1&&_arguments112[1]!==undefined?_arguments112[1]:'public';method=_arguments112.length>2&&_arguments112[2]!==undefined?_arguments112[2]:'GET';params=_arguments112.length>3&&_arguments112[3]!==undefined?_arguments112[3]:{};headers=_arguments112.length>4&&_arguments112[4]!==undefined?_arguments112[4]:undefined;body=_arguments112.length>5&&_arguments112[5]!==undefined?_arguments112[5]:undefined;url=_this124.urls['api']+'/'+_this124.version+'/';if(api=='public'){url+=api+'/'+method.toLowerCase()+path;if(Object.keys(params).length){url+='?'+_this124.urlencode(params);}}else{nonce=_this124.nonce();url+=api+'/';if(api=='account'&&path!='withdraw'||path=='openorders'){url+=method.toLowerCase();}url+=path+'?'+_this124.urlencode(_this124.extend({'nonce':nonce,'apikey':_this124.apiKey},params));signature=_this124.hmac(_this124.encode(url),_this124.encode(_this124.secret),'sha512');headers={'apisign':signature};}return _this124.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test4='success'in response;if(_test4&&response['success']){return response;}else{throw new ExchangeError(_this124.id+' '+_this124.json(response));}});}};//-----------------------------------------------------------------------------
var blinktrade={'id':'blinktrade','name':'BlinkTrade','countries':['US','VE','VN','BR','PK','CL'],'rateLimit':1000,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27990968-75d9c884-6470-11e7-9073-46756c8e7e8c.jpg','api':{'public':'https://api.blinktrade.com/api','private':'https://api.blinktrade.com/tapi'},'www':'https://blinktrade.com','doc':'https://blinktrade.com/docs'},'api':{'public':{'get':['{currency}/ticker',// ?crypto_currency=BTC
'{currency}/orderbook',// ?crypto_currency=BTC
'{currency}/trades']},'private':{'post':['D',// order
'F',// cancel order
'U2',// balance
'U4',// my orders
'U6',// withdraw
'U18',// deposit
'U24',// confirm withdrawal
'U26',// list withdrawals
'U30',// list deposits
'U34',// ledger
'U70']}},'markets':{'BTC/VEF':{'id':'BTCVEF','symbol':'BTC/VEF','base':'BTC','quote':'VEF','brokerId':1,'broker':'SurBitcoin'},'BTC/VND':{'id':'BTCVND','symbol':'BTC/VND','base':'BTC','quote':'VND','brokerId':3,'broker':'VBTC'},'BTC/BRL':{'id':'BTCBRL','symbol':'BTC/BRL','base':'BTC','quote':'BRL','brokerId':4,'broker':'FoxBit'},'BTC/PKR':{'id':'BTCPKR','symbol':'BTC/PKR','base':'BTC','quote':'PKR','brokerId':8,'broker':'UrduBit'},'BTC/CLP':{'id':'BTCCLP','symbol':'BTC/CLP','base':'BTC','quote':'CLP','brokerId':9,'broker':'ChileBit'}},fetchBalance:function fetchBalance(){var _this125=this;return _this125.privatePostU2({'BalanceReqID':_this125.nonce()});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this126=this,_arguments114=arguments;return Promise.resolve().then(function(){params=_arguments114.length>1&&_arguments114[1]!==undefined?_arguments114[1]:{};p=_this126.market(market);return _this126.publicGetCurrencyOrderbook(_this126.extend({'currency':p['quote'],'crypto_currency':p['base']},params));}).then(function(_resp){orderbook=_resp;timestamp=_this126.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this126.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,timestamp,lowercaseQuote,quoteVolume,_this127=this;return Promise.resolve().then(function(){p=_this127.market(market);return _this127.publicGetCurrencyTicker({'currency':p['quote'],'crypto_currency':p['base']});}).then(function(_resp){ticker=_resp;timestamp=_this127.milliseconds();lowercaseQuote=p['quote'].toLowerCase();quoteVolume='vol_'+lowercaseQuote;return{'timestamp':timestamp,'datetime':_this127.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['vol']),'quoteVolume':parseFloat(ticker[quoteVolume]),'info':ticker};});},fetchTrades:function fetchTrades(market){var p,_this128=this;p=_this128.market(market);return _this128.publicGetCurrencyTrades({'currency':p['quote'],'crypto_currency':p['base']});},createOrder:function createOrder(market,type,side,amount){var price,params,p,order,response,_this129=this,_arguments117=arguments;return Promise.resolve().then(function(){price=_arguments117.length>4&&_arguments117[4]!==undefined?_arguments117[4]:undefined;params=_arguments117.length>5&&_arguments117[5]!==undefined?_arguments117[5]:{};if(type=='market'){throw new ExchangeError(_this129.id+' allows limit orders only');}p=_this129.market(market);order={'ClOrdID':_this129.nonce(),'Symbol':p['id'],'Side':_this129.capitalize(side),'OrdType':2,'Price':price,'OrderQty':amount,'BrokerID':p['brokerId']};return _this129.privatePostD(_this129.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['OrderID']};});},cancelOrder:function cancelOrder(id){var params,_this130=this,_arguments118=arguments;params=_arguments118.length>1&&_arguments118[1]!==undefined?_arguments118[1]:{};return _this130.privatePostF(_this130.extend({'ClOrdID':id},params));},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api'][api]+'/'+this.version+'/'+this.implodeParams(path,params);var query=this.omit(params,this.extractParams(path));if(api=='public'){if(Object.keys(query).length)url+='?'+this.urlencode(query);}else{var nonce=this.nonce().toString();var request=this.extend({'MsgType':path},query);body=this.json(request);headers={'APIKey':this.apiKey,'Nonce':nonce,'Signature':this.hmac(this.encode(nonce),this.encode(this.secret)),'Content-Type':'application/json'};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var bl3p={'id':'bl3p','name':'BL3P','countries':['NL','EU'],// Netherlands, EU
'rateLimit':1000,'version':'1','comment':'An exchange market by BitonicNL','urls':{'logo':'https://user-images.githubusercontent.com/1294454/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg','api':'https://api.bl3p.eu','www':['https://bl3p.eu','https://bitonic.nl'],'doc':['https://github.com/BitonicNL/bl3p-api/tree/master/docs','https://bl3p.eu/api','https://bitonic.nl/en/api']},'api':{'public':{'get':['{market}/ticker','{market}/orderbook','{market}/trades']},'private':{'post':['{market}/money/depth/full','{market}/money/order/add','{market}/money/order/cancel','{market}/money/order/result','{market}/money/orders','{market}/money/orders/history','{market}/money/trades/fetch','GENMKT/money/info','GENMKT/money/deposit_address','GENMKT/money/new_deposit_address','GENMKT/money/wallet/history','GENMKT/money/withdraw']}},'markets':{'BTC/EUR':{'id':'BTCEUR','symbol':'BTC/EUR','base':'BTC','quote':'EUR'},'LTC/EUR':{'id':'LTCEUR','symbol':'LTC/EUR','base':'LTC','quote':'EUR'}},fetchBalance:function fetchBalance(){var response,data,balance,result,c,currency,account,_this131=this;return Promise.resolve().then(function(){return _this131.privatePostGENMKTMoneyInfo();}).then(function(_resp){response=_resp;data=response['data'];balance=data['wallets'];result={'info':data};for(c=0;c<_this131.currencies.length;c++){currency=_this131.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balance){if('available'in balance[currency]){account['free']=parseFloat(balance[currency]['available']['value']);}}if(currency in balance){if('balance'in balance[currency]){account['total']=parseFloat(balance[currency]['balance']['value']);}}if(account['total']){if(account['free']){account['used']=account['total']-account['free'];}}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,response,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this132=this,_arguments120=arguments;return Promise.resolve().then(function(){params=_arguments120.length>1&&_arguments120[1]!==undefined?_arguments120[1]:{};p=_this132.market(market);return _this132.publicGetMarketOrderbook(_this132.extend({'market':p['id']},params));}).then(function(_resp){response=_resp;orderbook=response['data'];timestamp=_this132.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this132.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order['price_int']/100000;amount=order['amount_int']/100000000;result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this133=this;return Promise.resolve().then(function(){return _this133.publicGetMarketTicker({'market':_this133.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=ticker['timestamp']*1000;return{'timestamp':timestamp,'datetime':_this133.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']['24h']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this134=this;return _this134.publicGetMarketTrades({'market':_this134.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,p,order,response,_this135=this,_arguments123=arguments;return Promise.resolve().then(function(){price=_arguments123.length>4&&_arguments123[4]!==undefined?_arguments123[4]:undefined;params=_arguments123.length>5&&_arguments123[5]!==undefined?_arguments123[5]:{};p=_this135.market(market);order={'market':p['id'],'amount_int':amount,'fee_currency':p['quote'],'type':side=='buy'?'bid':'ask'};if(type=='limit'){order['price_int']=price;}return _this135.privatePostMarketMoneyOrderAdd(_this135.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['order_id'].toString()};});},cancelOrder:function cancelOrder(id){var _this136=this;return _this136.privatePostMarketMoneyOrderCancel({'order_id':id});},request:function request(path){var api,method,params,headers,body,request,url,query,nonce,secret,auth,signature,_this137=this,_arguments125=arguments;api=_arguments125.length>1&&_arguments125[1]!==undefined?_arguments125[1]:'public';method=_arguments125.length>2&&_arguments125[2]!==undefined?_arguments125[2]:'GET';params=_arguments125.length>3&&_arguments125[3]!==undefined?_arguments125[3]:{};headers=_arguments125.length>4&&_arguments125[4]!==undefined?_arguments125[4]:undefined;body=_arguments125.length>5&&_arguments125[5]!==undefined?_arguments125[5]:undefined;request=_this137.implodeParams(path,params);url=_this137.urls['api']+'/'+_this137.version+'/'+request;query=_this137.omit(params,_this137.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this137.urlencode(query);}}else{nonce=_this137.nonce();body=_this137.urlencode(_this137.extend({'nonce':nonce},query));secret=_this137.base64ToBinary(_this137.secret);auth=request+"\0"+body;signature=_this137.hmac(_this137.encode(auth),secret,'sha512','base64');headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Rest-Key':_this137.apiKey,'Rest-Sign':signature};}return _this137.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var btcchina={'id':'btcchina','name':'BTCChina','countries':'CN','rateLimit':1500,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766368-465b3286-5ed6-11e7-9a11-0f6467e1d82b.jpg','api':{'public':'https://data.btcchina.com/data','private':'https://api.btcchina.com/api_trade_v1.php'},'www':'https://www.btcchina.com','doc':'https://www.btcchina.com/apidocs'},'api':{'public':{'get':['historydata','orderbook','ticker','trades']},'private':{'post':['BuyIcebergOrder','BuyOrder','BuyOrder2','BuyStopOrder','CancelIcebergOrder','CancelOrder','CancelStopOrder','GetAccountInfo','getArchivedOrder','getArchivedOrders','GetDeposits','GetIcebergOrder','GetIcebergOrders','GetMarketDepth','GetMarketDepth2','GetOrder','GetOrders','GetStopOrder','GetStopOrders','GetTransactions','GetWithdrawal','GetWithdrawals','RequestWithdrawal','SellIcebergOrder','SellOrder','SellOrder2','SellStopOrder']}},fetchMarkets:function fetchMarkets(){var markets,result,keys,p,key,market,parts,id,base,quote,symbol,_this138=this;return Promise.resolve().then(function(){return _this138.publicGetTicker({'market':'all'});}).then(function(_resp){markets=_resp;result=[];keys=Object.keys(markets);for(p=0;p<keys.length;p++){key=keys[p];market=markets[key];parts=key.split('_');id=parts[1];base=id.slice(0,3);quote=id.slice(3,6);base=base.toUpperCase();quote=quote.toUpperCase();symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,c,currency,lowercase,account,_this139=this;return Promise.resolve().then(function(){return _this139.loadMarkets();}).then(function(){return _this139.privatePostGetAccountInfo();}).then(function(_resp){response=_resp;balances=response['result'];result={'info':balances};for(c=0;c<_this139.currencies.length;c++){currency=_this139.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if(lowercase in balances['balance']){account['total']=parseFloat(balances['balance'][lowercase]['amount']);}if(lowercase in balances['frozen']){account['used']=parseFloat(balances['frozen'][lowercase]['amount']);}account['free']=account['total']-account['used'];result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,_this140=this,_arguments128=arguments;return Promise.resolve().then(function(){params=_arguments128.length>1&&_arguments128[1]!==undefined?_arguments128[1]:{};return _this140.loadMarkets();}).then(function(){return _this140.publicGetOrderbook(_this140.extend({'market':_this140.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=orderbook['date']*1000;;result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this140.iso8601(timestamp)};result['asks']=_this140.sortBy(result['asks'],0);return result;});},fetchTicker:function fetchTicker(market){var p,tickers,ticker,timestamp,_this141=this;return Promise.resolve().then(function(){return _this141.loadMarkets();}).then(function(){p=_this141.market(market);return _this141.publicGetTicker({'market':p['id']});}).then(function(_resp){tickers=_resp;ticker=tickers['ticker'];timestamp=ticker['date']*1000;return{'timestamp':timestamp,'datetime':_this141.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':parseFloat(ticker['vwap']),'open':parseFloat(ticker['open']),'close':parseFloat(ticker['prev_close']),'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this142=this;return Promise.resolve().then(function(){return _this142.loadMarkets();}).then(function(){return _this142.publicGetTrades({'market':_this142.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,p,method,order,id,response,_this143=this,_arguments131=arguments;return Promise.resolve().then(function(){price=_arguments131.length>4&&_arguments131[4]!==undefined?_arguments131[4]:undefined;params=_arguments131.length>5&&_arguments131[5]!==undefined?_arguments131[5]:{};return _this143.loadMarkets();}).then(function(){p=_this143.market(market);method='privatePost'+_this143.capitalize(side)+'Order2';order={};id=p['id'].toUpperCase();if(type=='market'){order['params']=[undefined,amount,id];}else{order['params']=[price,amount,id];}return _this143[method](_this143.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var params,market,_this144=this,_arguments132=arguments;return Promise.resolve().then(function(){params=_arguments132.length>1&&_arguments132[1]!==undefined?_arguments132[1]:{};return _this144.loadMarkets();}).then(function(){market=params['market'];// TODO fixme
return _this144.privatePostCancelOrder(_this144.extend({'params':[id,market]},params));});},nonce:function nonce(){return this.microseconds();},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api'][api]+'/'+path;if(api=='public'){if(Object.keys(params).length)url+='?'+this.urlencode(params);}else{if(!this.apiKey)throw new AuthenticationError(this.id+' requires `'+this.id+'.apiKey` property for authentication');if(!this.secret)throw new AuthenticationError(this.id+' requires `'+this.id+'.secret` property for authentication');var p=[];if('params'in params)p=params['params'];var nonce=this.nonce();var request={'method':path,'id':nonce,'params':p};p=p.join(',');body=this.json(request);var query='tonce='+nonce+'&accesskey='+this.apiKey+'&requestmethod='+method.toLowerCase()+'&id='+nonce+'&method='+path+'&params='+p;var signature=this.hmac(this.encode(query),this.encode(this.secret),'sha1');var auth=this.apiKey+':'+signature;headers={'Content-Length':body.length,'Authorization':'Basic '+this.stringToBase64(auth),'Json-Rpc-Tonce':nonce};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------
var btce={'id':'btce','name':'BTC-e','countries':['BG','RU'],// Bulgaria, Russia
'version':'3','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27843225-1b571514-611a-11e7-9208-2641a560b561.jpg','api':{'public':'https://btc-e.com/api','private':'https://btc-e.com/tapi'},'www':'https://btc-e.com','doc':['https://btc-e.com/api/3/docs','https://btc-e.com/tapi/docs']},'api':{'public':{'get':['info','ticker/{pair}','depth/{pair}','trades/{pair}']},'private':{'post':['getInfo','Trade','ActiveOrders','OrderInfo','CancelOrder','TradeHistory','TransHistory','CoinDepositAddress','WithdrawCoin','CreateCoupon','RedeemCoupon']}},fetchMarkets:function fetchMarkets(){var response,markets,keys,result,p,id,market,_id$split3,_id$split4,base,quote,symbol,_this145=this;return Promise.resolve().then(function(){return _this145.publicGetInfo();}).then(function(_resp){response=_resp;markets=response['pairs'];keys=Object.keys(markets);result=[];for(p=0;p<keys.length;p++){id=keys[p];market=markets[id];_id$split3=id.split('_');_id$split4=_slicedToArray(_id$split3,2);base=_id$split4[0];quote=_id$split4[1];base=base.toUpperCase();quote=quote.toUpperCase();if(base=='DSH'){base='DASH';}base=_this145.commonCurrencyCode(base);quote=_this145.commonCurrencyCode(quote);symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,funds,currencies,c,currency,uppercase,account,_this146=this;return Promise.resolve().then(function(){return _this146.loadMarkets();}).then(function(){return _this146.privatePostGetInfo();}).then(function(_resp){response=_resp;balances=response['return'];result={'info':balances};funds=balances['funds'];currencies=Object.keys(funds);for(c=0;c<currencies.length;c++){currency=currencies[c];uppercase=currency.toUpperCase();// they misspell DASH as dsh :/
if(uppercase=='DSH'){uppercase='DASH';}account={'free':funds[currency],'used':undefined,'total':funds[currency]};result[uppercase]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,response,orderbook,timestamp,result,_this147=this,_arguments135=arguments;return Promise.resolve().then(function(){params=_arguments135.length>1&&_arguments135[1]!==undefined?_arguments135[1]:{};return _this147.loadMarkets();}).then(function(){p=_this147.market(market);return _this147.publicGetDepthPair(_this147.extend({'pair':p['id']},params));}).then(function(_resp){response=_resp;if(p['id']in response){orderbook=response[p['id']];timestamp=_this147.milliseconds();result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this147.iso8601(timestamp)};result['bids']=_this147.sortBy(result['bids'],0,true);result['asks']=_this147.sortBy(result['asks'],0);return result;}else{throw new ExchangeError(_this147.id+' '+p['symbol']+' order book is empty or not available');}});},fetchTicker:function fetchTicker(market){var p,tickers,ticker,timestamp,_this148=this;return Promise.resolve().then(function(){return _this148.loadMarkets();}).then(function(){p=_this148.market(market);return _this148.publicGetTickerPair({'pair':p['id']});}).then(function(_resp){tickers=_resp;ticker=tickers[p['id']];timestamp=ticker['updated']*1000;return{'timestamp':timestamp,'datetime':_this148.iso8601(timestamp),'high':ticker['high']?ticker['high']:undefined,'low':ticker['low']?ticker['low']:undefined,'bid':ticker['sell']?ticker['buy']:undefined,'ask':ticker['buy']?ticker['sell']:undefined,'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':ticker['last']?ticker['last']:undefined,'change':undefined,'percentage':undefined,'average':ticker['avg']?ticker['avg']:undefined,'baseVolume':ticker['vol_cur']?ticker['vol_cur']:undefined,'quoteVolume':ticker['vol']?ticker['vol']:undefined,'info':ticker};});},fetchTrades:function fetchTrades(market){var _this149=this;return Promise.resolve().then(function(){return _this149.loadMarkets();}).then(function(){return _this149.publicGetTradesPair({'pair':_this149.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this150=this,_arguments138=arguments;return Promise.resolve().then(function(){price=_arguments138.length>4&&_arguments138[4]!==undefined?_arguments138[4]:undefined;params=_arguments138.length>5&&_arguments138[5]!==undefined?_arguments138[5]:{};return _this150.loadMarkets();}).then(function(){order={'pair':_this150.marketId(market),'type':side,'amount':amount,'rate':price};return _this150.privatePostTrade(_this150.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['return']['order_id']};});},cancelOrder:function cancelOrder(id){var _this151=this;return Promise.resolve().then(function(){return _this151.loadMarkets();}).then(function(){return _this151.privatePostCancelOrder({'order_id':id});});},fetchOrder:function fetchOrder(id){var response,orderInfo,isCanceled,result,_this152=this;return Promise.resolve().then(function(){return _this152.loadMarkets();}).then(function(){return _this152.privatePostOrderInfo({'order_id':id});}).then(function(_resp){response=_resp;orderInfo=response['return'][id];isCanceled=false;if(orderInfo['status']==2||orderInfo['status']==3){isCanceled=true;}result={'info':response,'type':orderInfo['type'],'rate':orderInfo['rate'],'startingAmount':orderInfo['start_amount'],'remaining':orderInfo['amount'],'isOpen':orderInfo['status']==0,'isCanceled':isCanceled};return result;});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api'][api]+'/'+this.version+'/'+this.implodeParams(path,params);var query=this.omit(params,this.extractParams(path));if(api=='public'){if(Object.keys(query).length)url+='?'+this.urlencode(query);}else{var nonce=this.nonce();body=this.urlencode(this.extend({'nonce':nonce,'method':path},query));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Key':this.apiKey,'Sign':this.hmac(this.encode(body),this.encode(this.secret),'sha512')};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var btcmarkets={'id':'btcmarkets','name':'BTC Markets','countries':'AU',// Australia
'rateLimit':1000,// market data cached for 1 second (trades cached for 2 seconds)
'urls':{'logo':'https://user-images.githubusercontent.com/1294454/29142911-0e1acfc2-7d5c-11e7-98c4-07d9532b29d7.jpg','api':'https://api.btcmarkets.net','www':'https://btcmarkets.net/','doc':'https://github.com/BTCMarkets/API'},'api':{'public':{'get':['market/{id}/tick','market/{id}/orderbook','market/{id}/trades']},'private':{'get':['account/balance','account/{id}/tradingfee'],'post':['fundtransfer/withdrawCrypto','fundtransfer/withdrawEFT','order/create','order/cancel','order/history','order/open','order/trade/history','order/createBatch',// they promise it's coming soon...
'order/detail']}},'markets':{'BTC/AUD':{'id':'BTC/AUD','symbol':'BTC/AUD','base':'BTC','quote':'AUD'},'LTC/AUD':{'id':'LTC/AUD','symbol':'LTC/AUD','base':'LTC','quote':'AUD'},'ETH/AUD':{'id':'ETH/AUD','symbol':'ETH/AUD','base':'ETH','quote':'AUD'},'ETC/AUD':{'id':'ETC/AUD','symbol':'ETC/AUD','base':'ETC','quote':'AUD'},'XRP/AUD':{'id':'XRP/AUD','symbol':'XRP/AUD','base':'XRP','quote':'AUD'},'BCH/AUD':{'id':'BCH/AUD','symbol':'BCH/AUD','base':'BCH','quote':'AUD'},'LTC/BTC':{'id':'LTC/BTC','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'ETH/BTC':{'id':'ETH/BTC','symbol':'ETH/BTC','base':'ETH','quote':'BTC'},'ETC/BTC':{'id':'ETC/BTC','symbol':'ETC/BTC','base':'ETC','quote':'BTC'},'XRP/BTC':{'id':'XRP/BTC','symbol':'XRP/BTC','base':'XRP','quote':'BTC'},'BCH/BTC':{'id':'BCH/BTC','symbol':'BCH/BTC','base':'BCH','quote':'BTC'}},fetchBalance:function fetchBalance(){var balances,result,b,balance,currency,multiplier,free,used,account,_this153=this;return Promise.resolve().then(function(){return _this153.loadMarkets();}).then(function(){return _this153.privateGetAccountBalance();}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];multiplier=100000000;free=parseFloat(balance['balance']/multiplier);used=parseFloat(balance['pendingFunds']/multiplier);account={'free':free,'used':used,'total':_this153.sum(free,used)};result[currency]=account;}return result;});},parseBidAsk:function parseBidAsk(bidask){var price=bidask[0];var amount=bidask[1];return[price,amount];},parseBidAsks:function parseBidAsks(bidasks){var result=[];for(var i=0;i<bidasks.length;i++){result.push(this.parseBidAsk(bidasks[i]));}return result;},fetchOrderBook:function fetchOrderBook(market){var params,m,orderbook,timestamp,result,sides,s,side,_this154=this,_arguments142=arguments;return Promise.resolve().then(function(){params=_arguments142.length>1&&_arguments142[1]!==undefined?_arguments142[1]:{};return _this154.loadMarkets();}).then(function(){m=_this154.market(market);return _this154.publicGetMarketIdOrderbook(_this154.extend({'id':m['id']},params));}).then(function(_resp){orderbook=_resp;timestamp=orderbook['timestamp']*1000;result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this154.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];result[side]=_this154.parseBidAsks(orderbook[side]);}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=ticker['timestamp']*1000;return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['bestBid']),'ask':parseFloat(ticker['bestAsk']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['lastPrice']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume24h']),'info':ticker};},fetchTicker:function fetchTicker(market){var m,ticker,_this155=this;return Promise.resolve().then(function(){return _this155.loadMarkets();}).then(function(){m=_this155.market(market);return _this155.publicGetMarketIdTick({'id':m['id']});}).then(function(_resp){ticker=_resp;return _this155.parseTicker(ticker,m);});},fetchTrades:function fetchTrades(market){var _this156=this;return Promise.resolve().then(function(){return _this156.loadMarkets();}).then(function(){return _this156.publicGetMarketIdTrades({// 'since': 59868345231,
'id':_this156.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,m,multiplier,orderSide,order,response,_this157=this,_arguments145=arguments;return Promise.resolve().then(function(){price=_arguments145.length>4&&_arguments145[4]!==undefined?_arguments145[4]:undefined;params=_arguments145.length>5&&_arguments145[5]!==undefined?_arguments145[5]:{};return _this157.loadMarkets();}).then(function(){m=_this157.market(market);multiplier=100000000;// for price and volume
// does BTC Markets support market orders at all?
orderSide=side=='buy'?'Bid':'Ask';order=_this157.ordered({'currency':m['quote'],'instrument':m['base'],'price':price*multiplier,'volume':amount*multiplier,'orderSide':orderSide,'ordertype':_this157.capitalize(type),'clientRequestId':_this157.nonce().toString()});return _this157.privatePostOrderCreate(_this157.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id'].toString()};});},cancelOrders:function cancelOrders(ids){var _this158=this;return Promise.resolve().then(function(){return _this158.loadMarkets();}).then(function(){return _this158.privatePostOrderCancel({'order_ids':ids});});},cancelOrder:function cancelOrder(id){var _this159=this;return Promise.resolve().then(function(){return _this159.loadMarkets();}).then(function(){return _this159.cancelOrders([id]);});},nonce:function nonce(){return this.milliseconds();},request:function request(path){var api,method,params,headers,body,uri,url,query,nonce,auth,secret,signature,response,_test5,_this160=this,_arguments148=arguments;return Promise.resolve().then(function(){api=_arguments148.length>1&&_arguments148[1]!==undefined?_arguments148[1]:'public';method=_arguments148.length>2&&_arguments148[2]!==undefined?_arguments148[2]:'GET';params=_arguments148.length>3&&_arguments148[3]!==undefined?_arguments148[3]:{};headers=_arguments148.length>4&&_arguments148[4]!==undefined?_arguments148[4]:undefined;body=_arguments148.length>5&&_arguments148[5]!==undefined?_arguments148[5]:undefined;uri='/'+_this160.implodeParams(path,params);url=_this160.urls['api']+uri;query=_this160.omit(params,_this160.extractParams(path));if(api=='public'){if(Object.keys(params).length){url+='?'+_this160.urlencode(params);}}else{nonce=_this160.nonce().toString();auth=uri+"\n"+nonce+"\n";headers={'Content-Type':'application/json','apikey':_this160.apiKey,'timestamp':nonce};if(method=='POST'){body=_this160.urlencode(query);headers['Content-Length']=body.length;auth+=body;}secret=_this160.base64ToBinary(_this160.secret);signature=_this160.hmac(_this160.encode(auth),secret,'sha512','base64');headers['signature']=signature;}return _this160.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test5=api=='private';if(_test5&&'success'in response){if(!response['success']){throw new ExchangeError(_this160.id+' '+_this160.json(response));}}if(_test5){return response;}else{return response;}});}};//-----------------------------------------------------------------------------
var btctrader={'id':'btctrader','name':'BTCTrader','countries':['TR','GR','PH'],// Turkey, Greece, Philippines
'rateLimit':1000,'comment':'base API for BTCExchange, BTCTurk','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27992404-cda1e386-649c-11e7-8dc1-40bbd2897768.jpg','api':'https://www.btctrader.com/api','www':'https://www.btctrader.com','doc':'https://github.com/BTCTrader/broker-api-docs'},'api':{'public':{'get':['ohlcdata',// ?last=COUNT
'orderbook','ticker','trades']},'private':{'get':['balance','openOrders','userTransactions'],'post':['buy','cancelOrder','sell']}},fetchBalance:function fetchBalance(){var response,result,base,quote,symbol,market,_this161=this;return Promise.resolve().then(function(){return _this161.privateGetBalance();}).then(function(_resp){response=_resp;result={'info':response};base={'free':response['bitcoin_available'],'used':response['bitcoin_reserved'],'total':response['bitcoin_balance']};quote={'free':response['money_available'],'used':response['money_reserved'],'total':response['money_balance']};symbol=_this161.symbols[0];market=_this161.markets[symbol];result[market['base']]=base;result[market['quote']]=quote;return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this162=this,_arguments150=arguments;return Promise.resolve().then(function(){params=_arguments150.length>1&&_arguments150[1]!==undefined?_arguments150[1]:{};return _this162.publicGetOrderbook(params);}).then(function(_resp){orderbook=_resp;timestamp=parseInt(orderbook['timestamp']*1000);result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this162.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this163=this;return Promise.resolve().then(function(){return _this163.publicGetTicker();}).then(function(_resp){ticker=_resp;timestamp=parseInt(ticker['timestamp']*1000);return{'timestamp':timestamp,'datetime':_this163.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['average']),'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var maxCount,_this164=this;maxCount=50;return _this164.publicGetTrades();},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,_this165=this,_arguments153=arguments;return Promise.resolve().then(function(){price=_arguments153.length>4&&_arguments153[4]!==undefined?_arguments153[4]:undefined;params=_arguments153.length>5&&_arguments153[5]!==undefined?_arguments153[5]:{};method='privatePost'+_this165.capitalize(side);order={'Type':side=='buy'?'BuyBtc':'SelBtc','IsMarketOrder':type=='market'?1:0};if(type=='market'){if(side=='buy'){order['Total']=amount;}else{order['Amount']=amount;}}else{order['Price']=price;order['Amount']=amount;}return _this165[method](_this165.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var _this166=this;return _this166.privatePostCancelOrder({'id':id});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;if(this.id=='btctrader')throw new ExchangeError(this.id+' is an abstract base API for BTCExchange, BTCTurk');var url=this.urls['api']+'/'+path;if(api=='public'){if(Object.keys(params).length)url+='?'+this.urlencode(params);}else{var nonce=this.nonce().toString;body=this.urlencode(params);var secret=this.base64ToString(this.secret);var auth=this.apiKey+nonce;headers={'X-PCK':this.apiKey,'X-Stamp':nonce.toString(),'X-Signature':this.hmac(this.encode(auth),secret,'sha256','base64'),'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var btcexchange=extend(btctrader,{'id':'btcexchange','name':'BTCExchange','countries':'PH',// Philippines
'rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27993052-4c92911a-64aa-11e7-96d8-ec6ac3435757.jpg','api':'https://www.btcexchange.ph/api','www':'https://www.btcexchange.ph','doc':'https://github.com/BTCTrader/broker-api-docs'},'markets':{'BTC/PHP':{'id':'BTC/PHP','symbol':'BTC/PHP','base':'BTC','quote':'PHP'}}});//-----------------------------------------------------------------------------
var btctradeua={'id':'btctradeua','name':'BTC Trade UA','countries':'UA',// Ukraine,
'rateLimit':3000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg','api':'https://btc-trade.com.ua/api','www':'https://btc-trade.com.ua','doc':'https://docs.google.com/document/d/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE/edit'},'api':{'public':{'get':['deals/{symbol}','trades/sell/{symbol}','trades/buy/{symbol}','japan_stat/high/{symbol}']},'private':{'post':['auth','ask/{symbol}','balance','bid/{symbol}','buy/{symbol}','my_orders/{symbol}','order/status/{id}','remove/order/{id}','sell/{symbol}']}},'markets':{'BTC/UAH':{'id':'btc_uah','symbol':'BTC/UAH','base':'BTC','quote':'UAH'},'ETH/UAH':{'id':'eth_uah','symbol':'ETH/UAH','base':'ETH','quote':'UAH'},'LTC/UAH':{'id':'ltc_uah','symbol':'LTC/UAH','base':'LTC','quote':'UAH'},'DOGE/UAH':{'id':'doge_uah','symbol':'DOGE/UAH','base':'DOGE','quote':'UAH'},'DASH/UAH':{'id':'dash_uah','symbol':'DASH/UAH','base':'DASH','quote':'UAH'},'SIB/UAH':{'id':'sib_uah','symbol':'SIB/UAH','base':'SIB','quote':'UAH'},'KRB/UAH':{'id':'krb_uah','symbol':'KRB/UAH','base':'KRB','quote':'UAH'},'NVC/UAH':{'id':'nvc_uah','symbol':'NVC/UAH','base':'NVC','quote':'UAH'},'LTC/BTC':{'id':'ltc_btc','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'NVC/BTC':{'id':'nvc_btc','symbol':'NVC/BTC','base':'NVC','quote':'BTC'},'ITI/UAH':{'id':'iti_uah','symbol':'ITI/UAH','base':'ITI','quote':'UAH'},'DOGE/BTC':{'id':'doge_btc','symbol':'DOGE/BTC','base':'DOGE','quote':'BTC'},'DASH/BTC':{'id':'dash_btc','symbol':'DASH/BTC','base':'DASH','quote':'BTC'}},signIn:function signIn(){return this.privatePostAuth();},fetchBalance:function fetchBalance(){var response,result,accounts,b,account,currency,balance,_this167=this;return Promise.resolve().then(function(){return _this167.privatePostBalance();}).then(function(_resp){response=_resp;result={'info':response};if('accounts'in result){accounts=response['accounts'];for(b=0;b<accounts.length;b++){account=accounts[b];currency=account['currency'];balance=parseFloat(account['balance']);result[currency]={'free':balance,'used':undefined,'total':balance};}}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,bids,asks,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this168=this,_arguments156=arguments;return Promise.resolve().then(function(){params=_arguments156.length>1&&_arguments156[1]!==undefined?_arguments156[1]:{};p=_this168.market(market);return _this168.publicGetTradesBuySymbol(_this168.extend({'symbol':p['id']},params));}).then(function(_resp){bids=_resp;return _this168.publicGetTradesSellSymbol(_this168.extend({'symbol':p['id']},params));}).then(function(_resp){asks=_resp;orderbook={'bids':[],'asks':[]};if(bids){if('list'in bids){orderbook['bids']=bids['list'];}}if(asks){if('list'in asks){orderbook['asks']=asks['list'];}}timestamp=_this168.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this168.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['currency_trade']);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,result,tickerLength,start,t,candle,last,_this169=this;return Promise.resolve().then(function(){return _this169.publicGetJapanStatHighSymbol({'symbol':_this169.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['trades'];timestamp=_this169.milliseconds();result={'timestamp':timestamp,'datetime':_this169.iso8601(timestamp),'high':undefined,'low':undefined,'bid':undefined,'ask':undefined,'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':undefined,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':undefined,'info':ticker};tickerLength=ticker.length;if(tickerLength>0){start=Math.max(tickerLength-48,0);for(t=start;t<ticker.length;t++){candle=ticker[t];if(typeof result['open']=='undefined'){result['open']=candle[1];}if(typeof result['high']=='undefined'||result['high']<candle[2]){result['high']=candle[2];}if(typeof result['low']=='undefined'||result['low']>candle[3]){result['low']=candle[3];}if(typeof result['quoteVolume']=='undefined'){result['quoteVolume']=-candle[5];}else{result['quoteVolume']-=candle[5];}}last=tickerLength-1;result['close']=ticker[last][4];result['quoteVolume']=-1*result['quoteVolume'];}return result;});},fetchTrades:function fetchTrades(market){var _this170=this;return _this170.publicGetDealsSymbol({'symbol':_this170.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,p,method,order,_this171=this,_arguments159=arguments;price=_arguments159.length>4&&_arguments159[4]!==undefined?_arguments159[4]:undefined;params=_arguments159.length>5&&_arguments159[5]!==undefined?_arguments159[5]:{};if(type=='market'){throw new ExchangeError(_this171.id+' allows limit orders only');}p=_this171.market(market);method='privatePost'+_this171.capitalize(side)+'Id';order={'count':amount,'currency1':p['quote'],'currency':p['base'],'price':price};return _this171[method](_this171.extend(order,params));},cancelOrder:function cancelOrder(id){var _this172=this;return _this172.privatePostRemoveOrderId({'id':id});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api']+'/'+this.implodeParams(path,params);var query=this.omit(params,this.extractParams(path));if(api=='public'){if(Object.keys(query).length)url+=this.implodeParams(path,query);}else{var nonce=this.nonce();body=this.urlencode(this.extend({'out_order_id':nonce,'nonce':nonce},query));var auth=body+this.secret;headers={'public-key':this.apiKey,'api-sign':this.hash(this.encode(auth),'sha256'),'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var btcturk=extend(btctrader,{'id':'btcturk','name':'BTCTurk','countries':'TR',// Turkey
'rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27992709-18e15646-64a3-11e7-9fa2-b0950ec7712f.jpg','api':'https://www.btcturk.com/api','www':'https://www.btcturk.com','doc':'https://github.com/BTCTrader/broker-api-docs'},'markets':{'BTC/TRY':{'id':'BTC/TRY','symbol':'BTC/TRY','base':'BTC','quote':'TRY'}}});//-----------------------------------------------------------------------------
var btcx={'id':'btcx','name':'BTCX','countries':['IS','US','EU'],'rateLimit':1500,// support in english is very poor, unable to tell rate limits
'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766385-9fdcc98c-5ed6-11e7-8f14-66d5e5cd47e6.jpg','api':'https://btc-x.is/api','www':'https://btc-x.is','doc':'https://btc-x.is/custom/api-document.html'},'api':{'public':{'get':['depth/{id}/{limit}','ticker/{id}','trade/{id}/{limit}']},'private':{'post':['balance','cancel','history','order','redeem','trade','withdraw']}},'markets':{'BTC/USD':{'id':'btc/usd','symbol':'BTC/USD','base':'BTC','quote':'USD'},'BTC/EUR':{'id':'btc/eur','symbol':'BTC/EUR','base':'BTC','quote':'EUR'}},fetchBalance:function fetchBalance(){var balances,result,currencies,c,currency,uppercase,account,_this173=this;return Promise.resolve().then(function(){return _this173.privatePostBalance();}).then(function(_resp){balances=_resp;result={'info':balances};currencies=Object.keys(balances);for(c=0;c<currencies.length;c++){currency=currencies[c];uppercase=currency.toUpperCase();account={'free':balances[currency],'used':undefined,'total':balances[currency]};result[uppercase]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this174=this,_arguments162=arguments;return Promise.resolve().then(function(){params=_arguments162.length>1&&_arguments162[1]!==undefined?_arguments162[1]:{};return _this174.publicGetDepthIdLimit(_this174.extend({'id':_this174.marketId(market),'limit':1000},params));}).then(function(_resp){orderbook=_resp;timestamp=_this174.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this174.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order['price'];amount=order['amount'];result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this175=this;return Promise.resolve().then(function(){return _this175.publicGetTickerId({'id':_this175.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=ticker['time']*1000;return{'timestamp':timestamp,'datetime':_this175.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['sell']),'ask':parseFloat(ticker['buy']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this176=this;return _this176.publicGetTradeIdLimit({'id':_this176.marketId(market),'limit':100});},createOrder:function createOrder(market,type,side,amount){var price,params,response,_this177=this,_arguments165=arguments;return Promise.resolve().then(function(){price=_arguments165.length>4&&_arguments165[4]!==undefined?_arguments165[4]:undefined;params=_arguments165.length>5&&_arguments165[5]!==undefined?_arguments165[5]:{};return _this177.privatePostTrade(_this177.extend({'type':side.toUpperCase(),'market':_this177.marketId(market),'amount':amount,'price':price},params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['order']['id']};});},cancelOrder:function cancelOrder(id){var _this178=this;return _this178.privatePostCancel({'order':id});},request:function request(path){var api,method,params,headers,body,url,nonce,response,_this179=this,_arguments167=arguments;return Promise.resolve().then(function(){api=_arguments167.length>1&&_arguments167[1]!==undefined?_arguments167[1]:'public';method=_arguments167.length>2&&_arguments167[2]!==undefined?_arguments167[2]:'GET';params=_arguments167.length>3&&_arguments167[3]!==undefined?_arguments167[3]:{};headers=_arguments167.length>4&&_arguments167[4]!==undefined?_arguments167[4]:undefined;body=_arguments167.length>5&&_arguments167[5]!==undefined?_arguments167[5]:undefined;url=_this179.urls['api']+'/'+_this179.version+'/';if(api=='public'){url+=_this179.implodeParams(path,params);}else{nonce=_this179.nonce();url+=api;body=_this179.urlencode(_this179.extend({'Method':path.toUpperCase(),'Nonce':nonce},params));headers={'Content-Type':'application/x-www-form-urlencoded','Key':_this179.apiKey,'Signature':_this179.hmac(_this179.encode(body),_this179.encode(_this179.secret),'sha512')};}return _this179.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this179.id+' '+_this179.json(response['error']));}return response;});}};//-----------------------------------------------------------------------------
var bter={'id':'bter','name':'Bter','countries':['VG','CN'],// British Virgin Islands, China
'version':'2','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27980479-cfa3188c-6387-11e7-8191-93fc4184ba5c.jpg','api':{'public':'https://data.bter.com/api','private':'https://api.bter.com/api'},'www':'https://bter.com','doc':'https://bter.com/api2'},'api':{'public':{'get':['pairs','marketinfo','marketlist','tickers','ticker/{id}','orderBook/{id}','trade/{id}','tradeHistory/{id}','tradeHistory/{id}/{tid}']},'private':{'post':['balances','depositAddress','newAddress','depositsWithdrawals','buy','sell','cancelOrder','cancelAllOrders','getOrder','openOrders','tradeHistory','withdraw']}},fetchMarkets:function fetchMarkets(){var response,markets,result,p,market,id,base,quote,symbol,_this180=this;return Promise.resolve().then(function(){return _this180.publicGetMarketlist();}).then(function(_resp){response=_resp;markets=response['data'];result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['pair'];base=market['curr_a'];quote=market['curr_b'];base=_this180.commonCurrencyCode(base);quote=_this180.commonCurrencyCode(quote);symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balance,result,c,currency,account,_this181=this;return Promise.resolve().then(function(){return _this181.loadMarkets();}).then(function(){return _this181.privatePostBalances();}).then(function(_resp){balance=_resp;result={'info':balance};for(c=0;c<_this181.currencies.length;c++){currency=_this181.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if('available'in balance){if(currency in balance['available']){account['free']=parseFloat(balance['available'][currency]);}}if('locked'in balance){if(currency in balance['locked']){account['used']=parseFloat(balance['locked'][currency]);}}account['total']=_this181.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this182=this,_arguments170=arguments;return Promise.resolve().then(function(){params=_arguments170.length>1&&_arguments170[1]!==undefined?_arguments170[1]:{};return _this182.loadMarkets();}).then(function(){return _this182.publicGetOrderBookId(_this182.extend({'id':_this182.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this182.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this182.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}result['asks']=_this182.sortBy(result['asks'],0);return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high24hr']),'low':parseFloat(ticker['low24hr']),'bid':parseFloat(ticker['highestBid']),'ask':parseFloat(ticker['lowestAsk']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':parseFloat(ticker['percentChange']),'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['baseVolume']),'quoteVolume':parseFloat(ticker['quoteVolume']),'info':ticker};},fetchTickers:function fetchTickers(){var tickers,result,ids,i,id,_id$split5,_id$split6,baseId,quoteId,base,quote,symbol,ticker,market,_this183=this;return Promise.resolve().then(function(){return _this183.loadMarkets();}).then(function(){return _this183.publicGetTickers();}).then(function(_resp){tickers=_resp;result={};ids=Object.keys(tickers);for(i=0;i<ids.length;i++){id=ids[i];_id$split5=id.split('_');_id$split6=_slicedToArray(_id$split5,2);baseId=_id$split6[0];quoteId=_id$split6[1];base=baseId.toUpperCase();quote=quoteId.toUpperCase();symbol=base+'/'+quote;ticker=tickers[id];market=_this183.markets[symbol];result[symbol]=_this183.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this184=this;return Promise.resolve().then(function(){return _this184.loadMarkets();}).then(function(){p=_this184.market(market);return _this184.publicGetTickerId({'id':p['id']});}).then(function(_resp){ticker=_resp;return _this184.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this185=this;return Promise.resolve().then(function(){return _this185.loadMarkets();}).then(function(){return _this185.publicGetTradeHistoryId({'id':_this185.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,_this186=this,_arguments174=arguments;return Promise.resolve().then(function(){price=_arguments174.length>4&&_arguments174[4]!==undefined?_arguments174[4]:undefined;params=_arguments174.length>5&&_arguments174[5]!==undefined?_arguments174[5]:{};return _this186.loadMarkets();}).then(function(){method='privatePost'+_this186.capitalize(side);order={'currencyPair':_this186.symbol(market),'rate':price,'amount':amount};return _this186[method](_this186.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['orderNumber']};});},cancelOrder:function cancelOrder(id){var _this187=this;return Promise.resolve().then(function(){return _this187.loadMarkets();}).then(function(){return _this187.privatePostCancelOrder({'orderNumber':id});});},request:function request(path){var api,method,params,headers,body,prefix,url,query,nonce,request,response,_this188=this,_arguments176=arguments;return Promise.resolve().then(function(){api=_arguments176.length>1&&_arguments176[1]!==undefined?_arguments176[1]:'public';method=_arguments176.length>2&&_arguments176[2]!==undefined?_arguments176[2]:'GET';params=_arguments176.length>3&&_arguments176[3]!==undefined?_arguments176[3]:{};headers=_arguments176.length>4&&_arguments176[4]!==undefined?_arguments176[4]:undefined;body=_arguments176.length>5&&_arguments176[5]!==undefined?_arguments176[5]:undefined;prefix=api=='private'?api+'/':'';url=_this188.urls['api'][api]+_this188.version+'/1/'+prefix+_this188.implodeParams(path,params);query=_this188.omit(params,_this188.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this188.urlencode(query);}}else{nonce=_this188.nonce();request={'nonce':nonce};body=_this188.urlencode(_this188.extend(request,query));headers={'Key':_this188.apiKey,'Sign':_this188.hmac(_this188.encode(body),_this188.encode(_this188.secret),'sha512'),'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}return _this188.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('result'in response){if(response['result']!='true'){throw new ExchangeError(_this188.id+' '+_this188.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var bxinth={'id':'bxinth','name':'BX.in.th','countries':'TH',// Thailand
'rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766412-567b1eb4-5ed7-11e7-94a8-ff6a3884f6c5.jpg','api':'https://bx.in.th/api','www':'https://bx.in.th','doc':'https://bx.in.th/info/api'},'api':{'public':{'get':['',// ticker
'options','optionbook','orderbook','pairing','trade','tradehistory']},'private':{'post':['balance','biller','billgroup','billpay','cancel','deposit','getorders','history','option-issue','option-bid','option-sell','option-myissue','option-mybid','option-myoptions','option-exercise','option-cancel','option-history','order','withdrawal','withdrawal-history']}},fetchMarkets:function fetchMarkets(){var markets,keys,result,p,market,id,base,quote,symbol,_this189=this;return Promise.resolve().then(function(){return _this189.publicGetPairing();}).then(function(_resp){markets=_resp;keys=Object.keys(markets);result=[];for(p=0;p<keys.length;p++){market=markets[keys[p]];id=market['pairing_id'];base=market['primary_currency'];quote=market['secondary_currency'];symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},commonCurrencyCode:function commonCurrencyCode(currency){// why would they use three letters instead of four for currency codes
if(currency=='DAS')return'DASH';if(currency=='DOG')return'DOGE';return currency;},fetchBalance:function fetchBalance(){var response,balance,result,currencies,c,currency,code,account,_this190=this;return Promise.resolve().then(function(){return _this190.loadMarkets();}).then(function(){return _this190.privatePostBalance();}).then(function(_resp){response=_resp;balance=response['balance'];result={'info':balance};currencies=Object.keys(balance);for(c=0;c<currencies.length;c++){currency=currencies[c];code=_this190.commonCurrencyCode(currency);account={'free':parseFloat(balance[currency]['available']),'used':undefined,'total':parseFloat(balance[currency]['total'])};account['used']=account['total']-account['free'];result[code]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this191=this,_arguments179=arguments;return Promise.resolve().then(function(){params=_arguments179.length>1&&_arguments179[1]!==undefined?_arguments179[1]:{};return _this191.loadMarkets();}).then(function(){return _this191.publicGetOrderbook(_this191.extend({'pairing':_this191.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this191.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this191.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['orderbook']['bids']['highbid']),'ask':parseFloat(ticker['orderbook']['asks']['highbid']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last_price']),'change':parseFloat(ticker['change']),'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume_24hours']),'info':ticker};},fetchTickers:function fetchTickers(){var tickers,result,ids,i,id,ticker,market,symbol,_this192=this;return Promise.resolve().then(function(){return _this192.loadMarkets();}).then(function(){return _this192.publicGet();}).then(function(_resp){tickers=_resp;result={};ids=Object.keys(tickers);for(i=0;i<ids.length;i++){id=ids[i];ticker=tickers[id];market=_this192.markets_by_id[id];symbol=market['symbol'];result[symbol]=_this192.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,tickers,id,ticker,_this193=this;return Promise.resolve().then(function(){return _this193.loadMarkets();}).then(function(){p=_this193.market(market);return _this193.publicGet({'pairing':p['id']});}).then(function(_resp){tickers=_resp;id=p['id'].toString();ticker=tickers[id];return _this193.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this194=this;return Promise.resolve().then(function(){return _this194.loadMarkets();}).then(function(){return _this194.publicGetTrade({'pairing':_this194.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,response,_this195=this,_arguments183=arguments;return Promise.resolve().then(function(){price=_arguments183.length>4&&_arguments183[4]!==undefined?_arguments183[4]:undefined;params=_arguments183.length>5&&_arguments183[5]!==undefined?_arguments183[5]:{};return _this195.loadMarkets();}).then(function(){return _this195.privatePostOrder(_this195.extend({'pairing':_this195.marketId(market),'type':side,'amount':amount,'rate':price},params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['order_id'].toString()};});},cancelOrder:function cancelOrder(id){var pairing,_this196=this;return Promise.resolve().then(function(){return _this196.loadMarkets();}).then(function(){pairing=undefined;// TODO fixme
return _this196.privatePostCancel({'order_id':id,'pairing':pairing});});},request:function request(path){var api,method,params,headers,body,url,nonce,auth,signature,response,_test6,_this197=this,_arguments185=arguments;return Promise.resolve().then(function(){api=_arguments185.length>1&&_arguments185[1]!==undefined?_arguments185[1]:'public';method=_arguments185.length>2&&_arguments185[2]!==undefined?_arguments185[2]:'GET';params=_arguments185.length>3&&_arguments185[3]!==undefined?_arguments185[3]:{};headers=_arguments185.length>4&&_arguments185[4]!==undefined?_arguments185[4]:undefined;body=_arguments185.length>5&&_arguments185[5]!==undefined?_arguments185[5]:undefined;url=_this197.urls['api']+'/';if(path){url+=path+'/';}if(Object.keys(params).length){url+='?'+_this197.urlencode(params);}if(api=='private'){nonce=_this197.nonce();auth=_this197.apiKey+nonce.toString()+_this197.secret;signature=_this197.hash(_this197.encode(auth),'sha256');body=_this197.urlencode(_this197.extend({'key':_this197.apiKey,'nonce':nonce,'signature':signature// twofa: this.twofa,
},params));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}return _this197.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(api=='public'){return response;}else{_test6='success'in response;if(_test6&&response['success']){return response;}else{throw new ExchangeError(_this197.id+' '+_this197.json(response));}}});}};//-----------------------------------------------------------------------------
var ccex={'id':'ccex','name':'C-CEX','countries':['DE','EU'],'rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766433-16881f90-5ed8-11e7-92f8-3d92cc747a6c.jpg','api':{'tickers':'https://c-cex.com/t','public':'https://c-cex.com/t/api_pub.html','private':'https://c-cex.com/t/api.html'},'www':'https://c-cex.com','doc':'https://c-cex.com/?id=api'},'api':{'tickers':{'get':['coinnames','{market}','pairs','prices','volume_{coin}']},'public':{'get':['balancedistribution','markethistory','markets','marketsummaries','orderbook']},'private':{'get':['buylimit','cancel','getbalance','getbalances','getopenorders','getorder','getorderhistory','mytrades','selllimit']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,symbol,_this198=this;return Promise.resolve().then(function(){return _this198.publicGetMarkets();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets['result'].length;p++){market=markets['result'][p];id=market['MarketName'];base=market['MarketCurrency'];quote=market['BaseCurrency'];symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,account,_this199=this;return Promise.resolve().then(function(){return _this199.loadMarkets();}).then(function(){return _this199.privateGetBalances();}).then(function(_resp){response=_resp;balances=response['result'];result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['Currency'];account={'free':balance['Available'],'used':balance['Pending'],'total':balance['Balance']};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this200=this,_arguments188=arguments;return Promise.resolve().then(function(){params=_arguments188.length>1&&_arguments188[1]!==undefined?_arguments188[1]:{};return _this200.loadMarkets();}).then(function(){return _this200.publicGetOrderbook(_this200.extend({'market':_this200.marketId(market),'type':'both','depth':100},params));}).then(function(_resp){response=_resp;orderbook=response['result'];timestamp=_this200.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this200.iso8601(timestamp)};sides={'bids':'buy','asks':'sell'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['Rate']);amount=parseFloat(order['Quantity']);result[key].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=ticker['updated']*1000;return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['lastprice']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['avg']),'baseVolume':undefined,'quoteVolume':parseFloat(ticker['buysupport']),'info':ticker};},fetchTicker:function fetchTicker(market){var p,response,ticker,_this201=this;return Promise.resolve().then(function(){return _this201.loadMarkets();}).then(function(){p=_this201.market(market);return _this201.tickersGetMarket({'market':p['id'].toLowerCase()});}).then(function(_resp){response=_resp;ticker=response['ticker'];return _this201.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this202=this;return Promise.resolve().then(function(){return _this202.loadMarkets();}).then(function(){return _this202.publicGetMarkethistory({'market':_this202.marketId(market),'type':'both','depth':100});});},createOrder:function createOrder(market,type,side,amount){var price,params,method,response,_this203=this,_arguments191=arguments;return Promise.resolve().then(function(){price=_arguments191.length>4&&_arguments191[4]!==undefined?_arguments191[4]:undefined;params=_arguments191.length>5&&_arguments191[5]!==undefined?_arguments191[5]:{};return _this203.loadMarkets();}).then(function(){method='privateGet'+_this203.capitalize(side)+type;return _this203[method](_this203.extend({'market':_this203.marketId(market),'quantity':amount,'rate':price},params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['result']['uuid']};});},cancelOrder:function cancelOrder(id){var _this204=this;return Promise.resolve().then(function(){return _this204.loadMarkets();}).then(function(){return _this204.privateGetCancel({'uuid':id});});},request:function request(path){var api,method,params,headers,body,url,nonce,query,response,_test7,_this205=this,_arguments193=arguments;return Promise.resolve().then(function(){api=_arguments193.length>1&&_arguments193[1]!==undefined?_arguments193[1]:'public';method=_arguments193.length>2&&_arguments193[2]!==undefined?_arguments193[2]:'GET';params=_arguments193.length>3&&_arguments193[3]!==undefined?_arguments193[3]:{};headers=_arguments193.length>4&&_arguments193[4]!==undefined?_arguments193[4]:undefined;body=_arguments193.length>5&&_arguments193[5]!==undefined?_arguments193[5]:undefined;url=_this205.urls['api'][api];if(api=='private'){nonce=_this205.nonce().toString();query=_this205.keysort(_this205.extend({'a':path,'apikey':_this205.apiKey,'nonce':nonce},params));url+='?'+_this205.urlencode(query);headers={'apisign':_this205.hmac(_this205.encode(url),_this205.encode(_this205.secret),'sha512')};}else{if(api=='public'){url+='?'+_this205.urlencode(_this205.extend({'a':'get'+path},params));}else{url+='/'+_this205.implodeParams(path,params)+'.json';}}return _this205.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(api=='tickers'){return response;}else{_test7='success'in response;if(_test7&&response['success']){return response;}else{throw new ExchangeError(_this205.id+' '+_this205.json(response));}}});}};//-----------------------------------------------------------------------------
var cex={'id':'cex','name':'CEX.IO','countries':['GB','EU','CY','RU'],'rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg','api':'https://cex.io/api','www':'https://cex.io','doc':'https://cex.io/cex-api'},'api':{'public':{'get':['currency_limits','last_price/{pair}','last_prices/{currencies}','ohlcv/hd/{yyyymmdd}/{pair}','order_book/{pair}','ticker/{pair}','tickers/{currencies}','trade_history/{pair}'],'post':['convert/{pair}','price_stats/{pair}']},'private':{'post':['active_orders_status/','archived_orders/{pair}','balance/','cancel_order/','cancel_orders/{pair}','cancel_replace_order/{pair}','close_position/{pair}','get_address/','get_myfee/','get_order/','get_order_tx/','open_orders/{pair}','open_orders/','open_position/{pair}','open_positions/{pair}','place_order/{pair}','place_order/{pair}']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,symbol,_symbol$split5,_symbol$split6,base,quote,_this206=this;return Promise.resolve().then(function(){return _this206.publicGetCurrencyLimits();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets['data']['pairs'].length;p++){market=markets['data']['pairs'][p];id=market['symbol1']+'/'+market['symbol2'];symbol=id;_symbol$split5=symbol.split('/');_symbol$split6=_slicedToArray(_symbol$split5,2);base=_symbol$split6[0];quote=_symbol$split6[1];result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balances,result,c,currency,account,_this207=this;return Promise.resolve().then(function(){return _this207.loadMarkets();}).then(function(){return _this207.privatePostBalance();}).then(function(_resp){balances=_resp;result={'info':balances};for(c=0;c<_this207.currencies.length;c++){currency=_this207.currencies[c];account={'free':parseFloat(balances[currency]['available']),'used':parseFloat(balances[currency]['orders']),'total':undefined};account['total']=_this207.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,_this208=this,_arguments196=arguments;return Promise.resolve().then(function(){params=_arguments196.length>1&&_arguments196[1]!==undefined?_arguments196[1]:{};return _this208.loadMarkets();}).then(function(){return _this208.publicGetOrderBookPair(_this208.extend({'pair':_this208.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=orderbook['timestamp']*1000;result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this208.iso8601(timestamp)};return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=parseInt(ticker['timestamp'])*1000;return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};},fetchTickers:function fetchTickers(){var currencies,response,tickers,result,t,ticker,symbol,market,_this209=this;return Promise.resolve().then(function(){return _this209.loadMarkets();}).then(function(){currencies=_this209.currencies.join('/');return _this209.publicGetTickersCurrencies({'currencies':currencies});}).then(function(_resp){response=_resp;tickers=response['data'];result={};for(t=0;t<tickers.length;t++){ticker=tickers[t];symbol=ticker['pair'].replace(':','/');market=_this209.markets[symbol];result[symbol]=_this209.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this210=this;return Promise.resolve().then(function(){return _this210.loadMarkets();}).then(function(){p=_this210.market(market);return _this210.publicGetTickerPair({'pair':p['id']});}).then(function(_resp){ticker=_resp;return _this210.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this211=this;return Promise.resolve().then(function(){return _this211.loadMarkets();}).then(function(){return _this211.publicGetTradeHistoryPair({'pair':_this211.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this212=this,_arguments200=arguments;return Promise.resolve().then(function(){price=_arguments200.length>4&&_arguments200[4]!==undefined?_arguments200[4]:undefined;params=_arguments200.length>5&&_arguments200[5]!==undefined?_arguments200[5]:{};return _this212.loadMarkets();}).then(function(){order={'pair':_this212.marketId(market),'type':side,'amount':amount};if(type=='limit'){order['price']=price;}else{order['order_type']=type;}return _this212.privatePostPlaceOrderPair(_this212.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var _this213=this;return Promise.resolve().then(function(){return _this213.loadMarkets();}).then(function(){return _this213.privatePostCancelOrder({'id':id});});},request:function request(path){var api,method,params,headers,body,url,query,nonce,auth,signature,response,_test8,_test9,_this214=this,_arguments202=arguments;return Promise.resolve().then(function(){api=_arguments202.length>1&&_arguments202[1]!==undefined?_arguments202[1]:'public';method=_arguments202.length>2&&_arguments202[2]!==undefined?_arguments202[2]:'GET';params=_arguments202.length>3&&_arguments202[3]!==undefined?_arguments202[3]:{};headers=_arguments202.length>4&&_arguments202[4]!==undefined?_arguments202[4]:undefined;body=_arguments202.length>5&&_arguments202[5]!==undefined?_arguments202[5]:undefined;url=_this214.urls['api']+'/'+_this214.implodeParams(path,params);query=_this214.omit(params,_this214.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this214.urlencode(query);}}else{if(!_this214.uid){throw new AuthenticationError(_this214.id+' requires `'+_this214.id+'.uid` property for authentication');}nonce=_this214.nonce().toString();auth=nonce+_this214.uid+_this214.apiKey;signature=_this214.hmac(_this214.encode(auth),_this214.encode(_this214.secret));body=_this214.urlencode(_this214.extend({'key':_this214.apiKey,'signature':signature.toUpperCase(),'nonce':nonce},query));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}return _this214.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test8='e'in response;_test9=_test8&&'ok'in response;if(_test9&&response['ok']=='ok'){return response;}else{if(_test8){throw new ExchangeError(_this214.id+' '+_this214.json(response));}return response;}});}};//-----------------------------------------------------------------------------
var chbtc={'id':'chbtc','name':'CHBTC','countries':'CN','rateLimit':1000,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/28555659-f0040dc2-7109-11e7-9d99-688a438bf9f4.jpg','api':{'public':'http://api.chbtc.com/data',// no https for public API
'private':'https://trade.chbtc.com/api'},'www':'https://trade.chbtc.com/api','doc':'https://www.chbtc.com/i/developer'},'api':{'public':{'get':['ticker','depth','trades','kline']},'private':{'post':['order','cancelOrder','getOrder','getOrders','getOrdersNew','getOrdersIgnoreTradeType','getUnfinishedOrdersIgnoreTradeType','getAccountInfo','getUserAddress','getWithdrawAddress','getWithdrawRecord','getChargeRecord','getCnyWithdrawRecord','getCnyChargeRecord','withdraw']}},'markets':{'BTC/CNY':{'id':'btc_cny','symbol':'BTC/CNY','base':'BTC','quote':'CNY'},'LTC/CNY':{'id':'ltc_cny','symbol':'LTC/CNY','base':'LTC','quote':'CNY'},'ETH/CNY':{'id':'eth_cny','symbol':'ETH/CNY','base':'ETH','quote':'CNY'},'ETC/CNY':{'id':'etc_cny','symbol':'ETC/CNY','base':'ETC','quote':'CNY'},'BTS/CNY':{'id':'bts_cny','symbol':'BTS/CNY','base':'BTS','quote':'CNY'},'EOS/CNY':{'id':'eos_cny','symbol':'EOS/CNY','base':'EOS','quote':'CNY'}},fetchBalance:function fetchBalance(){var response,balances,result,c,currency,account,_this215=this;return Promise.resolve().then(function(){return _this215.privatePostGetAccountInfo();}).then(function(_resp){response=_resp;balances=response['result'];result={'info':balances};for(c=0;c<_this215.currencies.length;c++){currency=_this215.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balances['balance']){account['free']=balances['balance'][currency]['amount'];}if(currency in balances['frozen']){account['used']=balances['frozen'][currency]['amount'];}account['total']=_this215.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,bids,asks,result,_this216=this,_arguments204=arguments;return Promise.resolve().then(function(){params=_arguments204.length>1&&_arguments204[1]!==undefined?_arguments204[1]:{};p=_this216.market(market);return _this216.publicGetDepth(_this216.extend({'currency':p['id']},params));}).then(function(_resp){orderbook=_resp;timestamp=_this216.milliseconds();bids=undefined;asks=undefined;if('bids'in orderbook){bids=orderbook['bids'];}if('asks'in orderbook){asks=orderbook['asks'];}result={'bids':bids,'asks':asks,'timestamp':timestamp,'datetime':_this216.iso8601(timestamp)};if(result['bids']){result['bids']=_this216.sortBy(result['bids'],0,true);}if(result['asks']){result['asks']=_this216.sortBy(result['asks'],0);}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,_this217=this;return Promise.resolve().then(function(){return _this217.publicGetTicker({'currency':_this217.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['ticker'];timestamp=_this217.milliseconds();return{'timestamp':timestamp,'datetime':_this217.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this218=this;return _this218.publicGetTrades({'currency':_this218.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,paramString,tradeType,response,_this219=this,_arguments207=arguments;return Promise.resolve().then(function(){price=_arguments207.length>4&&_arguments207[4]!==undefined?_arguments207[4]:undefined;params=_arguments207.length>5&&_arguments207[5]!==undefined?_arguments207[5]:{};paramString='&price='+price.toString();paramString+='&amount='+amount.toString();tradeType=side=='buy'?'1':'0';paramString+='&tradeType='+tradeType;paramString+='&currency='+_this219.marketId(market);return _this219.privatePostOrder(paramString);}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var params,paramString,_this220=this,_arguments208=arguments;params=_arguments208.length>1&&_arguments208[1]!==undefined?_arguments208[1]:{};paramString='&id='+id.toString();if('currency'in params){paramString+='&currency='+params['currency'];}return _this220.privatePostCancelOrder(paramString);},fetchOrder:function fetchOrder(id){var params,paramString,_this221=this,_arguments209=arguments;params=_arguments209.length>1&&_arguments209[1]!==undefined?_arguments209[1]:{};paramString='&id='+id.toString();if('currency'in params){paramString+='&currency='+params['currency'];}return _this221.privatePostGetOrder(paramString);},nonce:function nonce(){return this.milliseconds();},request:function request(path){var api,method,params,headers,body,url,paramsLength,nonce,auth,secret,signature,suffix,response,_this222=this,_arguments210=arguments;return Promise.resolve().then(function(){api=_arguments210.length>1&&_arguments210[1]!==undefined?_arguments210[1]:'public';method=_arguments210.length>2&&_arguments210[2]!==undefined?_arguments210[2]:'GET';params=_arguments210.length>3&&_arguments210[3]!==undefined?_arguments210[3]:{};headers=_arguments210.length>4&&_arguments210[4]!==undefined?_arguments210[4]:undefined;body=_arguments210.length>5&&_arguments210[5]!==undefined?_arguments210[5]:undefined;url=_this222.urls['api'][api];if(api=='public'){url+='/'+_this222.version+'/'+path;if(Object.keys(params).length){url+='?'+_this222.urlencode(params);}}else{paramsLength=params.length;// params should be a string here!
nonce=_this222.nonce();auth='method='+path;auth+='&accesskey='+_this222.apiKey;auth+=paramsLength?params:'';secret=_this222.hash(_this222.encode(_this222.secret),'sha1');signature=_this222.hmac(_this222.encode(auth),_this222.encode(secret),'md5');suffix='sign='+signature+'&reqTime='+nonce.toString();url+='/'+path+'?'+auth+'&'+suffix;}return _this222.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(api=='private'){if('code'in response){throw new ExchangeError(_this222.id+' '+_this222.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var chilebit=extend(blinktrade,{'id':'chilebit','name':'ChileBit','countries':'CL','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27991414-1298f0d8-647f-11e7-9c40-d56409266336.jpg','api':{'public':'https://api.blinktrade.com/api','private':'https://api.blinktrade.com/tapi'},'www':'https://chilebit.net','doc':'https://blinktrade.com/docs'},'comment':'Blinktrade API','markets':{'BTC/CLP':{'id':'BTCCLP','symbol':'BTC/CLP','base':'BTC','quote':'CLP','brokerId':9,'broker':'ChileBit'}}});//-----------------------------------------------------------------------------
var coincheck={'id':'coincheck','name':'coincheck','countries':['JP','ID'],'rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766464-3b5c3c74-5ed9-11e7-840e-31b32968e1da.jpg','api':'https://coincheck.com/api','www':'https://coincheck.com','doc':'https://coincheck.com/documents/exchange/api'},'api':{'public':{'get':['exchange/orders/rate','order_books','rate/{pair}','ticker','trades']},'private':{'get':['accounts','accounts/balance','accounts/leverage_balance','bank_accounts','deposit_money','exchange/orders/opens','exchange/orders/transactions','exchange/orders/transactions_pagination','exchange/leverage/positions','lending/borrows/matches','send_money','withdraws'],'post':['bank_accounts','deposit_money/{id}/fast','exchange/orders','exchange/transfers/to_leverage','exchange/transfers/from_leverage','lending/borrows','lending/borrows/{id}/repay','send_money','withdraws'],'delete':['bank_accounts/{id}','exchange/orders/{id}','withdraws/{id}']}},'markets':{'BTC/JPY':{'id':'btc_jpy','symbol':'BTC/JPY','base':'BTC','quote':'JPY'},// the only real pair
'ETH/JPY':{'id':'eth_jpy','symbol':'ETH/JPY','base':'ETH','quote':'JPY'},'ETC/JPY':{'id':'etc_jpy','symbol':'ETC/JPY','base':'ETC','quote':'JPY'},'DAO/JPY':{'id':'dao_jpy','symbol':'DAO/JPY','base':'DAO','quote':'JPY'},'LSK/JPY':{'id':'lsk_jpy','symbol':'LSK/JPY','base':'LSK','quote':'JPY'},'FCT/JPY':{'id':'fct_jpy','symbol':'FCT/JPY','base':'FCT','quote':'JPY'},'XMR/JPY':{'id':'xmr_jpy','symbol':'XMR/JPY','base':'XMR','quote':'JPY'},'REP/JPY':{'id':'rep_jpy','symbol':'REP/JPY','base':'REP','quote':'JPY'},'XRP/JPY':{'id':'xrp_jpy','symbol':'XRP/JPY','base':'XRP','quote':'JPY'},'ZEC/JPY':{'id':'zec_jpy','symbol':'ZEC/JPY','base':'ZEC','quote':'JPY'},'XEM/JPY':{'id':'xem_jpy','symbol':'XEM/JPY','base':'XEM','quote':'JPY'},'LTC/JPY':{'id':'ltc_jpy','symbol':'LTC/JPY','base':'LTC','quote':'JPY'},'DASH/JPY':{'id':'dash_jpy','symbol':'DASH/JPY','base':'DASH','quote':'JPY'},'ETH/BTC':{'id':'eth_btc','symbol':'ETH/BTC','base':'ETH','quote':'BTC'},'ETC/BTC':{'id':'etc_btc','symbol':'ETC/BTC','base':'ETC','quote':'BTC'},'LSK/BTC':{'id':'lsk_btc','symbol':'LSK/BTC','base':'LSK','quote':'BTC'},'FCT/BTC':{'id':'fct_btc','symbol':'FCT/BTC','base':'FCT','quote':'BTC'},'XMR/BTC':{'id':'xmr_btc','symbol':'XMR/BTC','base':'XMR','quote':'BTC'},'REP/BTC':{'id':'rep_btc','symbol':'REP/BTC','base':'REP','quote':'BTC'},'XRP/BTC':{'id':'xrp_btc','symbol':'XRP/BTC','base':'XRP','quote':'BTC'},'ZEC/BTC':{'id':'zec_btc','symbol':'ZEC/BTC','base':'ZEC','quote':'BTC'},'XEM/BTC':{'id':'xem_btc','symbol':'XEM/BTC','base':'XEM','quote':'BTC'},'LTC/BTC':{'id':'ltc_btc','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'DASH/BTC':{'id':'dash_btc','symbol':'DASH/BTC','base':'DASH','quote':'BTC'}},fetchBalance:function fetchBalance(){var balances,result,c,currency,lowercase,account,reserved,_this223=this;return Promise.resolve().then(function(){return _this223.privateGetAccountsBalance();}).then(function(_resp){balances=_resp;result={'info':balances};for(c=0;c<_this223.currencies.length;c++){currency=_this223.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if(lowercase in balances){account['free']=parseFloat(balances[lowercase]);}reserved=lowercase+'_reserved';if(reserved in balances){account['used']=parseFloat(balances[reserved]);}account['total']=_this223.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this224=this,_arguments212=arguments;return Promise.resolve().then(function(){params=_arguments212.length>1&&_arguments212[1]!==undefined?_arguments212[1]:{};return _this224.publicGetOrderBooks(params);}).then(function(_resp){orderbook=_resp;timestamp=_this224.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this224.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this225=this;return Promise.resolve().then(function(){return _this225.publicGetTicker();}).then(function(_resp){ticker=_resp;timestamp=ticker['timestamp']*1000;return{'timestamp':timestamp,'datetime':_this225.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this226=this;return _this226.publicGetTrades();},createOrder:function createOrder(market,type,side,amount){var price,params,prefix,order,order_type,_prefix,response,_this227=this,_arguments215=arguments;return Promise.resolve().then(function(){price=_arguments215.length>4&&_arguments215[4]!==undefined?_arguments215[4]:undefined;params=_arguments215.length>5&&_arguments215[5]!==undefined?_arguments215[5]:{};prefix='';order={'pair':_this227.marketId(market)};if(type=='market'){order_type=type+'_'+side;order['order_type']=order_type;_prefix=side==buy?order_type+'_':'';order[_prefix+'amount']=amount;}else{order['order_type']=side;order['rate']=price;order['amount']=amount;}return _this227.privatePostExchangeOrders(_this227.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id'].toString()};});},cancelOrder:function cancelOrder(id){var _this228=this;return _this228.privateDeleteExchangeOrdersId({'id':id});},request:function request(path){var api,method,params,headers,body,url,query,nonce,length,auth,response,_test10,_this229=this,_arguments217=arguments;return Promise.resolve().then(function(){api=_arguments217.length>1&&_arguments217[1]!==undefined?_arguments217[1]:'public';method=_arguments217.length>2&&_arguments217[2]!==undefined?_arguments217[2]:'GET';params=_arguments217.length>3&&_arguments217[3]!==undefined?_arguments217[3]:{};headers=_arguments217.length>4&&_arguments217[4]!==undefined?_arguments217[4]:undefined;body=_arguments217.length>5&&_arguments217[5]!==undefined?_arguments217[5]:undefined;url=_this229.urls['api']+'/'+_this229.implodeParams(path,params);query=_this229.omit(params,_this229.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this229.urlencode(query);}}else{nonce=_this229.nonce().toString();length=0;if(Object.keys(query).length){body=_this229.urlencode(_this229.keysort(query));length=body.length;}auth=nonce+url+(body||'');headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':length,'ACCESS-KEY':_this229.apiKey,'ACCESS-NONCE':nonce,'ACCESS-SIGNATURE':_this229.hmac(_this229.encode(auth),_this229.encode(_this229.secret))};}return _this229.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(api=='public'){return response;}else{_test10='success'in response;if(_test10&&response['success']){return response;}else{throw new ExchangeError(_this229.id+' '+_this229.json(response));}}});}};//-----------------------------------------------------------------------------
var coingi={'id':'coingi','name':'Coingi','rateLimit':1000,'countries':['PA','BG','CN','US'],// Panama, Bulgaria, China, US
'urls':{'logo':'https://user-images.githubusercontent.com/1294454/28619707-5c9232a8-7212-11e7-86d6-98fe5d15cc6e.jpg','api':'https://api.coingi.com','www':'https://coingi.com','doc':'http://docs.coingi.apiary.io/'},'api':{'current':{'get':['order-book/{pair}/{askCount}/{bidCount}/{depth}','transactions/{pair}/{maxCount}','24hour-rolling-aggregation']},'user':{'post':['balance','add-order','cancel-order','orders','transactions','create-crypto-withdrawal']}},'markets':{'LTC/BTC':{'id':'ltc-btc','symbol':'LTC/BTC','base':'LTC','quote':'BTC'},'PPC/BTC':{'id':'ppc-btc','symbol':'PPC/BTC','base':'PPC','quote':'BTC'},'DOGE/BTC':{'id':'doge-btc','symbol':'DOGE/BTC','base':'DOGE','quote':'BTC'},'VTC/BTC':{'id':'vtc-btc','symbol':'VTC/BTC','base':'VTC','quote':'BTC'},'FTC/BTC':{'id':'ftc-btc','symbol':'FTC/BTC','base':'FTC','quote':'BTC'},'NMC/BTC':{'id':'nmc-btc','symbol':'NMC/BTC','base':'NMC','quote':'BTC'},'DASH/BTC':{'id':'dash-btc','symbol':'DASH/BTC','base':'DASH','quote':'BTC'}},fetchBalance:function fetchBalance(){var currencies,c,currency,balances,result,b,balance,_currency4,account,_this230=this;return Promise.resolve().then(function(){currencies=[];for(c=0;c<_this230.currencies.length;c++){currency=_this230.currencies[c].toLowerCase();currencies.push(currency);}return _this230.userPostBalance({'currencies':currencies.join(',')});}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];_currency4=balance['currency']['name'];_currency4=_currency4.toUpperCase();account={'free':balance['available'],'used':balance['blocked']+balance['inOrders']+balance['withdrawing'],'total':undefined};account['total']=_this230.sum(account['free'],account['used']);result[_currency4]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this231=this,_arguments219=arguments;return Promise.resolve().then(function(){params=_arguments219.length>1&&_arguments219[1]!==undefined?_arguments219[1]:{};p=_this231.market(market);return _this231.currentGetOrderBookPairAskCountBidCountDepth(_this231.extend({'pair':p['id'],'askCount':512,// maximum returned number of asks 1-512
'bidCount':512,// maximum returned number of bids 1-512
'depth':32// maximum number of depth range steps 1-32
},params));}).then(function(_resp){orderbook=_resp;timestamp=_this231.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this231.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order['price'];amount=order['baseAmount'];result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':ticker['high'],'low':ticker['low'],'bid':ticker['highestBid'],'ask':ticker['lowestAsk'],'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':undefined,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':ticker['baseVolume'],'quoteVolume':ticker['counterVolume'],'info':ticker};return ticker;},fetchTickers:function fetchTickers(){var response,result,t,ticker,base,quote,symbol,market,_this232=this;return Promise.resolve().then(function(){return _this232.currentGet24hourRollingAggregation();}).then(function(_resp){response=_resp;result={};for(t=0;t<response.length;t++){ticker=response[t];base=ticker['currencyPair']['base'].toUpperCase();quote=ticker['currencyPair']['counter'].toUpperCase();symbol=base+'/'+quote;market=_this232.markets[symbol];result[symbol]=_this232.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var response,tickers,t,ticker,base,quote,_symbol,p,symbol,_ticker,_this233=this;return Promise.resolve().then(function(){return _this233.currentGet24hourRollingAggregation();}).then(function(_resp){response=_resp;tickers={};for(t=0;t<response.length;t++){ticker=response[t];base=ticker['currencyPair']['base'].toUpperCase();quote=ticker['currencyPair']['counter'].toUpperCase();_symbol=base+'/'+quote;tickers[_symbol]=ticker;}p=_this233.market(market);symbol=p['symbol'];if(symbol in tickers){_ticker=tickers[symbol];return _this233.parseTicker(_ticker,p);}else{throw new ExchangeError(_this233.id+' '+symbol+' ticker not found');}});},fetchTrades:function fetchTrades(market){var _this234=this;return _this234.publicGetTransactionsPairMaxCount({'pair':_this234.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this235=this,_arguments223=arguments;return Promise.resolve().then(function(){price=_arguments223.length>4&&_arguments223[4]!==undefined?_arguments223[4]:undefined;params=_arguments223.length>5&&_arguments223[5]!==undefined?_arguments223[5]:{};order={'currencyPair':_this235.marketId(market),'volume':amount,'price':price,'orderType':side=='buy'?0:1};return _this235.userPostAddOrder(_this235.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['result']};});},cancelOrder:function cancelOrder(id){var _this236=this;return _this236.userPostCancelOrder({'orderId':id});},request:function request(path){var api,method,params,headers,body,url,query,nonce,request,auth,response,_this237=this,_arguments225=arguments;return Promise.resolve().then(function(){api=_arguments225.length>1&&_arguments225[1]!==undefined?_arguments225[1]:'public';method=_arguments225.length>2&&_arguments225[2]!==undefined?_arguments225[2]:'GET';params=_arguments225.length>3&&_arguments225[3]!==undefined?_arguments225[3]:{};headers=_arguments225.length>4&&_arguments225[4]!==undefined?_arguments225[4]:undefined;body=_arguments225.length>5&&_arguments225[5]!==undefined?_arguments225[5]:undefined;url=_this237.urls['api']+'/'+api+'/'+_this237.implodeParams(path,params);query=_this237.omit(params,_this237.extractParams(path));if(api=='current'){if(Object.keys(query).length){url+='?'+_this237.urlencode(query);}}else{nonce=_this237.nonce();request=_this237.extend({'token':_this237.apiKey,'nonce':nonce},query);auth=nonce.toString()+'$'+_this237.apiKey;request['signature']=_this237.hmac(_this237.encode(auth),_this237.encode(_this237.secret));body=_this237.json(request);headers={'Content-Type':'application/json','Content-Length':body.length};}return _this237.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('errors'in response){throw new ExchangeError(_this237.id+' '+_this237.json(response));}return response;});}};//-----------------------------------------------------------------------------
var coinmarketcap={'id':'coinmarketcap','name':'CoinMarketCap','rateLimit':10000,'version':'v1','countries':'US','urls':{'logo':'https://user-images.githubusercontent.com/1294454/28244244-9be6312a-69ed-11e7-99c1-7c1797275265.jpg','api':'https://api.coinmarketcap.com','www':'https://coinmarketcap.com','doc':'https://coinmarketcap.com/api'},'api':{'public':{'get':['ticker/','ticker/{id}/','global/']}},'currencies':['AUD','BRL','CAD','CHF','CNY','EUR','GBP','HKD','IDR','INR','JPY','KRW','MXN','RUB','USD'],fetchOrderBook:function fetchOrderBook(market){var params,_this238=this,_arguments226=arguments;params=_arguments226.length>1&&_arguments226[1]!==undefined?_arguments226[1]:{};throw new ExchangeError('Fetching order books is not supported by the API of '+_this238.id);},fetchMarkets:function fetchMarkets(){var markets,result,p,market,c,base,baseId,quote,quoteId,symbol,id,_this239=this;return Promise.resolve().then(function(){return _this239.publicGetTicker();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];for(c=0;c<_this239.currencies.length;c++){base=market['symbol'];baseId=market['id'];quote=_this239.currencies[c];quoteId=quote.toLowerCase();symbol=base+'/'+quote;id=baseId+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'baseId':baseId,'quoteId':quoteId,'info':market});}}return result;});},fetchGlobal:function fetchGlobal(){var currency,request,_this240=this,_arguments228=arguments;return Promise.resolve().then(function(){currency=_arguments228.length>0&&_arguments228[0]!==undefined?_arguments228[0]:'USD';return _this240.loadMarkets();}).then(function(){request={};if(currency){request['convert']=currency;}return _this240.publicGetGlobal(request);});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();if('last_updated'in ticker)if(ticker['last_updated'])timestamp=parseInt(ticker['last_updated'])*1000;var volume=undefined;var volumeKey='24h_volume_'+market['quoteId'];if(ticker[volumeKey])volume=parseFloat(ticker[volumeKey]);var price='price_'+market['quoteId'];var change=undefined;var changeKey='percent_change_24h';if(ticker[changeKey])change=parseFloat(ticker[changeKey]);return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':undefined,'low':undefined,'bid':undefined,'ask':undefined,'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker[price]),'change':change,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':volume,'info':ticker};},fetchTickers:function fetchTickers(){var currency,request,response,tickers,t,ticker,id,market,symbol,_this241=this,_arguments229=arguments;return Promise.resolve().then(function(){currency=_arguments229.length>0&&_arguments229[0]!==undefined?_arguments229[0]:'USD';return _this241.loadMarkets();}).then(function(){request={};if(currency){request['convert']=currency;}return _this241.publicGetTicker(request);}).then(function(_resp){response=_resp;tickers={};for(t=0;t<response.length;t++){ticker=response[t];id=ticker['id']+'/'+currency;market=_this241.markets_by_id[id];symbol=market['symbol'];tickers[symbol]=_this241.parseTicker(ticker,market);}return tickers;});},fetchTicker:function fetchTicker(market){var p,request,response,ticker,_this242=this;return Promise.resolve().then(function(){return _this242.loadMarkets();}).then(function(){p=_this242.market(market);request={'convert':p['quote'],'id':p['baseId']};return _this242.publicGetTickerId(request);}).then(function(_resp){response=_resp;ticker=response[0];return _this242.parseTicker(ticker,p);});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api']+'/'+this.version+'/'+this.implodeParams(path,params);var query=this.omit(params,this.extractParams(path));if(Object.keys(query).length)url+='?'+this.urlencode(query);return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var coinmate={'id':'coinmate','name':'CoinMate','countries':['GB','CZ'],// UK, Czech Republic
'rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27811229-c1efb510-606c-11e7-9a36-84ba2ce412d8.jpg','api':'https://coinmate.io/api','www':'https://coinmate.io','doc':['http://docs.coinmate.apiary.io','https://coinmate.io/developers']},'api':{'public':{'get':['orderBook','ticker','transactions']},'private':{'post':['balances','bitcoinWithdrawal','bitcoinDepositAddresses','buyInstant','buyLimit','cancelOrder','cancelOrderWithInfo','createVoucher','openOrders','redeemVoucher','sellInstant','sellLimit','transactionHistory','unconfirmedBitcoinDeposits']}},'markets':{'BTC/EUR':{'id':'BTC_EUR','symbol':'BTC/EUR','base':'BTC','quote':'EUR'},'BTC/CZK':{'id':'BTC_CZK','symbol':'BTC/CZK','base':'BTC','quote':'CZK'}},fetchBalance:function fetchBalance(){var response,balances,result,c,currency,account,_this243=this;return Promise.resolve().then(function(){return _this243.privatePostBalances();}).then(function(_resp){response=_resp;balances=response['data'];result={'info':balances};for(c=0;c<_this243.currencies.length;c++){currency=_this243.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in balances){account['free']=balances[currency]['available'];account['used']=balances[currency]['reserved'];account['total']=balances[currency]['balance'];}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this244=this,_arguments232=arguments;return Promise.resolve().then(function(){params=_arguments232.length>1&&_arguments232[1]!==undefined?_arguments232[1]:{};return _this244.publicGetOrderBook(_this244.extend({'currencyPair':_this244.marketId(market),'groupByPriceLimit':'False'},params));}).then(function(_resp){response=_resp;orderbook=response['data'];timestamp=orderbook['timestamp']*1000;result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this244.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order['price'];amount=order['amount'];result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,_this245=this;return Promise.resolve().then(function(){return _this245.publicGetTicker({'currencyPair':_this245.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['data'];timestamp=ticker['timestamp']*1000;return{'timestamp':timestamp,'datetime':_this245.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['amount']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this246=this;return _this246.publicGetTransactions({'currencyPair':_this246.marketId(market),'minutesIntoHistory':10});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,_this247=this,_arguments235=arguments;return Promise.resolve().then(function(){price=_arguments235.length>4&&_arguments235[4]!==undefined?_arguments235[4]:undefined;params=_arguments235.length>5&&_arguments235[5]!==undefined?_arguments235[5]:{};method='privatePost'+_this247.capitalize(side);order={'currencyPair':_this247.marketId(market)};if(type=='market'){if(side=='buy'){order['total']=amount;// amount in fiat
}else{order['amount']=amount;}// amount in fiat
method+='Instant';}else{order['amount']=amount;// amount in crypto
order['price']=price;method+=_this247.capitalize(type);}return _this247[method](self.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['data'].toString()};});},cancelOrder:function cancelOrder(id){var _this248=this;return _this248.privatePostCancelOrder({'orderId':id});},request:function request(path){var api,method,params,headers,body,url,nonce,auth,signature,response,_this249=this,_arguments237=arguments;return Promise.resolve().then(function(){api=_arguments237.length>1&&_arguments237[1]!==undefined?_arguments237[1]:'public';method=_arguments237.length>2&&_arguments237[2]!==undefined?_arguments237[2]:'GET';params=_arguments237.length>3&&_arguments237[3]!==undefined?_arguments237[3]:{};headers=_arguments237.length>4&&_arguments237[4]!==undefined?_arguments237[4]:undefined;body=_arguments237.length>5&&_arguments237[5]!==undefined?_arguments237[5]:undefined;url=_this249.urls['api']+'/'+path;if(api=='public'){if(Object.keys(params).length){url+='?'+_this249.urlencode(params);}}else{if(!_this249.uid){throw new AuthenticationError(_this249.id+' requires `'+_this249.id+'.uid` property for authentication');}nonce=_this249.nonce().toString();auth=nonce+_this249.uid+_this249.apiKey;signature=_this249.hmac(_this249.encode(auth),_this249.encode(_this249.secret));body=_this249.urlencode(_this249.extend({'clientId':_this249.uid,'nonce':nonce,'publicKey':_this249.apiKey,'signature':signature.toUpperCase()},params));headers={'Content-Type':'application/x-www-form-urlencoded'};}return _this249.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){if(response['error']){throw new ExchangeError(_this249.id+' '+_this249.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var coinsecure={'id':'coinsecure','name':'Coinsecure','countries':'IN',// India
'rateLimit':1000,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766472-9cbd200a-5ed9-11e7-9551-2267ad7bac08.jpg','api':'https://api.coinsecure.in','www':'https://coinsecure.in','doc':['https://api.coinsecure.in','https://github.com/coinsecure/plugins']},'api':{'public':{'get':['bitcoin/search/confirmation/{txid}','exchange/ask/low','exchange/ask/orders','exchange/bid/high','exchange/bid/orders','exchange/lastTrade','exchange/max24Hr','exchange/min24Hr','exchange/ticker','exchange/trades']},'private':{'get':['mfa/authy/call','mfa/authy/sms','netki/search/{netkiName}','user/bank/otp/{number}','user/kyc/otp/{number}','user/profile/phone/otp/{number}','user/wallet/coin/address/{id}','user/wallet/coin/deposit/confirmed/all','user/wallet/coin/deposit/confirmed/{id}','user/wallet/coin/deposit/unconfirmed/all','user/wallet/coin/deposit/unconfirmed/{id}','user/wallet/coin/wallets','user/exchange/bank/fiat/accounts','user/exchange/bank/fiat/balance/available','user/exchange/bank/fiat/balance/pending','user/exchange/bank/fiat/balance/total','user/exchange/bank/fiat/deposit/cancelled','user/exchange/bank/fiat/deposit/unverified','user/exchange/bank/fiat/deposit/verified','user/exchange/bank/fiat/withdraw/cancelled','user/exchange/bank/fiat/withdraw/completed','user/exchange/bank/fiat/withdraw/unverified','user/exchange/bank/fiat/withdraw/verified','user/exchange/ask/cancelled','user/exchange/ask/completed','user/exchange/ask/pending','user/exchange/bid/cancelled','user/exchange/bid/completed','user/exchange/bid/pending','user/exchange/bank/coin/addresses','user/exchange/bank/coin/balance/available','user/exchange/bank/coin/balance/pending','user/exchange/bank/coin/balance/total','user/exchange/bank/coin/deposit/cancelled','user/exchange/bank/coin/deposit/unverified','user/exchange/bank/coin/deposit/verified','user/exchange/bank/coin/withdraw/cancelled','user/exchange/bank/coin/withdraw/completed','user/exchange/bank/coin/withdraw/unverified','user/exchange/bank/coin/withdraw/verified','user/exchange/bank/summary','user/exchange/coin/fee','user/exchange/fiat/fee','user/exchange/kycs','user/exchange/referral/coin/paid','user/exchange/referral/coin/successful','user/exchange/referral/fiat/paid','user/exchange/referrals','user/exchange/trade/summary','user/login/token/{token}','user/summary','user/wallet/summary','wallet/coin/withdraw/cancelled','wallet/coin/withdraw/completed','wallet/coin/withdraw/unverified','wallet/coin/withdraw/verified'],'post':['login','login/initiate','login/password/forgot','mfa/authy/initiate','mfa/ga/initiate','signup','user/netki/update','user/profile/image/update','user/exchange/bank/coin/withdraw/initiate','user/exchange/bank/coin/withdraw/newVerifycode','user/exchange/bank/fiat/withdraw/initiate','user/exchange/bank/fiat/withdraw/newVerifycode','user/password/change','user/password/reset','user/wallet/coin/withdraw/initiate','wallet/coin/withdraw/newVerifycode'],'put':['signup/verify/{token}','user/exchange/kyc','user/exchange/bank/fiat/deposit/new','user/exchange/ask/new','user/exchange/bid/new','user/exchange/instant/buy','user/exchange/instant/sell','user/exchange/bank/coin/withdraw/verify','user/exchange/bank/fiat/account/new','user/exchange/bank/fiat/withdraw/verify','user/mfa/authy/initiate/enable','user/mfa/ga/initiate/enable','user/netki/create','user/profile/phone/new','user/wallet/coin/address/new','user/wallet/coin/new','user/wallet/coin/withdraw/sendToExchange','user/wallet/coin/withdraw/verify'],'delete':['user/gcm/{code}','user/logout','user/exchange/bank/coin/withdraw/unverified/cancel/{withdrawID}','user/exchange/bank/fiat/deposit/cancel/{depositID}','user/exchange/ask/cancel/{orderID}','user/exchange/bid/cancel/{orderID}','user/exchange/bank/fiat/withdraw/unverified/cancel/{withdrawID}','user/mfa/authy/disable/{code}','user/mfa/ga/disable/{code}','user/profile/phone/delete','user/profile/image/delete/{netkiName}','user/wallet/coin/withdraw/unverified/cancel/{withdrawID}']}},'markets':{'BTC/INR':{'id':'BTC/INR','symbol':'BTC/INR','base':'BTC','quote':'INR'}},fetchBalance:function fetchBalance(){var response,balance,coin,fiat,result,_this250=this;return Promise.resolve().then(function(){return _this250.privateGetUserExchangeBankSummary();}).then(function(_resp){response=_resp;balance=response['message'];coin={'free':balance['availableCoinBalance'],'used':balance['pendingCoinBalance'],'total':balance['totalCoinBalance']};fiat={'free':balance['availableFiatBalance'],'used':balance['pendingFiatBalance'],'total':balance['totalFiatBalance']};result={'info':balance,'BTC':coin,'INR':fiat};return result;});},fetchOrderBook:function fetchOrderBook(market){var params,bids,asks,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this251=this,_arguments239=arguments;return Promise.resolve().then(function(){params=_arguments239.length>1&&_arguments239[1]!==undefined?_arguments239[1]:{};return _this251.publicGetExchangeBidOrders(params);}).then(function(_resp){bids=_resp;return _this251.publicGetExchangeAskOrders(params);}).then(function(_resp){asks=_resp;orderbook={'bids':bids['message'],'asks':asks['message']};timestamp=_this251.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this251.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order['rate'];amount=order['vol'];result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,_this252=this;return Promise.resolve().then(function(){return _this252.publicGetExchangeTicker();}).then(function(_resp){response=_resp;ticker=response['message'];timestamp=ticker['timestamp'];return{'timestamp':timestamp,'datetime':_this252.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['lastPrice']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['coinvolume']),'quoteVolume':parseFloat(ticker['fiatvolume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this253=this;return _this253.publicGetExchangeTrades();},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,direction,response,_this254=this,_arguments242=arguments;return Promise.resolve().then(function(){price=_arguments242.length>4&&_arguments242[4]!==undefined?_arguments242[4]:undefined;params=_arguments242.length>5&&_arguments242[5]!==undefined?_arguments242[5]:{};method='privatePutUserExchange';order={};if(api=='market'){method+='Instant'+_this254.capitalize(side);if(side=='buy'){order['maxFiat']=amount;}else{order['maxVol']=amount;}}else{direction=side=='buy'?'Bid':'Ask';method+=direction+'New';order['rate']=price;order['vol']=amount;}return _this254[method](self.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['message']['orderID']};});},cancelOrder:function cancelOrder(id){var method,_this255=this;throw new ExchangeError(_this255.id+' cancelOrder () is not fully implemented yet');method='privateDeleteUserExchangeAskCancelOrderId';// TODO fixme, have to specify order side here
return _this255[method]({'orderID':id});},request:function request(path){var api,method,params,headers,body,url,query,response,_test11,_this256=this,_arguments244=arguments;return Promise.resolve().then(function(){api=_arguments244.length>1&&_arguments244[1]!==undefined?_arguments244[1]:'public';method=_arguments244.length>2&&_arguments244[2]!==undefined?_arguments244[2]:'GET';params=_arguments244.length>3&&_arguments244[3]!==undefined?_arguments244[3]:{};headers=_arguments244.length>4&&_arguments244[4]!==undefined?_arguments244[4]:undefined;body=_arguments244.length>5&&_arguments244[5]!==undefined?_arguments244[5]:undefined;url=_this256.urls['api']+'/'+_this256.version+'/'+_this256.implodeParams(path,params);query=_this256.omit(params,_this256.extractParams(path));if(api=='private'){headers={'Authorization':_this256.apiKey};if(Object.keys(query).length){body=_this256.json(query);headers['Content-Type']='application/json';}}return _this256.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test11='success'in response;if(_test11&&response['success']){return response;}else{throw new ExchangeError(_this256.id+' '+_this256.json(response));}});}};//-----------------------------------------------------------------------------
var coinspot={'id':'coinspot','name':'CoinSpot','countries':'AU',// Australia
'rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg','api':{'public':'https://www.coinspot.com.au/pubapi','private':'https://www.coinspot.com.au/api'},'www':'https://www.coinspot.com.au','doc':'https://www.coinspot.com.au/api'},'api':{'public':{'get':['latest']},'private':{'post':['orders','orders/history','my/coin/deposit','my/coin/send','quote/buy','quote/sell','my/balances','my/orders','my/buy','my/sell','my/buy/cancel','my/sell/cancel']}},'markets':{'BTC/AUD':{'id':'BTC','symbol':'BTC/AUD','base':'BTC','quote':'AUD'},'LTC/AUD':{'id':'LTC','symbol':'LTC/AUD','base':'LTC','quote':'AUD'},'DOGE/AUD':{'id':'DOGE','symbol':'DOGE/AUD','base':'DOGE','quote':'AUD'}},fetchBalance:function fetchBalance(){var response,result,balances,currencies,c,currency,uppercase,account,_this257=this;return Promise.resolve().then(function(){return _this257.privatePostMyBalances();}).then(function(_resp){response=_resp;result={'info':response};if('balance'in response){balances=response['balance'];currencies=Object.keys(balances);for(c=0;c<currencies.length;c++){currency=currencies[c];uppercase=currency.toUpperCase();account={'free':balances[currency],'used':undefined,'total':balances[currency]};if(uppercase=='DRK'){uppercase='DASH';}result[uppercase]=account;}}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this258=this,_arguments246=arguments;return Promise.resolve().then(function(){params=_arguments246.length>1&&_arguments246[1]!==undefined?_arguments246[1]:{};p=_this258.market(market);return _this258.privatePostOrders(_this258.extend({'cointype':p['id']},params));}).then(function(_resp){orderbook=_resp;timestamp=_this258.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this258.iso8601(timestamp)};sides={'bids':'buyorders','asks':'sellorders'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['rate']);amount=parseFloat(order['amount']);result[key].push([price,amount]);}}result['bids']=_this258.sortBy(result['bids'],0,true);result['asks']=_this258.sortBy(result['asks'],0);return result;});},fetchTicker:function fetchTicker(market){var response,id,ticker,timestamp,_this259=this;return Promise.resolve().then(function(){return _this259.publicGetLatest();}).then(function(_resp){response=_resp;id=_this259.marketId(market);id=id.toLowerCase();ticker=response['prices'][id];timestamp=_this259.milliseconds();return{'timestamp':timestamp,'datetime':_this259.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':undefined,'info':ticker};});},fetchTrades:function fetchTrades(market){var _this260=this;return _this260.privatePostOrdersHistory({'cointype':_this260.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,_this261=this,_arguments249=arguments;price=_arguments249.length>4&&_arguments249[4]!==undefined?_arguments249[4]:undefined;params=_arguments249.length>5&&_arguments249[5]!==undefined?_arguments249[5]:{};method='privatePostMy'+_this261.capitalize(side);if(type=='market'){throw new ExchangeError(_this261.id+' allows limit orders only');}order={'cointype':_this261.marketId(market),'amount':amount,'rate':price};return _this261[method](_this261.extend(order,params));},cancelOrder:function cancelOrder(id){var params,method,_this262=this,_arguments250=arguments;params=_arguments250.length>1&&_arguments250[1]!==undefined?_arguments250[1]:{};throw new ExchangeError(_this262.id+' cancelOrder () is not fully implemented yet');method='privatePostMyBuy';return _this262[method]({'id':id});},request:function request(path){var api,method,params,headers,body,url,nonce,_this263=this,_arguments251=arguments;api=_arguments251.length>1&&_arguments251[1]!==undefined?_arguments251[1]:'public';method=_arguments251.length>2&&_arguments251[2]!==undefined?_arguments251[2]:'GET';params=_arguments251.length>3&&_arguments251[3]!==undefined?_arguments251[3]:{};headers=_arguments251.length>4&&_arguments251[4]!==undefined?_arguments251[4]:undefined;body=_arguments251.length>5&&_arguments251[5]!==undefined?_arguments251[5]:undefined;if(!_this263.apiKey){throw new AuthenticationError(_this263.id+' requires apiKey for all requests');}url=_this263.urls['api'][api]+'/'+path;if(api=='private'){nonce=_this263.nonce();body=_this263.json(_this263.extend({'nonce':nonce},params));headers={'Content-Type':'application/json','Content-Length':body.length,'key':_this263.apiKey,'sign':_this263.hmac(_this263.encode(body),_this263.encode(_this263.secret),'sha512')};}return _this263.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var dsx={'id':'dsx','name':'DSX','countries':'UK','rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27990275-1413158a-645a-11e7-931c-94717f7510e3.jpg','api':{'mapi':'https://dsx.uk/mapi',// market data
'tapi':'https://dsx.uk/tapi',// trading
'dwapi':'https://dsx.uk/dwapi'// deposit/withdraw
},'www':'https://dsx.uk','doc':['https://api.dsx.uk','https://dsx.uk/api_docs/public','https://dsx.uk/api_docs/private','']},'api':{'mapi':{// market data (public)
'get':['barsFromMoment/{id}/{period}/{start}',// empty reply :\
'depth/{id}','info','lastBars/{id}/{period}/{amount}',// period is (m, h or d)
'periodBars/{id}/{period}/{start}/{end}','ticker/{id}','trades/{id}']},'tapi':{// trading (private)
'post':['getInfo','TransHistory','TradeHistory','OrderHistory','ActiveOrders','Trade','CancelOrder']},'dwapi':{// deposit / withdraw (private)
'post':['getCryptoDepositAddress','cryptoWithdraw','fiatWithdraw','getTransactionStatus','getTransactions']}},fetchMarkets:function fetchMarkets(){var response,keys,result,p,id,market,base,quote,symbol,_this264=this;return Promise.resolve().then(function(){return _this264.mapiGetInfo();}).then(function(_resp){response=_resp;keys=Object.keys(response['pairs']);result=[];for(p=0;p<keys.length;p++){id=keys[p];market=response['pairs'][id];base=id.slice(0,3);quote=id.slice(3,6);base=base.toUpperCase();quote=quote.toUpperCase();symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,currencies,c,currency,account,_this265=this;return Promise.resolve().then(function(){return _this265.loadMarkets();}).then(function(){return _this265.tapiPostGetInfo();}).then(function(_resp){response=_resp;balances=response['return'];result={'info':balances};currencies=Object.keys(balances['total']);for(c=0;c<currencies.length;c++){currency=currencies[c];account={'free':balances['funds'][currency],'used':undefined,'total':balances['total'][currency]};account['used']=account['total']-account['free'];result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,response,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this266=this,_arguments254=arguments;return Promise.resolve().then(function(){params=_arguments254.length>1&&_arguments254[1]!==undefined?_arguments254[1]:{};return _this266.loadMarkets();}).then(function(){p=_this266.market(market);return _this266.mapiGetDepthId(_this266.extend({'id':p['id']},params));}).then(function(_resp){response=_resp;orderbook=response[p['id']];timestamp=_this266.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this266.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order[0];amount=order[1];result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var p,response,ticker,timestamp,_this267=this;return Promise.resolve().then(function(){return _this267.loadMarkets();}).then(function(){p=_this267.market(market);return _this267.mapiGetTickerId({'id':p['id']});}).then(function(_resp){response=_resp;ticker=response[p['id']];timestamp=ticker['updated']*1000;return{'timestamp':timestamp,'datetime':_this267.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['avg']),'baseVolume':parseFloat(ticker['vol']),'quoteVolume':parseFloat(ticker['vol_cur']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this268=this;return Promise.resolve().then(function(){return _this268.loadMarkets();}).then(function(){return _this268.mapiGetTradesId({'id':_this268.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this269=this,_arguments257=arguments;return Promise.resolve().then(function(){price=_arguments257.length>4&&_arguments257[4]!==undefined?_arguments257[4]:undefined;params=_arguments257.length>5&&_arguments257[5]!==undefined?_arguments257[5]:{};return _this269.loadMarkets();}).then(function(){if(type=='market'){throw new ExchangeError(_this269.id+' allows limit orders only');}order={'pair':_this269.marketId(market),'type':side,'rate':price,'amount':amount};return _this269.tapiPostTrade(_this269.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['return']['orderId'].toString()};});},cancelOrder:function cancelOrder(id){var _this270=this;return Promise.resolve().then(function(){return _this270.loadMarkets();}).then(function(){return _this270.tapiPostCancelOrder({'orderId':id});});},request:function request(path){var api,method,params,headers,body,url,query,nonce,_method,response,_test12,_this271=this,_arguments259=arguments;return Promise.resolve().then(function(){api=_arguments259.length>1&&_arguments259[1]!==undefined?_arguments259[1]:'mapi';method=_arguments259.length>2&&_arguments259[2]!==undefined?_arguments259[2]:'GET';params=_arguments259.length>3&&_arguments259[3]!==undefined?_arguments259[3]:{};headers=_arguments259.length>4&&_arguments259[4]!==undefined?_arguments259[4]:undefined;body=_arguments259.length>5&&_arguments259[5]!==undefined?_arguments259[5]:undefined;url=_this271.urls['api'][api];if(api=='mapi'||api=='dwapi'){url+='/'+_this271.implodeParams(path,params);}query=_this271.omit(params,_this271.extractParams(path));if(api=='mapi'){if(Object.keys(query).length){url+='?'+_this271.urlencode(query);}}else{nonce=_this271.nonce();_method=path;body=_this271.urlencode(_this271.extend({'method':path,'nonce':nonce},query));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Key':_this271.apiKey,'Sign':_this271.hmac(_this271.encode(body),_this271.encode(_this271.secret),'sha512','base64')};}return _this271.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(api=='mapi'){return response;}else{_test12='success'in response;if(_test12&&response['success']){return response;}else{throw new ExchangeError(_this271.id+' '+_this271.json(response));}}});}};//-----------------------------------------------------------------------------
var exmo={'id':'exmo','name':'EXMO','countries':['ES','RU'],// Spain, Russia
'rateLimit':1000,// once every 350 ms ≈ 180 requests per minute ≈ 3 requests per second
'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg','api':'https://api.exmo.com','www':'https://exmo.me','doc':['https://exmo.me/ru/api_doc','https://github.com/exmo-dev/exmo_api_lib/tree/master/nodejs']},'api':{'public':{'get':['currency','order_book','pair_settings','ticker','trades']},'private':{'post':['user_info','order_create','order_cancel','user_open_orders','user_trades','user_cancelled_orders','order_trades','required_amount','deposit_address','withdraw_crypt','withdraw_get_txid','excode_create','excode_load','wallet_history']}},fetchMarkets:function fetchMarkets(){var markets,keys,result,p,id,market,symbol,_symbol$split7,_symbol$split8,base,quote,_this272=this;return Promise.resolve().then(function(){return _this272.publicGetPairSettings();}).then(function(_resp){markets=_resp;keys=Object.keys(markets);result=[];for(p=0;p<keys.length;p++){id=keys[p];market=markets[id];symbol=id.replace('_','/');_symbol$split7=symbol.split('/');_symbol$split8=_slicedToArray(_symbol$split7,2);base=_symbol$split8[0];quote=_symbol$split8[1];result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,result,c,currency,account,_this273=this;return Promise.resolve().then(function(){return _this273.loadMarkets();}).then(function(){return _this273.privatePostUserInfo();}).then(function(_resp){response=_resp;result={'info':response};for(c=0;c<_this273.currencies.length;c++){currency=_this273.currencies[c];account={'free':undefined,'used':undefined,'total':undefined};if(currency in response['balances']){account['free']=parseFloat(response['balances'][currency]);}if(currency in response['reserved']){account['used']=parseFloat(response['reserved'][currency]);}account['total']=_this273.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,response,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this274=this,_arguments262=arguments;return Promise.resolve().then(function(){params=_arguments262.length>1&&_arguments262[1]!==undefined?_arguments262[1]:{};return _this274.loadMarkets();}).then(function(){p=_this274.market(market);return _this274.publicGetOrderBook(_this274.extend({'pair':p['id']},params));}).then(function(_resp){response=_resp;orderbook=response[p['id']];timestamp=_this274.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this274.iso8601(timestamp)};sides={'bids':'bid','asks':'ask'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[key].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=ticker['updated']*1000;return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy_price']),'ask':parseFloat(ticker['sell_price']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last_trade']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['avg']),'baseVolume':parseFloat(ticker['vol']),'quoteVolume':parseFloat(ticker['vol_curr']),'info':ticker};},fetchTickers:function fetchTickers(){var currency,response,result,ids,i,id,market,symbol,ticker,_this275=this,_arguments263=arguments;return Promise.resolve().then(function(){currency=_arguments263.length>0&&_arguments263[0]!==undefined?_arguments263[0]:'USD';return _this275.loadMarkets();}).then(function(){return _this275.publicGetTicker();}).then(function(_resp){response=_resp;result={};ids=Object.keys(response);for(i=0;i<ids.length;i++){id=ids[i];market=_this275.markets_by_id[id];symbol=market['symbol'];ticker=response[id];result[symbol]=_this275.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var response,p,_this276=this;return Promise.resolve().then(function(){return _this276.loadMarkets();}).then(function(){return _this276.publicGetTicker();}).then(function(_resp){response=_resp;p=_this276.market(market);return _this276.parseTicker(response[p['id']],p);});},fetchTrades:function fetchTrades(market){var _this277=this;return Promise.resolve().then(function(){return _this277.loadMarkets();}).then(function(){return _this277.publicGetTrades({'pair':_this277.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,prefix,order,response,_this278=this,_arguments266=arguments;return Promise.resolve().then(function(){price=_arguments266.length>4&&_arguments266[4]!==undefined?_arguments266[4]:undefined;params=_arguments266.length>5&&_arguments266[5]!==undefined?_arguments266[5]:{};return _this278.loadMarkets();}).then(function(){prefix='';if(type=='market'){prefix='market_';}order={'pair':_this278.marketId(market),'quantity':amount,'price':price||0,'type':prefix+side};return _this278.privatePostOrderCreate(_this278.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['order_id'].toString()};});},cancelOrder:function cancelOrder(id){var _this279=this;return Promise.resolve().then(function(){return _this279.loadMarkets();}).then(function(){return _this279.privatePostOrderCancel({'order_id':id});});},request:function request(path){var api,method,params,headers,body,url,nonce,response,_test13,_this280=this,_arguments268=arguments;return Promise.resolve().then(function(){api=_arguments268.length>1&&_arguments268[1]!==undefined?_arguments268[1]:'public';method=_arguments268.length>2&&_arguments268[2]!==undefined?_arguments268[2]:'GET';params=_arguments268.length>3&&_arguments268[3]!==undefined?_arguments268[3]:{};headers=_arguments268.length>4&&_arguments268[4]!==undefined?_arguments268[4]:undefined;body=_arguments268.length>5&&_arguments268[5]!==undefined?_arguments268[5]:undefined;url=_this280.urls['api']+'/'+_this280.version+'/'+path;if(api=='public'){if(Object.keys(params).length){url+='?'+_this280.urlencode(params);}}else{nonce=_this280.nonce();body=_this280.urlencode(_this280.extend({'nonce':nonce},params));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Key':_this280.apiKey,'Sign':_this280.hmac(_this280.encode(body),_this280.encode(_this280.secret),'sha512')};}return _this280.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(api=='public'){return response;}else{_test13='result'in response;if(_test13&&response['result']){return response;}else{throw new ExchangeError(_this280.id+' '+_this280.json(response));}}});}};//-----------------------------------------------------------------------------
var flowbtc={'id':'flowbtc','name':'flowBTC','countries':'BR',// Brazil
'version':'v1','rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/28162465-cd815d4c-67cf-11e7-8e57-438bea0523a2.jpg','api':'https://api.flowbtc.com:8400/ajax','www':'https://trader.flowbtc.com','doc':'http://www.flowbtc.com.br/api/'},'api':{'public':{'post':['GetTicker','GetTrades','GetTradesByDate','GetOrderBook','GetProductPairs','GetProducts']},'private':{'post':['CreateAccount','GetUserInfo','SetUserInfo','GetAccountInfo','GetAccountTrades','GetDepositAddresses','Withdraw','CreateOrder','ModifyOrder','CancelOrder','CancelAllOrders','GetAccountOpenOrders','GetOrderFee']}},fetchMarkets:function fetchMarkets(){var response,markets,result,p,market,id,base,quote,symbol,_this281=this;return Promise.resolve().then(function(){return _this281.publicPostGetProductPairs();}).then(function(_resp){response=_resp;markets=response['productPairs'];result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['name'];base=market['product1Label'];quote=market['product2Label'];symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,account,_this282=this;return Promise.resolve().then(function(){return _this282.loadMarkets();}).then(function(){return _this282.privatePostGetAccountInfo();}).then(function(_resp){response=_resp;balances=response['currencies'];result={'info':response};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['name'];account={'free':balance['balance'],'used':balance['hold'],'total':undefined};account['total']=_this282.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this283=this,_arguments271=arguments;return Promise.resolve().then(function(){params=_arguments271.length>1&&_arguments271[1]!==undefined?_arguments271[1]:{};return _this283.loadMarkets();}).then(function(){p=_this283.market(market);return _this283.publicPostGetOrderBook(_this283.extend({'productPair':p['id']},params));}).then(function(_resp){orderbook=_resp;timestamp=_this283.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this283.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['px']);amount=parseFloat(order['qty']);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,timestamp,_this284=this;return Promise.resolve().then(function(){return _this284.loadMarkets();}).then(function(){p=_this284.market(market);return _this284.publicPostGetTicker({'productPair':p['id']});}).then(function(_resp){ticker=_resp;timestamp=_this284.milliseconds();return{'timestamp':timestamp,'datetime':_this284.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['volume24hr']),'quoteVolume':parseFloat(ticker['volume24hrProduct2']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this285=this;return Promise.resolve().then(function(){return _this285.loadMarkets();}).then(function(){return _this285.publicPostGetTrades({'productPair':_this285.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,orderType,order,response,_this286=this,_arguments274=arguments;return Promise.resolve().then(function(){price=_arguments274.length>4&&_arguments274[4]!==undefined?_arguments274[4]:undefined;params=_arguments274.length>5&&_arguments274[5]!==undefined?_arguments274[5]:{};return _this286.loadMarkets();}).then(function(){orderType=type=='market'?1:0;order={'ins':_this286.marketId(market),'side':side,'orderType':orderType,'qty':amount,'px':price};return _this286.privatePostCreateOrder(_this286.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['serverOrderId']};});},cancelOrder:function cancelOrder(id){var params,_this287=this,_arguments275=arguments;return Promise.resolve().then(function(){params=_arguments275.length>1&&_arguments275[1]!==undefined?_arguments275[1]:{};return _this287.loadMarkets();}).then(function(){if('ins'in params){return _this287.privatePostCancelOrder(_this287.extend({'serverOrderId':id},params));}else{throw new ExchangeError(_this287.id+' requires `ins` symbol parameter for cancelling an order');}});},request:function request(path){var api,method,params,headers,body,url,nonce,auth,signature,response,_test14,_this288=this,_arguments276=arguments;return Promise.resolve().then(function(){api=_arguments276.length>1&&_arguments276[1]!==undefined?_arguments276[1]:'public';method=_arguments276.length>2&&_arguments276[2]!==undefined?_arguments276[2]:'GET';params=_arguments276.length>3&&_arguments276[3]!==undefined?_arguments276[3]:{};headers=_arguments276.length>4&&_arguments276[4]!==undefined?_arguments276[4]:undefined;body=_arguments276.length>5&&_arguments276[5]!==undefined?_arguments276[5]:undefined;url=_this288.urls['api']+'/'+_this288.version+'/'+path;if(api=='public'){if(Object.keys(params).length){body=_this288.json(params);}}else{if(!_this288.uid){throw new AuthenticationError(_this288.id+' requires `'+_this288.id+'.uid` property for authentication');}nonce=_this288.nonce();auth=nonce.toString()+_this288.uid+_this288.apiKey;signature=_this288.hmac(_this288.encode(auth),_this288.encode(_this288.secret));body=_this288.json(_this288.extend({'apiKey':_this288.apiKey,'apiNonce':nonce,'apiSig':signature.toUpperCase()},params));headers={'Content-Type':'application/json','Content-Length':body.length};}return _this288.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test14='isAccepted'in response;if(_test14&&response['isAccepted']){return response;}else{throw new ExchangeError(_this288.id+' '+_this288.json(response));}});}};//-----------------------------------------------------------------------------
var foxbit=extend(blinktrade,{'id':'foxbit','name':'FoxBit','countries':'BR','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27991413-11b40d42-647f-11e7-91ee-78ced874dd09.jpg','api':{'public':'https://api.blinktrade.com/api','private':'https://api.blinktrade.com/tapi'},'www':'https://foxbit.exchange','doc':'https://blinktrade.com/docs'},'comment':'Blinktrade API','markets':{'BTC/BRL':{'id':'BTCBRL','symbol':'BTC/BRL','base':'BTC','quote':'BRL','brokerId':4,'broker':'FoxBit'}}});//-----------------------------------------------------------------------------
var fyb={'rateLimit':1500,'api':{'public':{'get':['ticker','tickerdetailed','orderbook','trades']},'private':{'post':['test','getaccinfo','getpendingorders','getorderhistory','cancelpendingorder','placeorder','withdraw']}},fetchBalance:function fetchBalance(){var balance,btc,symbol,quote,lowercase,fiat,crypto,accounts,_this289=this;return Promise.resolve().then(function(){return _this289.privatePostGetaccinfo();}).then(function(_resp){balance=_resp;btc=parseFloat(balance['btcBal']);symbol=_this289.symbols[0];quote=_this289.markets[symbol]['quote'];lowercase=quote.toLowerCase()+'Bal';fiat=parseFloat(balance[lowercase]);crypto={'free':btc,'used':undefined,'total':btc};accounts={'BTC':crypto};accounts[quote]={'free':fiat,'used':undefined,'total':fiat};accounts['info']=balance;return accounts;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this290=this,_arguments278=arguments;return Promise.resolve().then(function(){params=_arguments278.length>1&&_arguments278[1]!==undefined?_arguments278[1]:{};return _this290.publicGetOrderbook(params);}).then(function(_resp){orderbook=_resp;timestamp=_this290.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this290.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,last,volume,_this291=this;return Promise.resolve().then(function(){return _this291.publicGetTickerdetailed();}).then(function(_resp){ticker=_resp;timestamp=_this291.milliseconds();last=undefined;volume=undefined;if('last'in ticker){last=parseFloat(ticker['last']);}if('vol'in ticker){volume=parseFloat(ticker['vol']);}return{'timestamp':timestamp,'datetime':_this291.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':last,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':volume,'info':ticker};});},fetchTrades:function fetchTrades(market){var _this292=this;return _this292.publicGetTrades();},createOrder:function createOrder(market,type,side,amount){var price,params,response,_this293=this,_arguments281=arguments;return Promise.resolve().then(function(){price=_arguments281.length>4&&_arguments281[4]!==undefined?_arguments281[4]:undefined;params=_arguments281.length>5&&_arguments281[5]!==undefined?_arguments281[5]:{};return _this293.privatePostPlaceorder(_this293.extend({'qty':amount,'price':price,'type':side[0].toUpperCase()},params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['pending_oid']};});},cancelOrder:function cancelOrder(id){var _this294=this;return _this294.privatePostCancelpendingorder({'orderNo':id});},request:function request(path){var api,method,params,headers,body,url,nonce,response,_this295=this,_arguments283=arguments;return Promise.resolve().then(function(){api=_arguments283.length>1&&_arguments283[1]!==undefined?_arguments283[1]:'public';method=_arguments283.length>2&&_arguments283[2]!==undefined?_arguments283[2]:'GET';params=_arguments283.length>3&&_arguments283[3]!==undefined?_arguments283[3]:{};headers=_arguments283.length>4&&_arguments283[4]!==undefined?_arguments283[4]:undefined;body=_arguments283.length>5&&_arguments283[5]!==undefined?_arguments283[5]:undefined;url=_this295.urls['api']+'/'+path;if(api=='public'){url+='.json';}else{nonce=_this295.nonce();body=_this295.urlencode(_this295.extend({'timestamp':nonce},params));headers={'Content-Type':'application/x-www-form-urlencoded','key':_this295.apiKey,'sig':_this295.hmac(_this295.encode(body),_this295.encode(_this295.secret),'sha1')};}return _this295.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(api=='private'){if('error'in response){if(response['error']){throw new ExchangeError(_this295.id+' '+_this295.json(response));}}}return response;});}};//-----------------------------------------------------------------------------
var fybse=extend(fyb,{'id':'fybse','name':'FYB-SE','countries':'SE',// Sweden
'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766512-31019772-5edb-11e7-8241-2e675e6797f1.jpg','api':'https://www.fybse.se/api/SEK','www':'https://www.fybse.se','doc':'http://docs.fyb.apiary.io'},'markets':{'BTC/SEK':{'id':'SEK','symbol':'BTC/SEK','base':'BTC','quote':'SEK'}}});//-----------------------------------------------------------------------------
var fybsg=extend(fyb,{'id':'fybsg','name':'FYB-SG','countries':'SG',// Singapore
'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766513-3364d56a-5edb-11e7-9e6b-d5898bb89c81.jpg','api':'https://www.fybsg.com/api/SGD','www':'https://www.fybsg.com','doc':'http://docs.fyb.apiary.io'},'markets':{'BTC/SGD':{'id':'SGD','symbol':'BTC/SGD','base':'BTC','quote':'SGD'}}});//-----------------------------------------------------------------------------
var gatecoin={'id':'gatecoin','name':'Gatecoin','rateLimit':2000,'countries':'HK',// Hong Kong
'comment':'a regulated/licensed exchange','urls':{'logo':'https://user-images.githubusercontent.com/1294454/28646817-508457f2-726c-11e7-9eeb-3528d2413a58.jpg','api':'https://api.gatecoin.com','www':'https://gatecoin.com','doc':['https://gatecoin.com/api','https://github.com/Gatecoin/RESTful-API-Implementation','https://api.gatecoin.com/swagger-ui/index.html']},'api':{'public':{'get':['Public/ExchangeRate',// Get the exchange rates
'Public/LiveTicker',// Get live ticker for all currency
'Public/LiveTicker/{CurrencyPair}',// Get live ticker by currency
'Public/LiveTickers',// Get live ticker for all currency
'Public/MarketDepth/{CurrencyPair}',// Gets prices and market depth for the currency pair.
'Public/NetworkStatistics/{DigiCurrency}',// Get the network status of a specific digital currency
'Public/StatisticHistory/{DigiCurrency}/{Typeofdata}',// Get the historical data of a specific digital currency
'Public/TickerHistory/{CurrencyPair}/{Timeframe}',// Get ticker history
'Public/Transactions/{CurrencyPair}',// Gets recent transactions
'Public/TransactionsHistory/{CurrencyPair}',// Gets all transactions
'Reference/BusinessNatureList',// Get the business nature list.
'Reference/Countries',// Get the country list.
'Reference/Currencies',// Get the currency list.
'Reference/CurrencyPairs',// Get the currency pair list.
'Reference/CurrentStatusList',// Get the current status list.
'Reference/IdentydocumentTypes',// Get the different types of identity documents possible.
'Reference/IncomeRangeList',// Get the income range list.
'Reference/IncomeSourceList',// Get the income source list.
'Reference/VerificationLevelList',// Get the verif level list.
'Stream/PublicChannel'],'post':['Export/Transactions',// Request a export of all trades from based on currencypair, start date and end date
'Ping',// Post a string, then get it back.
'Public/Unsubscribe/{EmailCode}',// Lets the user unsubscribe from emails
'RegisterUser']},'private':{'get':['Account/CorporateData',// Get corporate account data
'Account/DocumentAddress',// Check if residence proof uploaded
'Account/DocumentCorporation',// Check if registered document uploaded
'Account/DocumentID',// Check if ID document copy uploaded
'Account/DocumentInformation',// Get Step3 Data
'Account/Email',// Get user email
'Account/FeeRate',// Get fee rate of logged in user
'Account/Level',// Get verif level of logged in user
'Account/PersonalInformation',// Get Step1 Data
'Account/Phone',// Get user phone number
'Account/Profile',// Get trader profile
'Account/Questionnaire',// Fill the questionnaire
'Account/Referral',// Get referral information
'Account/ReferralCode',// Get the referral code of the logged in user
'Account/ReferralNames',// Get names of referred traders
'Account/ReferralReward',// Get referral reward information
'Account/ReferredCode',// Get referral code
'Account/ResidentInformation',// Get Step2 Data
'Account/SecuritySettings',// Get verif details of logged in user
'Account/User',// Get all user info
'APIKey/APIKey',// Get API Key for logged in user
'Auth/ConnectionHistory',// Gets connection history of logged in user
'Balance/Balances',// Gets the available balance for each currency for the logged in account.
'Balance/Balances/{Currency}',// Gets the available balance for s currency for the logged in account.
'Balance/Deposits',// Get all account deposits, including wire and digital currency, of the logged in user
'Balance/Withdrawals',// Get all account withdrawals, including wire and digital currency, of the logged in user
'Bank/Accounts/{Currency}/{Location}',// Get internal bank account for deposit
'Bank/Transactions',// Get all account transactions of the logged in user
'Bank/UserAccounts',// Gets all the bank accounts related to the logged in user.
'Bank/UserAccounts/{Currency}',// Gets all the bank accounts related to the logged in user.
'ElectronicWallet/DepositWallets',// Gets all crypto currency addresses related deposits to the logged in user.
'ElectronicWallet/DepositWallets/{DigiCurrency}',// Gets all crypto currency addresses related deposits to the logged in user by currency.
'ElectronicWallet/Transactions',// Get all digital currency transactions of the logged in user
'ElectronicWallet/Transactions/{DigiCurrency}',// Get all digital currency transactions of the logged in user
'ElectronicWallet/UserWallets',// Gets all external digital currency addresses related to the logged in user.
'ElectronicWallet/UserWallets/{DigiCurrency}',// Gets all external digital currency addresses related to the logged in user by currency.
'Info/ReferenceCurrency',// Get user's reference currency
'Info/ReferenceLanguage',// Get user's reference language
'Notification/Messages',// Get from oldest unread + 3 read message to newest messages
'Trade/Orders',// Gets open orders for the logged in trader.
'Trade/Orders/{OrderID}',// Gets an order for the logged in trader.
'Trade/StopOrders',// Gets all stop orders for the logged in trader. Max 1000 record.
'Trade/StopOrdersHistory',// Gets all stop orders for the logged in trader. Max 1000 record.
'Trade/Trades',// Gets all transactions of logged in user
'Trade/UserTrades'],'post':['Account/DocumentAddress',// Upload address proof document
'Account/DocumentCorporation',// Upload registered document document
'Account/DocumentID',// Upload ID document copy
'Account/Email/RequestVerify',// Request for verification email
'Account/Email/Verify',// Verification email
'Account/GoogleAuth',// Enable google auth
'Account/Level',// Request verif level of logged in user
'Account/Questionnaire',// Fill the questionnaire
'Account/Referral',// Post a referral email
'APIKey/APIKey',// Create a new API key for logged in user
'Auth/ChangePassword',// Change password.
'Auth/ForgotPassword',// Request reset password
'Auth/ForgotUserID',// Request user id
'Auth/Login',// Trader session log in.
'Auth/Logout',// Logout from the current session.
'Auth/LogoutOtherSessions',// Logout other sessions.
'Auth/ResetPassword',// Reset password
'Bank/Transactions',// Request a transfer from the traders account of the logged in user. This is only available for bank account
'Bank/UserAccounts',// Add an account the logged in user
'ElectronicWallet/DepositWallets/{DigiCurrency}',// Add an digital currency addresses to the logged in user.
'ElectronicWallet/Transactions/Deposits/{DigiCurrency}',// Get all internal digital currency transactions of the logged in user
'ElectronicWallet/Transactions/Withdrawals/{DigiCurrency}',// Get all external digital currency transactions of the logged in user
'ElectronicWallet/UserWallets/{DigiCurrency}',// Add an external digital currency addresses to the logged in user.
'ElectronicWallet/Withdrawals/{DigiCurrency}',// Request a transfer from the traders account to an external address. This is only available for crypto currencies.
'Notification/Messages',// Mark all as read
'Notification/Messages/{ID}',// Mark as read
'Trade/Orders',// Place an order at the exchange.
'Trade/StopOrders'],'put':['Account/CorporateData',// Update user company data for corporate account
'Account/DocumentID',// Update ID document meta data
'Account/DocumentInformation',// Update Step3 Data
'Account/Email',// Update user email
'Account/PersonalInformation',// Update Step1 Data
'Account/Phone',// Update user phone number
'Account/Questionnaire',// update the questionnaire
'Account/ReferredCode',// Update referral code
'Account/ResidentInformation',// Update Step2 Data
'Account/SecuritySettings',// Update verif details of logged in user
'Account/User',// Update all user info
'Bank/UserAccounts',// Update the label of existing user bank accounnt
'ElectronicWallet/DepositWallets/{DigiCurrency}/{AddressName}',// Update the name of an address
'ElectronicWallet/UserWallets/{DigiCurrency}',// Update the name of an external address
'Info/ReferenceCurrency',// User's reference currency
'Info/ReferenceLanguage'],'delete':['APIKey/APIKey/{PublicKey}',// Remove an API key
'Bank/Transactions/{RequestID}',// Delete pending account withdraw of the logged in user
'Bank/UserAccounts/{Currency}/{Label}',// Delete an account of the logged in user
'ElectronicWallet/DepositWallets/{DigiCurrency}/{AddressName}',// Delete an digital currency addresses related to the logged in user.
'ElectronicWallet/UserWallets/{DigiCurrency}/{AddressName}',// Delete an external digital currency addresses related to the logged in user.
'Trade/Orders',// Cancels all existing order
'Trade/Orders/{OrderID}',// Cancels an existing order
'Trade/StopOrders',// Cancels all existing stop orders
'Trade/StopOrders/{ID}']}},fetchMarkets:function fetchMarkets(){var response,markets,result,p,market,id,base,quote,symbol,_this296=this;return Promise.resolve().then(function(){return _this296.publicGetPublicLiveTickers();}).then(function(_resp){response=_resp;markets=response['tickers'];result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['currencyPair'];base=id.slice(0,3);quote=id.slice(3,6);symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,account,_this297=this;return Promise.resolve().then(function(){return _this297.loadMarkets();}).then(function(){return _this297.privateGetBalanceBalances();}).then(function(_resp){response=_resp;balances=response['balances'];result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];account={'free':balance['availableBalance'],'used':_this297.sum(balance['pendingIncoming'],balance['pendingOutgoing'],balance['openOrder']),'total':balance['balance']};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this298=this,_arguments286=arguments;return Promise.resolve().then(function(){params=_arguments286.length>1&&_arguments286[1]!==undefined?_arguments286[1]:{};return _this298.loadMarkets();}).then(function(){p=_this298.market(market);return _this298.publicGetPublicMarketDepthCurrencyPair(_this298.extend({'CurrencyPair':p['id']},params));}).then(function(_resp){orderbook=_resp;timestamp=_this298.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this298.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['volume']);result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=parseInt(ticker['createDateTime'])*1000;return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':parseFloat(ticker['vwap']),'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};},fetchTickers:function fetchTickers(){var response,tickers,result,t,ticker,id,market,symbol,_this299=this;return Promise.resolve().then(function(){return _this299.loadMarkets();}).then(function(){return _this299.publicGetPublicLiveTickers();}).then(function(_resp){response=_resp;tickers=response['tickers'];result={};for(t=0;t<tickers.length;t++){ticker=tickers[t];id=ticker['currencyPair'];market=_this299.markets_by_id[id];symbol=market['symbol'];result[symbol]=_this299.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,response,ticker,_this300=this;return Promise.resolve().then(function(){return _this300.loadMarkets();}).then(function(){p=_this300.market(market);return _this300.publicGetPublicLiveTickerCurrencyPair({'CurrencyPair':p['id']});}).then(function(_resp){response=_resp;ticker=response['ticker'];return _this300.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this301=this;return Promise.resolve().then(function(){return _this301.loadMarkets();}).then(function(){return _this301.publicGetPublicTransactionsCurrencyPair({'CurrencyPair':_this301.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this302=this,_arguments290=arguments;return Promise.resolve().then(function(){price=_arguments290.length>4&&_arguments290[4]!==undefined?_arguments290[4]:undefined;params=_arguments290.length>5&&_arguments290[5]!==undefined?_arguments290[5]:{};return _this302.loadMarkets();}).then(function(){order={'Code':_this302.marketId(market),'Way':side=='buy'?'Bid':'Ask','Amount':amount};if(type=='limit'){order['Price']=price;}if(_this302.twofa){if('ValidationCode'in params){order['ValidationCode']=params['ValidationCode'];}else{throw new AuthenticationError(_this302.id+' two-factor authentication requires a missing ValidationCode parameter');}}response=_this302.privatePostTradeOrders(_this302.extend(order,params));return{'info':response,'id':response['clOrderId']};});},cancelOrder:function cancelOrder(id){var _this303=this;return Promise.resolve().then(function(){return _this303.loadMarkets();}).then(function(){return _this303.privateDeleteTradeOrdersOrderID({'OrderID':id});});},request:function request(path){var api,method,params,headers,body,url,query,nonce,contentType,auth,signature,response,_test15,_test16,_this304=this,_arguments292=arguments;return Promise.resolve().then(function(){api=_arguments292.length>1&&_arguments292[1]!==undefined?_arguments292[1]:'public';method=_arguments292.length>2&&_arguments292[2]!==undefined?_arguments292[2]:'GET';params=_arguments292.length>3&&_arguments292[3]!==undefined?_arguments292[3]:{};headers=_arguments292.length>4&&_arguments292[4]!==undefined?_arguments292[4]:undefined;body=_arguments292.length>5&&_arguments292[5]!==undefined?_arguments292[5]:undefined;url=_this304.urls['api']+'/'+_this304.implodeParams(path,params);query=_this304.omit(params,_this304.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this304.urlencode(query);}}else{nonce=_this304.nonce();contentType=method=='GET'?'':'application/json';auth=method+url+contentType+nonce.toString();auth=auth.toLowerCase();signature=_this304.hmac(_this304.encode(auth),_this304.encode(_this304.secret),'sha256','base64');headers={'API_PUBLIC_KEY':_this304.apiKey,'API_REQUEST_SIGNATURE':signature,'API_REQUEST_DATE':nonce};if(method!='GET'){headers['Content-Type']=contentType;body=_this304.json(_this304.extend({'nonce':nonce},params));}}return _this304.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;_test15='responseStatus'in response;_test16=_test15&&'message'in response['responseStatus'];if(_test16&&response['responseStatus']['message']=='OK'){return response;}else{throw new ExchangeError(_this304.id+' '+_this304.json(response));}});}};//-----------------------------------------------------------------------------
var gdax={'id':'gdax','name':'GDAX','countries':'US','rateLimit':1000,'urls':{'test':'https://api-public.sandbox.gdax.com','logo':'https://user-images.githubusercontent.com/1294454/27766527-b1be41c6-5edb-11e7-95f6-5b496c469e2c.jpg','api':'https://api.gdax.com','www':'https://www.gdax.com','doc':'https://docs.gdax.com'},'api':{'public':{'get':['currencies','products','products/{id}/book','products/{id}/candles','products/{id}/stats','products/{id}/ticker','products/{id}/trades','time']},'private':{'get':['accounts','accounts/{id}','accounts/{id}/holds','accounts/{id}/ledger','coinbase-accounts','fills','funding','orders','orders/{id}','payment-methods','position','reports/{id}','users/self/trailing-volume'],'post':['deposits/coinbase-account','deposits/payment-method','funding/repay','orders','position/close','profiles/margin-transfer','reports','withdrawals/coinbase','withdrawals/crypto','withdrawals/payment-method'],'delete':['orders','orders/{id}']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,symbol,_this305=this;return Promise.resolve().then(function(){return _this305.publicGetProducts();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['id'];base=market['base_currency'];quote=market['quote_currency'];symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balances,result,b,balance,currency,account,_this306=this;return Promise.resolve().then(function(){return _this306.loadMarkets();}).then(function(){return _this306.privateGetAccounts();}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];account={'free':parseFloat(balance['available']),'used':parseFloat(balance['hold']),'total':parseFloat(balance['balance'])};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this307=this,_arguments295=arguments;return Promise.resolve().then(function(){params=_arguments295.length>1&&_arguments295[1]!==undefined?_arguments295[1]:{};return _this307.loadMarkets();}).then(function(){return _this307.publicGetProductsIdBook(_this307.extend({'id':_this307.marketId(market),'level':2// 1 best bidask, 2 aggregated, 3 full
},params));}).then(function(_resp){orderbook=_resp;timestamp=_this307.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this307.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,quote,timestamp,bid,ask,_this308=this;return Promise.resolve().then(function(){return _this308.loadMarkets();}).then(function(){p=_this308.market(market);return _this308.publicGetProductsIdTicker({'id':p['id']});}).then(function(_resp){ticker=_resp;return _this308.publicGetProductsIdStats({'id':p['id']});}).then(function(_resp){quote=_resp;timestamp=_this308.parse8601(ticker['time']);bid=undefined;ask=undefined;if('bid'in ticker){bid=parseFloat(ticker['bid']);}if('ask'in ticker){ask=parseFloat(ticker['ask']);}return{'timestamp':timestamp,'datetime':_this308.iso8601(timestamp),'high':parseFloat(quote['high']),'low':parseFloat(quote['low']),'bid':bid,'ask':ask,'vwap':undefined,'open':parseFloat(quote['open']),'close':undefined,'first':undefined,'last':parseFloat(quote['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this309=this;return Promise.resolve().then(function(){return _this309.loadMarkets();}).then(function(){return _this309.publicGetProductsIdTrades({'id':_this309.marketId(market)// fixes issue #2
});});},createOrder:function createOrder(market,type,side,amount){var price,params,oid,order,response,_this310=this,_arguments298=arguments;return Promise.resolve().then(function(){price=_arguments298.length>4&&_arguments298[4]!==undefined?_arguments298[4]:undefined;params=_arguments298.length>5&&_arguments298[5]!==undefined?_arguments298[5]:{};return _this310.loadMarkets();}).then(function(){oid=_this310.nonce().toString();order={'product_id':_this310.marketId(market),'side':side,'size':amount,'type':type};if(type=='limit'){order['price']=price;}return _this310.privatePostOrders(_this310.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var _this311=this;return Promise.resolve().then(function(){return _this311.loadMarkets();}).then(function(){return _this311.privateDeleteOrdersId({'id':id});});},request:function request(path){var api,method,params,headers,body,request,url,query,nonce,what,secret,signature,response,_this312=this,_arguments300=arguments;return Promise.resolve().then(function(){api=_arguments300.length>1&&_arguments300[1]!==undefined?_arguments300[1]:'public';method=_arguments300.length>2&&_arguments300[2]!==undefined?_arguments300[2]:'GET';params=_arguments300.length>3&&_arguments300[3]!==undefined?_arguments300[3]:{};headers=_arguments300.length>4&&_arguments300[4]!==undefined?_arguments300[4]:undefined;body=_arguments300.length>5&&_arguments300[5]!==undefined?_arguments300[5]:undefined;request='/'+_this312.implodeParams(path,params);url=_this312.urls['api']+request;query=_this312.omit(params,_this312.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this312.urlencode(query);}}else{if(!_this312.apiKey){throw new AuthenticationError(_this312.id+' requires apiKey property for authentication and trading');}if(!_this312.secret){throw new AuthenticationError(_this312.id+' requires secret property for authentication and trading');}if(!_this312.password){throw new AuthenticationError(_this312.id+' requires password property for authentication and trading');}nonce=_this312.nonce().toString();if(Object.keys(query).length){body=_this312.json(query);}what=nonce+method+request+(body||'');secret=_this312.base64ToBinary(_this312.secret);signature=_this312.hmac(_this312.encode(what),secret,'sha256','base64');headers={'CB-ACCESS-KEY':_this312.apiKey,'CB-ACCESS-SIGN':signature,'CB-ACCESS-TIMESTAMP':nonce,'CB-ACCESS-PASSPHRASE':_this312.password,'Content-Type':'application/json'};}return _this312.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('message'in response){throw new ExchangeError(_this312.id+' '+_this312.json(response));}return response;});}};//-----------------------------------------------------------------------------
var gemini={'id':'gemini','name':'Gemini','countries':'US','rateLimit':1500,// 200 for private API
'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg','api':'https://api.gemini.com','www':'https://gemini.com','doc':'https://docs.gemini.com/rest-api'},'api':{'public':{'get':['symbols','pubticker/{symbol}','book/{symbol}','trades/{symbol}','auction/{symbol}','auction/{symbol}/history']},'private':{'post':['order/new','order/cancel','order/cancel/session','order/cancel/all','order/status','orders','mytrades','tradevolume','balances','deposit/{currency}/newAddress','withdraw/{currency}','heartbeat']}},fetchMarkets:function fetchMarkets(){var markets,result,p,id,market,uppercase,base,quote,symbol,_this313=this;return Promise.resolve().then(function(){return _this313.publicGetSymbols();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){id=markets[p];market=id;uppercase=market.toUpperCase();base=uppercase.slice(0,3);quote=uppercase.slice(3,6);symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_timestamp4,_this314=this,_arguments302=arguments;return Promise.resolve().then(function(){params=_arguments302.length>1&&_arguments302[1]!==undefined?_arguments302[1]:{};return _this314.loadMarkets();}).then(function(){return _this314.publicGetBookSymbol(_this314.extend({'symbol':_this314.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this314.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this314.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['amount']);_timestamp4=parseInt(order['timestamp'])*1000;result[side].push([price,amount,_timestamp4]);}}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,timestamp,baseVolume,quoteVolume,_this315=this;return Promise.resolve().then(function(){return _this315.loadMarkets();}).then(function(){p=_this315.market(market);return _this315.publicGetPubtickerSymbol({'symbol':p['id']});}).then(function(_resp){ticker=_resp;timestamp=ticker['volume']['timestamp'];baseVolume=p['base'];quoteVolume=p['quote'];return{'timestamp':timestamp,'datetime':_this315.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['volume'][baseVolume]),'quoteVolume':parseFloat(ticker['volume'][quoteVolume]),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this316=this;return Promise.resolve().then(function(){return _this316.loadMarkets();}).then(function(){return _this316.publicGetTradesSymbol({'symbol':_this316.marketId(market)});});},fetchBalance:function fetchBalance(){var balances,result,b,balance,currency,account,_this317=this;return Promise.resolve().then(function(){return _this317.loadMarkets();}).then(function(){return _this317.privatePostBalances();}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];account={'free':parseFloat(balance['available']),'used':undefined,'total':parseFloat(balance['amount'])};account['used']=account['total']-account['free'];result[currency]=account;}return result;});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,_this318=this,_arguments306=arguments;return Promise.resolve().then(function(){price=_arguments306.length>4&&_arguments306[4]!==undefined?_arguments306[4]:undefined;params=_arguments306.length>5&&_arguments306[5]!==undefined?_arguments306[5]:{};return _this318.loadMarkets();}).then(function(){if(type=='market'){throw new ExchangeError(_this318.id+' allows limit orders only');}order={'client_order_id':_this318.nonce(),'symbol':_this318.marketId(market),'amount':amount.toString(),'price':price.toString(),'side':side,'type':'exchange limit'// gemini allows limit orders only
};return _this318.privatePostOrderNew(_this318.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['order_id']};});},cancelOrder:function cancelOrder(id){var _this319=this;return Promise.resolve().then(function(){return _this319.loadMarkets();}).then(function(){return _this319.privatePostCancelOrder({'order_id':id});});},request:function request(path){var api,method,params,headers,body,url,query,nonce,request,payload,signature,response,_this320=this,_arguments308=arguments;return Promise.resolve().then(function(){api=_arguments308.length>1&&_arguments308[1]!==undefined?_arguments308[1]:'public';method=_arguments308.length>2&&_arguments308[2]!==undefined?_arguments308[2]:'GET';params=_arguments308.length>3&&_arguments308[3]!==undefined?_arguments308[3]:{};headers=_arguments308.length>4&&_arguments308[4]!==undefined?_arguments308[4]:undefined;body=_arguments308.length>5&&_arguments308[5]!==undefined?_arguments308[5]:undefined;url='/'+_this320.version+'/'+_this320.implodeParams(path,params);query=_this320.omit(params,_this320.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this320.urlencode(query);}}else{nonce=_this320.nonce();request=_this320.extend({'request':url,'nonce':nonce},query);payload=_this320.json(request);payload=_this320.stringToBase64(payload);payload=_this320.encode(payload);signature=_this320.hmac(payload,_this320.encode(_this320.secret),'sha384');headers={'Content-Type':'text/plain','Content-Length':0,'X-GEMINI-APIKEY':_this320.apiKey,'X-GEMINI-PAYLOAD':payload,'X-GEMINI-SIGNATURE':signature};}url=_this320.urls['api']+url;return _this320.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('result'in response){if(response['result']=='error'){throw new ExchangeError(_this320.id+' '+_this320.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var hitbtc={'id':'hitbtc','name':'HitBTC','countries':'HK',// Hong Kong
'rateLimit':1500,'version':'1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg','api':'http://api.hitbtc.com','www':'https://hitbtc.com','doc':['https://hitbtc.com/api','http://hitbtc-com.github.io/hitbtc-api','http://jsfiddle.net/bmknight/RqbYB']},'api':{'public':{'get':['{symbol}/orderbook','{symbol}/ticker','{symbol}/trades','{symbol}/trades/recent','symbols','ticker','time,']},'trading':{'get':['balance','orders/active','orders/recent','order','trades/by/order','trades'],'post':['new_order','cancel_order','cancel_orders']},'payment':{'get':['balance','address/{currency}','transactions','transactions/{transaction}'],'post':['transfer_to_trading','transfer_to_main','address/{currency}','payout']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,lot,step,symbol,_this321=this;return Promise.resolve().then(function(){return _this321.publicGetSymbols();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets['symbols'].length;p++){market=markets['symbols'][p];id=market['symbol'];base=market['commodity'];quote=market['currency'];lot=parseFloat(market['lot']);step=parseFloat(market['step']);base=_this321.commonCurrencyCode(base);quote=_this321.commonCurrencyCode(quote);// looks like they now have it correct
// if (base == 'DSH')
//     base = 'DASH';
symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'lot':lot,'step':step,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,account,_this322=this;return Promise.resolve().then(function(){return _this322.loadMarkets();}).then(function(){return _this322.tradingGetBalance();}).then(function(_resp){response=_resp;balances=response['balance'];result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency_code'];account={'free':parseFloat(balance['cash']),'used':parseFloat(balance['reserved']),'total':undefined};account['total']=_this322.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this323=this,_arguments311=arguments;return Promise.resolve().then(function(){params=_arguments311.length>1&&_arguments311[1]!==undefined?_arguments311[1]:{};return _this323.loadMarkets();}).then(function(){return _this323.publicGetSymbolOrderbook(_this323.extend({'symbol':_this323.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this323.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this323.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=ticker['timestamp'];return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['volume']),'quoteVolume':parseFloat(ticker['volume_quote']),'info':ticker};},fetchTickers:function fetchTickers(){var tickers,ids,result,i,id,market,symbol,ticker,_this324=this;return Promise.resolve().then(function(){return _this324.loadMarkets();}).then(function(){return _this324.publicGetTicker();}).then(function(_resp){tickers=_resp;ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this324.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this324.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this325=this;return Promise.resolve().then(function(){return _this325.loadMarkets();}).then(function(){p=_this325.market(market);return _this325.publicGetSymbolTicker({'symbol':p['id']});}).then(function(_resp){ticker=_resp;if('message'in ticker){throw new ExchangeError(_this325.id+' '+ticker['message']);}return _this325.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this326=this;return Promise.resolve().then(function(){return _this326.loadMarkets();}).then(function(){return _this326.publicGetSymbolTrades({'symbol':_this326.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,p,quantity,wholeLots,difference,order,response,_this327=this,_arguments315=arguments;return Promise.resolve().then(function(){price=_arguments315.length>4&&_arguments315[4]!==undefined?_arguments315[4]:undefined;params=_arguments315.length>5&&_arguments315[5]!==undefined?_arguments315[5]:{};return _this327.loadMarkets();}).then(function(){p=_this327.market(market);// check if amount can be evenly divided into lots
// they want integer quantity in lot units
quantity=parseFloat(amount)/p['lot'];wholeLots=Math.round(quantity);difference=quantity-wholeLots;if(Math.abs(difference)>p['step']){throw new ExchangeError(_this327.id+' order amount should be evenly divisible by lot unit size of '+p['lot'].toString());}order={'clientOrderId':_this327.nonce(),'symbol':p['id'],'side':side,'quantity':wholeLots.toString(),// quantity in integer lot units
'type':type};if(type=='limit'){order['price']=_this327.decimal(price);}return _this327.tradingPostNewOrder(_this327.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['ExecutionReport']['orderId']};});},cancelOrder:function cancelOrder(id){var _this328=this;return Promise.resolve().then(function(){return _this328.loadMarkets();}).then(function(){return _this328.tradingPostCancelOrder({'clientOrderId':id});});},request:function request(path){var api,method,params,headers,body,url,query,nonce,auth,response,_this329=this,_arguments317=arguments;return Promise.resolve().then(function(){api=_arguments317.length>1&&_arguments317[1]!==undefined?_arguments317[1]:'public';method=_arguments317.length>2&&_arguments317[2]!==undefined?_arguments317[2]:'GET';params=_arguments317.length>3&&_arguments317[3]!==undefined?_arguments317[3]:{};headers=_arguments317.length>4&&_arguments317[4]!==undefined?_arguments317[4]:undefined;body=_arguments317.length>5&&_arguments317[5]!==undefined?_arguments317[5]:undefined;url='/'+'api'+'/'+_this329.version+'/'+api+'/'+_this329.implodeParams(path,params);query=_this329.omit(params,_this329.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this329.urlencode(query);}}else{nonce=_this329.nonce();query=_this329.extend({'nonce':nonce,'apikey':_this329.apiKey},query);if(method=='POST'){if(Object.keys(query).length){body=_this329.urlencode(query);}}if(Object.keys(query).length){url+='?'+_this329.urlencode(query);}auth=url+(body||'');headers={'Content-Type':'application/x-www-form-urlencoded','X-Signature':_this329.hmac(_this329.encode(auth),_this329.encode(_this329.secret),'sha512').toLowerCase()};}url=_this329.urls['api']+url;return _this329.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('code'in response){throw new ExchangeError(_this329.id+' '+_this329.json(response));}return response;});}};//-----------------------------------------------------------------------------
var huobi={'id':'huobi','name':'Huobi','countries':'CN','rateLimit':2000,'version':'v3','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766569-15aa7b9a-5edd-11e7-9e7f-44791f4ee49c.jpg','api':'http://api.huobi.com','www':'https://www.huobi.com','doc':'https://github.com/huobiapi/API_Docs_en/wiki'},'api':{'staticmarket':{'get':['{id}_kline_{period}','ticker_{id}','depth_{id}','depth_{id}_{length}','detail_{id}']},'usdmarket':{'get':['{id}_kline_{period}','ticker_{id}','depth_{id}','depth_{id}_{length}','detail_{id}']},'trade':{'post':['get_account_info','get_orders','order_info','buy','sell','buy_market','sell_market','cancel_order','get_new_deal_orders','get_order_id_by_trade_id','withdraw_coin','cancel_withdraw_coin','get_withdraw_coin_result','transfer','loan','repayment','get_loan_available','get_loans']}},'markets':{'BTC/CNY':{'id':'btc','symbol':'BTC/CNY','base':'BTC','quote':'CNY','type':'staticmarket','coinType':1},'LTC/CNY':{'id':'ltc','symbol':'LTC/CNY','base':'LTC','quote':'CNY','type':'staticmarket','coinType':2},'BTC/USD':{'id':'btc','symbol':'BTC/USD','base':'BTC','quote':'USD','type':'usdmarket','coinType':1}},fetchBalance:function fetchBalance(){var balances,result,c,currency,lowercase,account,available,frozen,loan,_this330=this;return Promise.resolve().then(function(){return _this330.tradePostGetAccountInfo();}).then(function(_resp){balances=_resp;result={'info':balances};for(c=0;c<_this330.currencies.length;c++){currency=_this330.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};available='available_'+lowercase+'_display';frozen='frozen_'+lowercase+'_display';loan='loan_'+lowercase+'_display';if(available in balances){account['free']=parseFloat(balances[available]);}if(frozen in balances){account['used']=parseFloat(balances[frozen]);}if(loan in balances){account['used']=_this330.sum(account['used'],parseFloat(balances[loan]));}account['total']=_this330.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,method,orderbook,timestamp,result,_this331=this,_arguments319=arguments;return Promise.resolve().then(function(){params=_arguments319.length>1&&_arguments319[1]!==undefined?_arguments319[1]:{};p=_this331.market(market);method=p['type']+'GetDepthId';return _this331[method](_this331.extend({'id':p['id']},params));}).then(function(_resp){orderbook=_resp;timestamp=_this331.milliseconds();result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this331.iso8601(timestamp)};return result;});},fetchTicker:function fetchTicker(market){var p,method,response,ticker,timestamp,_this332=this;return Promise.resolve().then(function(){p=_this332.market(market);method=p['type']+'GetTickerId';return _this332[method]({'id':p['id']});}).then(function(_resp){response=_resp;ticker=response['ticker'];timestamp=parseInt(response['time'])*1000;return{'timestamp':timestamp,'datetime':_this332.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']),'info':ticker};});},fetchTrades:function fetchTrades(market){var p,method,_this333=this;p=_this333.market(market);method=p['type']+'GetDetailId';return _this333[method]({'id':p['id']});},createOrder:function createOrder(market,type,side,amount){var price,params,p,method,order,response,_this334=this,_arguments322=arguments;price=_arguments322.length>4&&_arguments322[4]!==undefined?_arguments322[4]:undefined;params=_arguments322.length>5&&_arguments322[5]!==undefined?_arguments322[5]:{};p=_this334.market(market);method='tradePost'+_this334.capitalize(side);order={'coin_type':p['coinType'],'amount':amount,'market':p['quote'].toLowerCase()};if(type=='limit'){order['price']=price;}else{method+=_this334.capitalize(type);}response=_this334[method](_this334.extend(order,params));return{'info':response,'id':response['id']};},cancelOrder:function cancelOrder(id){var _this335=this;return _this335.tradePostCancelOrder({'id':id});},request:function request(path){var api,method,params,headers,body,url,query,queryString,_query,response,_this336=this,_arguments324=arguments;return Promise.resolve().then(function(){api=_arguments324.length>1&&_arguments324[1]!==undefined?_arguments324[1]:'trade';method=_arguments324.length>2&&_arguments324[2]!==undefined?_arguments324[2]:'GET';params=_arguments324.length>3&&_arguments324[3]!==undefined?_arguments324[3]:{};headers=_arguments324.length>4&&_arguments324[4]!==undefined?_arguments324[4]:undefined;body=_arguments324.length>5&&_arguments324[5]!==undefined?_arguments324[5]:undefined;url=_this336.urls['api'];if(api=='trade'){url+='/api'+_this336.version;query=_this336.keysort(_this336.extend({'method':path,'access_key':_this336.apiKey,'created':_this336.nonce()},params));queryString=_this336.urlencode(_this336.omit(query,'market'));// secret key must be at the end of query to be signed
queryString+='&secret_key='+_this336.secret;query['sign']=_this336.hash(_this336.encode(queryString));body=_this336.urlencode(query);headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}else{url+='/'+api+'/'+_this336.implodeParams(path,params)+'_json.js';_query=_this336.omit(params,_this336.extractParams(path));if(Object.keys(_query).length){url+='?'+_this336.urlencode(_query);}}return _this336.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('status'in response){if(response['status']=='error'){throw new ExchangeError(_this336.id+' '+_this336.json(response));}}if('code'in response){throw new ExchangeError(_this336.id+' '+_this336.json(response));}return response;});}};//-----------------------------------------------------------------------------
var itbit={'id':'itbit','name':'itBit','countries':'US','rateLimit':2000,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg','api':'https://api.itbit.com','www':'https://www.itbit.com','doc':['https://api.itbit.com/docs','https://www.itbit.com/api']},'api':{'public':{'get':['markets/{symbol}/ticker','markets/{symbol}/order_book','markets/{symbol}/trades']},'private':{'get':['wallets','wallets/{walletId}','wallets/{walletId}/balances/{currencyCode}','wallets/{walletId}/funding_history','wallets/{walletId}/trades','wallets/{walletId}/orders/{id}'],'post':['wallet_transfers','wallets','wallets/{walletId}/cryptocurrency_deposits','wallets/{walletId}/cryptocurrency_withdrawals','wallets/{walletId}/orders','wire_withdrawal'],'delete':['wallets/{walletId}/orders/{id}']}},'markets':{'BTC/USD':{'id':'XBTUSD','symbol':'BTC/USD','base':'BTC','quote':'USD'},'BTC/SGD':{'id':'XBTSGD','symbol':'BTC/SGD','base':'BTC','quote':'SGD'},'BTC/EUR':{'id':'XBTEUR','symbol':'BTC/EUR','base':'BTC','quote':'EUR'}},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this337=this,_arguments325=arguments;return Promise.resolve().then(function(){params=_arguments325.length>1&&_arguments325[1]!==undefined?_arguments325[1]:{};return _this337.publicGetMarketsSymbolOrderBook(_this337.extend({'symbol':_this337.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this337.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this337.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,bid,ask,_this338=this;return Promise.resolve().then(function(){return _this338.publicGetMarketsSymbolTicker({'symbol':_this338.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=_this338.parse8601(ticker['serverTimeUTC']);bid=undefined;ask=undefined;if('bid'in ticker){if(ticker['bid']){bid=parseFloat(ticker['bid']);}}if('ask'in ticker){if(ticker['ask']){ask=parseFloat(ticker['ask']);}}return{'timestamp':timestamp,'datetime':_this338.iso8601(timestamp),'high':parseFloat(ticker['high24h']),'low':parseFloat(ticker['low24h']),'bid':bid,'ask':ask,'vwap':parseFloat(ticker['vwap24h']),'open':parseFloat(ticker['openToday']),'close':undefined,'first':undefined,'last':parseFloat(ticker['lastPrice']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume24h']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this339=this;return _this339.publicGetMarketsSymbolTrades({'symbol':_this339.marketId(market)});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,account,_this340=this;return Promise.resolve().then(function(){return _this340.privateGetBalances();}).then(function(_resp){response=_resp;balances=response['balances'];result={'info':response};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];account={'free':parseFloat(balance['availableBalance']),'used':undefined,'total':parseFloat(balance['totalBalance'])};account['used']=account['total']-account['free'];result[currency]=account;}return result;});},fetchWallets:function fetchWallets(){return this.privateGetWallets();},nonce:function nonce(){return this.milliseconds();},createOrder:function createOrder(market,type,side,amount){var price,params,p,order,response,_this341=this,_arguments329=arguments;return Promise.resolve().then(function(){price=_arguments329.length>4&&_arguments329[4]!==undefined?_arguments329[4]:undefined;params=_arguments329.length>5&&_arguments329[5]!==undefined?_arguments329[5]:{};if(type=='market'){throw new ExchangeError(_this341.id+' allows limit orders only');}amount=amount.toString();price=price.toString();p=_this341.market(market);order={'side':side,'type':type,'currency':p['base'],'amount':amount,'display':amount,'price':price,'instrument':p['id']};return _this341.privatePostTradeAdd(_this341.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var params,_this342=this,_arguments330=arguments;params=_arguments330.length>1&&_arguments330[1]!==undefined?_arguments330[1]:{};return _this342.privateDeleteWalletsWalletIdOrdersId(_this342.extend({'id':id},params));},request:function request(path){var api,method,params,headers,body,url,query,nonce,timestamp,auth,message,_hash,binhash,signature,response,_this343=this,_arguments331=arguments;api=_arguments331.length>1&&_arguments331[1]!==undefined?_arguments331[1]:'public';method=_arguments331.length>2&&_arguments331[2]!==undefined?_arguments331[2]:'GET';params=_arguments331.length>3&&_arguments331[3]!==undefined?_arguments331[3]:{};headers=_arguments331.length>4&&_arguments331[4]!==undefined?_arguments331[4]:undefined;body=_arguments331.length>5&&_arguments331[5]!==undefined?_arguments331[5]:undefined;url=_this343.urls['api']+'/'+_this343.version+'/'+_this343.implodeParams(path,params);query=_this343.omit(params,_this343.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this343.urlencode(query);}}else{if(Object.keys(query).length){body=_this343.json(query);}else{body='';}nonce=_this343.nonce().toString();timestamp=nonce;auth=[method,url,body,nonce,timestamp];message=nonce+_this343.json(auth);_hash=_this343.hash(_this343.encode(message),'sha256','binary');binhash=_this343.binaryConcat(url,_hash);signature=_this343.hmac(binhash,_this343.encode(_this343.secret),'sha512','base64');headers={'Authorization':self.apiKey+':'+signature,'Content-Type':'application/json','X-Auth-Timestamp':timestamp,'X-Auth-Nonce':nonce};}response=_this343.fetch(url,method,headers,body);if('code'in response){throw new ExchangeError(_this343.id+' '+_this343.json(response));}return response;}};//-----------------------------------------------------------------------------
var jubi={'id':'jubi','name':'jubi.com','countries':'CN','rateLimit':1500,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766581-9d397d9a-5edd-11e7-8fb9-5d8236c0e692.jpg','api':'https://www.jubi.com/api','www':'https://www.jubi.com','doc':'https://www.jubi.com/help/api.html'},'api':{'public':{'get':['depth','orders','ticker','allticker']},'private':{'post':['balance','trade_add','trade_cancel','trade_list','trade_view','wallet']}},fetchMarkets:function fetchMarkets(){var markets,keys,result,p,id,base,quote,symbol,_this344=this;return Promise.resolve().then(function(){return _this344.publicGetAllticker();}).then(function(_resp){markets=_resp;keys=Object.keys(markets);result=[];for(p=0;p<keys.length;p++){id=keys[p];base=id.toUpperCase();quote='CNY';symbol=base+'/'+quote;base=_this344.commonCurrencyCode(base);quote=_this344.commonCurrencyCode(quote);result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':id});}return result;});},fetchBalance:function fetchBalance(){var balances,result,c,currency,lowercase,account,free,used,_this345=this;return Promise.resolve().then(function(){return _this345.loadMarkets();}).then(function(){return _this345.privatePostBalance();}).then(function(_resp){balances=_resp;result={'info':balances};for(c=0;c<_this345.currencies.length;c++){currency=_this345.currencies[c];lowercase=currency.toLowerCase();if(lowercase=='dash'){lowercase='drk';}account={'free':undefined,'used':undefined,'total':undefined};free=lowercase+'_balance';used=lowercase+'_lock';if(free in balances){account['free']=parseFloat(balances[free]);}if(used in balances){account['used']=parseFloat(balances[used]);}account['total']=_this345.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,_this346=this,_arguments334=arguments;return Promise.resolve().then(function(){params=_arguments334.length>1&&_arguments334[1]!==undefined?_arguments334[1]:{};return _this346.loadMarkets();}).then(function(){return _this346.publicGetDepth(_this346.extend({'coin':_this346.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this346.milliseconds();result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this346.iso8601(timestamp)};result['asks']=_this346.sortBy(result['asks'],0);return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['vol']),'quoteVolume':parseFloat(ticker['volume']),'info':ticker};},fetchTickers:function fetchTickers(){var tickers,ids,result,i,id,market,symbol,ticker,_this347=this;return Promise.resolve().then(function(){return _this347.loadMarkets();}).then(function(){return _this347.publicGetAllticker();}).then(function(_resp){tickers=_resp;ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this347.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this347.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this348=this;return Promise.resolve().then(function(){return _this348.loadMarkets();}).then(function(){p=_this348.market(market);return _this348.publicGetTicker({'coin':p['id']});}).then(function(_resp){ticker=_resp;return _this348.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this349=this;return Promise.resolve().then(function(){return _this349.loadMarkets();}).then(function(){return _this349.publicGetOrders({'coin':_this349.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,response,_this350=this,_arguments338=arguments;return Promise.resolve().then(function(){price=_arguments338.length>4&&_arguments338[4]!==undefined?_arguments338[4]:undefined;params=_arguments338.length>5&&_arguments338[5]!==undefined?_arguments338[5]:{};return _this350.loadMarkets();}).then(function(){return _this350.privatePostTradeAdd(_this350.extend({'amount':amount,'price':price,'type':side,'coin':_this350.marketId(market)},params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id']};});},cancelOrder:function cancelOrder(id){var params,_this351=this,_arguments339=arguments;return Promise.resolve().then(function(){params=_arguments339.length>1&&_arguments339[1]!==undefined?_arguments339[1]:{};return _this351.loadMarkets();}).then(function(){return _this351.privateDeleteWalletsWalletIdOrdersId(_this351.extend({'id':id},params));});},request:function request(path){var api,method,params,headers,body,url,nonce,query,request,secret,response,_this352=this,_arguments340=arguments;return Promise.resolve().then(function(){api=_arguments340.length>1&&_arguments340[1]!==undefined?_arguments340[1]:'public';method=_arguments340.length>2&&_arguments340[2]!==undefined?_arguments340[2]:'GET';params=_arguments340.length>3&&_arguments340[3]!==undefined?_arguments340[3]:{};headers=_arguments340.length>4&&_arguments340[4]!==undefined?_arguments340[4]:undefined;body=_arguments340.length>5&&_arguments340[5]!==undefined?_arguments340[5]:undefined;url=_this352.urls['api']+'/'+_this352.version+'/'+path;if(api=='public'){if(Object.keys(params).length){url+='?'+_this352.urlencode(params);}}else{nonce=_this352.nonce().toString();query=_this352.extend({'key':_this352.apiKey,'nonce':nonce},params);request=_this352.urlencode(query);secret=_this352.hash(_this352.encode(_this352.secret));query['signature']=_this352.hmac(_this352.encode(request),_this352.encode(secret));body=_this352.urlencode(query);headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}return _this352.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('result'in response){if(!response['result']){throw new ExchangeError(_this352.id+' '+_this352.json(response));}}return response;});}};//-----------------------------------------------------------------------------
// kraken is also owner of ex. Coinsetter / CaVirtEx / Clevercoin
var kraken={'id':'kraken','name':'Kraken','countries':'US','version':'0','rateLimit':1500,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766599-22709304-5ede-11e7-9de1-9f33732e1509.jpg','api':'https://api.kraken.com','www':'https://www.kraken.com','doc':['https://www.kraken.com/en-us/help/api','https://github.com/nothingisdead/npm-kraken-api']},'api':{'public':{'get':['Assets','AssetPairs','Depth','OHLC','Spread','Ticker','Time','Trades']},'private':{'post':['AddOrder','Balance','CancelOrder','ClosedOrders','DepositAddresses','DepositMethods','DepositStatus','Ledgers','OpenOrders','OpenPositions','QueryLedgers','QueryOrders','QueryTrades','TradeBalance','TradesHistory','TradeVolume','Withdraw','WithdrawCancel','WithdrawInfo','WithdrawStatus']}},fetchMarkets:function fetchMarkets(){var markets,keys,result,p,id,market,base,quote,darkpool,symbol,_this353=this;return Promise.resolve().then(function(){return _this353.publicGetAssetPairs();}).then(function(_resp){markets=_resp;keys=Object.keys(markets['result']);result=[];for(p=0;p<keys.length;p++){id=keys[p];market=markets['result'][id];base=market['base'];quote=market['quote'];if(base[0]=='X'||base[0]=='Z'){base=base.slice(1);}if(quote[0]=='X'||quote[0]=='Z'){quote=quote.slice(1);}base=_this353.commonCurrencyCode(base);quote=_this353.commonCurrencyCode(quote);darkpool=id.indexOf('.d')>=0;symbol=darkpool?market['altname']:base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'darkpool':darkpool,'info':market});}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,darkpool,p,response,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_timestamp5,_this354=this,_arguments342=arguments;return Promise.resolve().then(function(){params=_arguments342.length>1&&_arguments342[1]!==undefined?_arguments342[1]:{};return _this354.loadMarkets();}).then(function(){darkpool=market.indexOf('.d')>=0;if(darkpool){throw new ExchangeError(_this354.id+' does not provide an order book for darkpool symbol '+market);}p=_this354.market(market);return _this354.publicGetDepth(_this354.extend({'pair':p['id']},params));}).then(function(_resp){response=_resp;orderbook=response['result'][p['id']];timestamp=_this354.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this354.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);_timestamp5=order[2]*1000;result[side].push([price,amount,_timestamp5]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['h'][1]),'low':parseFloat(ticker['l'][1]),'bid':parseFloat(ticker['b'][0]),'ask':parseFloat(ticker['a'][0]),'vwap':parseFloat(ticker['p'][1]),'open':parseFloat(ticker['o']),'close':undefined,'first':undefined,'last':parseFloat(ticker['c'][0]),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['v'][1]),'info':ticker};},fetchTickers:function fetchTickers(){var pairs,s,symbol,market,filter,response,tickers,ids,result,i,id,_market,_symbol2,ticker,_this355=this;return Promise.resolve().then(function(){return _this355.loadMarkets();}).then(function(){pairs=[];for(s=0;s<_this355.symbols.length;s++){symbol=_this355.symbols[s];market=_this355.markets[symbol];if(!market['darkpool']){pairs.push(market['id']);}}filter=pairs.join(',');return _this355.publicGetTicker({'pair':filter});}).then(function(_resp){response=_resp;tickers=response['result'];ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];_market=_this355.markets_by_id[id];_symbol2=_market['symbol'];ticker=tickers[id];result[_symbol2]=_this355.parseTicker(ticker,_market);}return result;});},fetchTicker:function fetchTicker(market){var darkpool,p,response,ticker,_this356=this;return Promise.resolve().then(function(){return _this356.loadMarkets();}).then(function(){darkpool=market.indexOf('.d')>=0;if(darkpool){throw new ExchangeError(_this356.id+' does not provide a ticker for darkpool symbol '+market);}p=_this356.market(market);return _this356.publicGetTicker({'pair':p['id']});}).then(function(_resp){response=_resp;ticker=response['result'][p['id']];return _this356.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this357=this;return Promise.resolve().then(function(){return _this357.loadMarkets();}).then(function(){return _this357.publicGetTrades({'pair':_this357.marketId(market)});});},fetchBalance:function fetchBalance(){var response,balances,result,currencies,c,currency,code,balance,account,_this358=this;return Promise.resolve().then(function(){return _this358.loadMarkets();}).then(function(){return _this358.privatePostBalance();}).then(function(_resp){response=_resp;balances=response['result'];result={'info':balances};currencies=Object.keys(balances);for(c=0;c<currencies.length;c++){currency=currencies[c];code=currency;// X-ISO4217-A3 standard currency codes
if(code[0]=='X'){code=code.slice(1);}else{if(code[0]=='Z'){code=code.slice(1);}}code=_this358.commonCurrencyCode(code);balance=parseFloat(balances[currency]);account={'free':balance,'used':undefined,'total':balance};result[code]=account;}return result;});},createOrder:function createOrder(market,type,side,amount){var price,params,order,response,length,id,_this359=this,_arguments347=arguments;return Promise.resolve().then(function(){price=_arguments347.length>4&&_arguments347[4]!==undefined?_arguments347[4]:undefined;params=_arguments347.length>5&&_arguments347[5]!==undefined?_arguments347[5]:{};return _this359.loadMarkets();}).then(function(){order={'pair':_this359.marketId(market),'type':side,'ordertype':type,'volume':amount};if(type=='limit'){order['price']=price;}return _this359.privatePostAddOrder(_this359.extend(order,params));}).then(function(_resp){response=_resp;length=response['txid'].length;id=length>1?response['txid']:response['txid'][0];return{'info':response,'id':id};});},cancelOrder:function cancelOrder(id){var _this360=this;return Promise.resolve().then(function(){return _this360.loadMarkets();}).then(function(){return _this360.privatePostCancelOrder({'txid':id});});},request:function request(path){var api,method,params,headers,body,url,nonce,auth,_hash2,binary,binhash,secret,signature,response,numErrors,_this361=this,_arguments349=arguments;return Promise.resolve().then(function(){api=_arguments349.length>1&&_arguments349[1]!==undefined?_arguments349[1]:'public';method=_arguments349.length>2&&_arguments349[2]!==undefined?_arguments349[2]:'GET';params=_arguments349.length>3&&_arguments349[3]!==undefined?_arguments349[3]:{};headers=_arguments349.length>4&&_arguments349[4]!==undefined?_arguments349[4]:undefined;body=_arguments349.length>5&&_arguments349[5]!==undefined?_arguments349[5]:undefined;url='/'+_this361.version+'/'+api+'/'+path;if(api=='public'){if(Object.keys(params).length){url+='?'+_this361.urlencode(params);}}else{nonce=_this361.nonce().toString();body=_this361.urlencode(_this361.extend({'nonce':nonce},params));auth=_this361.encode(nonce+body);_hash2=_this361.hash(auth,'sha256','binary');binary=_this361.stringToBinary(_this361.encode(url));binhash=_this361.binaryConcat(binary,_hash2);secret=_this361.base64ToBinary(_this361.secret);signature=_this361.hmac(binhash,secret,'sha512','base64');headers={'API-Key':_this361.apiKey,'API-Sign':signature,'Content-Type':'application/x-www-form-urlencoded'};}url=_this361.urls['api']+url;return _this361.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){numErrors=response['error'].length;if(numErrors){throw new ExchangeError(_this361.id+' '+_this361.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var lakebtc={'id':'lakebtc','name':'LakeBTC','countries':'US','version':'api_v2','urls':{'logo':'https://user-images.githubusercontent.com/1294454/28074120-72b7c38a-6660-11e7-92d9-d9027502281d.jpg','api':'https://api.lakebtc.com','www':'https://www.lakebtc.com','doc':['https://www.lakebtc.com/s/api','https://www.lakebtc.com/s/api_v2']},'api':{'public':{'get':['bcorderbook','bctrades','ticker']},'private':{'post':['buyOrder','cancelOrders','getAccountInfo','getExternalAccounts','getOrders','getTrades','openOrders','sellOrder']}},fetchMarkets:function fetchMarkets(){var markets,result,keys,k,id,market,base,quote,symbol,_this362=this;return Promise.resolve().then(function(){return _this362.publicGetTicker();}).then(function(_resp){markets=_resp;result=[];keys=Object.keys(markets);for(k=0;k<keys.length;k++){id=keys[k];market=markets[id];base=id.slice(0,3);quote=id.slice(3,6);base=base.toUpperCase();quote=quote.toUpperCase();symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,currencies,c,currency,balance,account,_this363=this;return Promise.resolve().then(function(){return _this363.loadMarkets();}).then(function(){return _this363.privatePostGetAccountInfo();}).then(function(_resp){response=_resp;balances=response['balance'];result={'info':response};currencies=Object.keys(balances);for(c=0;c<currencies.length;c++){currency=currencies[c];balance=parseFloat(balances[currency]);account={'free':balance,'used':undefined,'total':balance};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this364=this,_arguments352=arguments;return Promise.resolve().then(function(){params=_arguments352.length>1&&_arguments352[1]!==undefined?_arguments352[1]:{};return _this364.loadMarkets();}).then(function(){return _this364.publicGetBcorderbook(_this364.extend({'symbol':_this364.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this364.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this364.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var p,tickers,ticker,timestamp,_this365=this;return Promise.resolve().then(function(){return _this365.loadMarkets();}).then(function(){p=_this365.market(market);return _this365.publicGetTicker({'symbol':p['id']});}).then(function(_resp){tickers=_resp;ticker=tickers[p['id']];timestamp=_this365.milliseconds();return{'timestamp':timestamp,'datetime':_this365.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this366=this;return Promise.resolve().then(function(){return _this366.loadMarkets();}).then(function(){return _this366.publicGetBctrades({'symbol':_this366.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,method,marketId,order,response,_this367=this,_arguments355=arguments;return Promise.resolve().then(function(){price=_arguments355.length>4&&_arguments355[4]!==undefined?_arguments355[4]:undefined;params=_arguments355.length>5&&_arguments355[5]!==undefined?_arguments355[5]:{};return _this367.loadMarkets();}).then(function(){if(type=='market'){throw new ExchangeError(_this367.id+' allows limit orders only');}method='privatePost'+_this367.capitalize(side)+'Order';marketId=_this367.marketId(market);order={'params':[price,amount,marketId]};return _this367[method](_this367.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id'].toString()};});},cancelOrder:function cancelOrder(id){var _this368=this;return Promise.resolve().then(function(){return _this368.loadMarkets();}).then(function(){return _this368.privatePostCancelOrder({'params':id});});},request:function request(path){var api,method,params,headers,body,url,nonce,query,signature,response,_this369=this,_arguments357=arguments;api=_arguments357.length>1&&_arguments357[1]!==undefined?_arguments357[1]:'public';method=_arguments357.length>2&&_arguments357[2]!==undefined?_arguments357[2]:'GET';params=_arguments357.length>3&&_arguments357[3]!==undefined?_arguments357[3]:{};headers=_arguments357.length>4&&_arguments357[4]!==undefined?_arguments357[4]:undefined;body=_arguments357.length>5&&_arguments357[5]!==undefined?_arguments357[5]:undefined;url=_this369.urls['api']+'/'+_this369.version;if(api=='public'){url+='/'+path;if(Object.keys(params).length){url+='?'+_this369.urlencode(params);}}else{nonce=_this369.nonce();if(Object.keys(params).length){params=params.join(',');}else{params='';}query=_this369.urlencode({'tonce':nonce,'accesskey':_this369.apiKey,'requestmethod':method.toLowerCase(),'id':nonce,'method':path,'params':params});body=_this369.json({'method':path,'params':params,'id':nonce});signature=_this369.hmac(_this369.encode(query),_this369.secret,'sha1','base64');headers={'Json-Rpc-Tonce':nonce,'Authorization':"Basic "+_this369.apiKey+':'+signature,'Content-Length':body.length,'Content-Type':'application/json'};}response=_this369.fetch(url,method,headers,body);if('error'in response){throw new ExchangeError(_this369.id+' '+_this369.json(response));}return response;}};//-----------------------------------------------------------------------------
var livecoin={'id':'livecoin','name':'LiveCoin','countries':['US','UK','RU'],'rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27980768-f22fc424-638a-11e7-89c9-6010a54ff9be.jpg','api':'https://api.livecoin.net','www':'https://www.livecoin.net','doc':'https://www.livecoin.net/api?lang=en'},'api':{'public':{'get':['exchange/all/order_book','exchange/last_trades','exchange/maxbid_minask','exchange/order_book','exchange/restrictions','exchange/ticker',// omit params to get all tickers at once
'info/coinInfo']},'private':{'get':['exchange/client_orders','exchange/order','exchange/trades','exchange/commission','exchange/commissionCommonInfo','payment/balances','payment/balance','payment/get/address','payment/history/size','payment/history/transactions'],'post':['exchange/buylimit','exchange/buymarket','exchange/cancellimit','exchange/selllimit','exchange/sellmarket','payment/out/capitalist','payment/out/card','payment/out/coin','payment/out/okpay','payment/out/payeer','payment/out/perfectmoney','payment/voucher/amount','payment/voucher/make','payment/voucher/redeem']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,symbol,_symbol$split9,_symbol$split10,base,quote,_this370=this;return Promise.resolve().then(function(){return _this370.publicGetExchangeTicker();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['symbol'];symbol=id;_symbol$split9=symbol.split('/');_symbol$split10=_slicedToArray(_symbol$split9,2);base=_symbol$split10[0];quote=_symbol$split10[1];result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balances,result,b,balance,currency,account,_this371=this;return Promise.resolve().then(function(){return _this371.loadMarkets();}).then(function(){return _this371.privateGetPaymentBalances();}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<_this371.currencies.length;b++){balance=balances[b];currency=balance['currency'];account=undefined;if(currency in result){account=result[currency];}else{account={'free':undefined,'used':undefined,'total':undefined};}if(balance['type']=='total'){account['total']=parseFloat(balance['value']);}if(balance['type']=='available'){account['free']=parseFloat(balance['value']);}if(balance['type']=='trade'){account['used']=parseFloat(balance['value']);}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this372=this,_arguments360=arguments;return Promise.resolve().then(function(){params=_arguments360.length>1&&_arguments360[1]!==undefined?_arguments360[1]:{};return _this372.loadMarkets();}).then(function(){return _this372.publicGetExchangeOrderBook(_this372.extend({'currencyPair':_this372.marketId(market),'groupByPrice':'false','depth':100},params));}).then(function(_resp){orderbook=_resp;timestamp=orderbook['timestamp'];result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this372.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['best_bid']),'ask':parseFloat(ticker['best_ask']),'vwap':parseFloat(ticker['vwap']),'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};},fetchTickers:function fetchTickers(){var response,tickers,ids,result,i,id,market,symbol,ticker,_this373=this;return Promise.resolve().then(function(){return _this373.loadMarkets();}).then(function(){return _this373.publicGetExchangeTicker();}).then(function(_resp){response=_resp;tickers=_this373.indexBy(response,'symbol');ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this373.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this373.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this374=this;return Promise.resolve().then(function(){return _this374.loadMarkets();}).then(function(){p=_this374.market(market);return _this374.publicGetExchangeTicker({'currencyPair':p['id']});}).then(function(_resp){ticker=_resp;return _this374.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this375=this;return Promise.resolve().then(function(){return _this375.loadMarkets();}).then(function(){return _this375.publicGetExchangeLastTrades({'currencyPair':_this375.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,_this376=this,_arguments364=arguments;return Promise.resolve().then(function(){price=_arguments364.length>4&&_arguments364[4]!==undefined?_arguments364[4]:undefined;params=_arguments364.length>5&&_arguments364[5]!==undefined?_arguments364[5]:{};return _this376.loadMarkets();}).then(function(){method='privatePostExchange'+_this376.capitalize(side)+type;order={'currencyPair':_this376.marketId(market),'quantity':amount};if(type=='limit'){order['price']=price;}return _this376[method](_this376.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['id'].toString()};});},cancelOrder:function cancelOrder(id){var params,_this377=this,_arguments365=arguments;return Promise.resolve().then(function(){params=_arguments365.length>1&&_arguments365[1]!==undefined?_arguments365[1]:{};return _this377.loadMarkets();}).then(function(){return _this377.privatePostExchangeCancellimit(_this377.extend({'orderId':id},params));});},request:function request(path){var api,method,params,headers,body,url,query,signature,response,_this378=this,_arguments366=arguments;return Promise.resolve().then(function(){api=_arguments366.length>1&&_arguments366[1]!==undefined?_arguments366[1]:'public';method=_arguments366.length>2&&_arguments366[2]!==undefined?_arguments366[2]:'GET';params=_arguments366.length>3&&_arguments366[3]!==undefined?_arguments366[3]:{};headers=_arguments366.length>4&&_arguments366[4]!==undefined?_arguments366[4]:undefined;body=_arguments366.length>5&&_arguments366[5]!==undefined?_arguments366[5]:undefined;url=_this378.urls['api']+'/'+path;if(api=='public'){if(Object.keys(params).length){url+='?'+_this378.urlencode(params);}}else{query=_this378.urlencode(_this378.keysort(params));if(method=='GET'){if(query){url+='?'+query;}else{if(query){body=query;}}}signature=_this378.hmac(_this378.encode(query),_this378.encode(_this378.secret),'sha256');headers={'Api-Key':_this378.apiKey,'Sign':signature.toUpperCase(),'Content-Type':'application/x-www-form-urlencoded'};}return _this378.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('success'in response){if(!response['success']){throw new ExchangeError(_this378.id+' '+_this378.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var liqui=extend(btce,{'id':'liqui','name':'Liqui','countries':['UA'],'rateLimit':1000,'version':'3','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27982022-75aea828-63a0-11e7-9511-ca584a8edd74.jpg','api':{'public':'https://api.liqui.io/api','private':'https://api.liqui.io/tapi'},'www':'https://liqui.io','doc':'https://liqui.io/api'},request:function request(path){var api,method,params,headers,body,url,query,nonce,response,_this379=this,_arguments367=arguments;return Promise.resolve().then(function(){api=_arguments367.length>1&&_arguments367[1]!==undefined?_arguments367[1]:'public';method=_arguments367.length>2&&_arguments367[2]!==undefined?_arguments367[2]:'GET';params=_arguments367.length>3&&_arguments367[3]!==undefined?_arguments367[3]:{};headers=_arguments367.length>4&&_arguments367[4]!==undefined?_arguments367[4]:undefined;body=_arguments367.length>5&&_arguments367[5]!==undefined?_arguments367[5]:undefined;url=_this379.urls['api'][api];query=_this379.omit(params,_this379.extractParams(path));if(api=='public'){url+='/'+_this379.version+'/'+_this379.implodeParams(path,params);if(Object.keys(query).length){url+='?'+_this379.urlencode(query);}}else{nonce=_this379.nonce();body=_this379.urlencode(_this379.extend({'nonce':nonce,'method':path},query));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Key':_this379.apiKey,'Sign':_this379.hmac(_this379.encode(body),_this379.encode(_this379.secret),'sha512')};}return _this379.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('success'in response){if(!response['success']){throw new ExchangeError(_this379.id+' '+_this379.json(response));}}return response;});}});//-----------------------------------------------------------------------------
var luno={'id':'luno','name':'luno','countries':['GB','SG','ZA'],'rateLimit':3000,'version':'1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg','api':'https://api.mybitx.com/api','www':'https://www.luno.com','doc':['https://www.luno.com/en/api','https://npmjs.org/package/bitx','https://github.com/bausmeier/node-bitx']},'api':{'public':{'get':['orderbook','ticker','tickers','trades']},'private':{'get':['accounts/{id}/pending','accounts/{id}/transactions','balance','fee_info','funding_address','listorders','listtrades','orders/{id}','quotes/{id}','withdrawals','withdrawals/{id}'],'post':['accounts','postorder','marketorder','stoporder','funding_address','withdrawals','send','quotes','oauth2/grant'],'put':['quotes/{id}'],'delete':['quotes/{id}','withdrawals/{id}']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,symbol,_this380=this;return Promise.resolve().then(function(){return _this380.publicGetTickers();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets['tickers'].length;p++){market=markets['tickers'][p];id=market['pair'];base=id.slice(0,3);quote=id.slice(3,6);base=_this380.commonCurrencyCode(base);quote=_this380.commonCurrencyCode(quote);symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,reserved,unconfirmed,account,_this381=this;return Promise.resolve().then(function(){return _this381.loadMarkets();}).then(function(){return _this381.privateGetBalance();}).then(function(_resp){response=_resp;balances=response['balance'];result={'info':response};for(b=0;b<balances.length;b++){balance=balances[b];currency=_this381.commonCurrencyCode(balance['asset']);reserved=parseFloat(balance['reserved']);unconfirmed=parseFloat(balance['unconfirmed']);account={'free':parseFloat(balance['balance']),'used':_this381.sum(reserved,unconfirmed),'total':undefined};account['total']=_this381.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this382=this,_arguments370=arguments;return Promise.resolve().then(function(){params=_arguments370.length>1&&_arguments370[1]!==undefined?_arguments370[1]:{};return _this382.loadMarkets();}).then(function(){return _this382.publicGetOrderbook(_this382.extend({'pair':_this382.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=orderbook['timestamp'];result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this382.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['volume']);// let timestamp = order[2] * 1000;
result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=ticker['timestamp'];return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last_trade']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['rolling_24_hour_volume']),'info':ticker};},fetchTickers:function fetchTickers(){var response,tickers,ids,result,i,id,market,symbol,ticker,_this383=this;return Promise.resolve().then(function(){return _this383.loadMarkets();}).then(function(){return _this383.publicGetTickers();}).then(function(_resp){response=_resp;tickers=_this383.indexBy(response['tickers'],'pair');ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this383.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this383.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this384=this;return Promise.resolve().then(function(){return _this384.loadMarkets();}).then(function(){p=_this384.market(market);return _this384.publicGetTicker({'pair':p['id']});}).then(function(_resp){ticker=_resp;return _this384.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this385=this;return Promise.resolve().then(function(){return _this385.loadMarkets();}).then(function(){return _this385.publicGetTrades({'pair':_this385.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,_this386=this,_arguments374=arguments;return Promise.resolve().then(function(){price=_arguments374.length>4&&_arguments374[4]!==undefined?_arguments374[4]:undefined;params=_arguments374.length>5&&_arguments374[5]!==undefined?_arguments374[5]:{};return _this386.loadMarkets();}).then(function(){method='privatePost';order={'pair':_this386.marketId(market)};if(type=='market'){method+='Marketorder';order['type']=side.toUpperCase();if(side=='buy'){order['counter_volume']=amount;}else{order['base_volume']=amount;}}else{method+='Order';order['volume']=amount;order['price']=price;if(side=='buy'){order['type']='BID';}else{order['type']='ASK';}}return _this386[method](_this386.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['order_id']};});},cancelOrder:function cancelOrder(id){var _this387=this;return Promise.resolve().then(function(){return _this387.loadMarkets();}).then(function(){return _this387.privatePostStoporder({'order_id':id});});},request:function request(path){var api,method,params,headers,body,url,query,auth,response,_this388=this,_arguments376=arguments;return Promise.resolve().then(function(){api=_arguments376.length>1&&_arguments376[1]!==undefined?_arguments376[1]:'public';method=_arguments376.length>2&&_arguments376[2]!==undefined?_arguments376[2]:'GET';params=_arguments376.length>3&&_arguments376[3]!==undefined?_arguments376[3]:{};headers=_arguments376.length>4&&_arguments376[4]!==undefined?_arguments376[4]:undefined;body=_arguments376.length>5&&_arguments376[5]!==undefined?_arguments376[5]:undefined;url=_this388.urls['api']+'/'+_this388.version+'/'+_this388.implodeParams(path,params);query=_this388.omit(params,_this388.extractParams(path));if(Object.keys(query).length){url+='?'+_this388.urlencode(query);}if(api=='private'){auth=_this388.encode(_this388.apiKey+':'+_this388.secret);auth=_this388.stringToBase64(auth);headers={'Authorization':'Basic '+_this388.decode(auth)};}return _this388.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this388.id+' '+_this388.json(response));}return response;});}};//-----------------------------------------------------------------------------
var mercado={'id':'mercado','name':'Mercado Bitcoin','countries':'BR',// Brazil
'rateLimit':1000,'version':'v3','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg','api':{'public':'https://www.mercadobitcoin.net/api','private':'https://www.mercadobitcoin.net/tapi'},'www':'https://www.mercadobitcoin.com.br','doc':['https://www.mercadobitcoin.com.br/api-doc','https://www.mercadobitcoin.com.br/trade-api']},'api':{'public':{'get':[// last slash critical
'orderbook/','orderbook_litecoin/','ticker/','ticker_litecoin/','trades/','trades_litecoin/','v2/ticker/','v2/ticker_litecoin/']},'private':{'post':['cancel_order','get_account_info','get_order','get_withdrawal','list_system_messages','list_orders','list_orderbook','place_buy_order','place_sell_order','withdraw_coin']}},'markets':{'BTC/BRL':{'id':'BRLBTC','symbol':'BTC/BRL','base':'BTC','quote':'BRL','suffix':''},'LTC/BRL':{'id':'BRLLTC','symbol':'LTC/BRL','base':'LTC','quote':'BRL','suffix':'Litecoin'}},fetchOrderBook:function fetchOrderBook(market){var params,p,method,orderbook,timestamp,result,_this389=this,_arguments377=arguments;return Promise.resolve().then(function(){params=_arguments377.length>1&&_arguments377[1]!==undefined?_arguments377[1]:{};p=_this389.market(market);method='publicGetOrderbook'+_this389.capitalize(p['suffix']);return _this389[method](params);}).then(function(_resp){orderbook=_resp;timestamp=_this389.milliseconds();result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this389.iso8601(timestamp)};return result;});},fetchTicker:function fetchTicker(market){var p,method,response,ticker,timestamp,_this390=this;return Promise.resolve().then(function(){p=_this390.market(market);method='publicGetV2Ticker'+_this390.capitalize(p['suffix']);return _this390[method]();}).then(function(_resp){response=_resp;ticker=response['ticker'];timestamp=parseInt(ticker['date'])*1000;return{'timestamp':timestamp,'datetime':_this390.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']),'info':ticker};});},fetchTrades:function fetchTrades(market){var p,method,_this391=this;p=_this391.market(market);method='publicGetTrades'+_this391.capitalize(p['suffix']);return _this391[method]();},fetchBalance:function fetchBalance(){var response,balances,result,c,currency,lowercase,account,_this392=this;return Promise.resolve().then(function(){return _this392.privatePostGetAccountInfo();}).then(function(_resp){response=_resp;balances=response['balance'];result={'info':response};for(c=0;c<_this392.currencies.length;c++){currency=_this392.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if(lowercase in balances){account['free']=parseFloat(balances[lowercase]['available']);account['total']=parseFloat(balances[lowercase]['total']);account['used']=account['total']-account['free'];}result[currency]=account;}return result;});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,response,_this393=this,_arguments381=arguments;return Promise.resolve().then(function(){price=_arguments381.length>4&&_arguments381[4]!==undefined?_arguments381[4]:undefined;params=_arguments381.length>5&&_arguments381[5]!==undefined?_arguments381[5]:{};if(type=='market'){throw new ExchangeError(_this393.id+' allows limit orders only');}method='privatePostPlace'+_this393.capitalize(side)+'Order';order={'coin_pair':_this393.marketId(market),'quantity':amount,'limit_price':price};return _this393[method](_this393.extend(order,params));}).then(function(_resp){response=_resp;return{'info':response,'id':response['response_data']['order']['order_id'].toString()};});},cancelOrder:function cancelOrder(id){var params,_this394=this,_arguments382=arguments;params=_arguments382.length>1&&_arguments382[1]!==undefined?_arguments382[1]:{};return _this394.privatePostCancelOrder(_this394.extend({'order_id':id},params));},request:function request(path){var api,method,params,headers,body,url,nonce,auth,response,_this395=this,_arguments383=arguments;return Promise.resolve().then(function(){api=_arguments383.length>1&&_arguments383[1]!==undefined?_arguments383[1]:'public';method=_arguments383.length>2&&_arguments383[2]!==undefined?_arguments383[2]:'GET';params=_arguments383.length>3&&_arguments383[3]!==undefined?_arguments383[3]:{};headers=_arguments383.length>4&&_arguments383[4]!==undefined?_arguments383[4]:undefined;body=_arguments383.length>5&&_arguments383[5]!==undefined?_arguments383[5]:undefined;url=_this395.urls['api'][api]+'/';if(api=='public'){url+=path;}else{url+=_this395.version+'/';nonce=_this395.nonce();body=_this395.urlencode(_this395.extend({'tapi_method':path,'tapi_nonce':nonce},params));auth='/tapi/'+_this395.version+'/'+'?'+body;headers={'Content-Type':'application/x-www-form-urlencoded','TAPI-ID':_this395.apiKey,'TAPI-MAC':_this395.hmac(_this395.encode(auth),_this395.secret,'sha512')};}return _this395.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error_message'in response){throw new ExchangeError(_this395.id+' '+_this395.json(response));}return response;});}};//-----------------------------------------------------------------------------
// OKCoin
// China
// https://www.okcoin.com/
// https://www.okcoin.com/rest_getStarted.html
// https://github.com/OKCoin/websocket
// https://www.npmjs.com/package/okcoin.com
// https://www.okcoin.cn
// https://www.okcoin.cn/rest_getStarted.html
var okcoin={'version':'v1','rateLimit':1000,// up to 3000 requests per 5 minutes ≈ 600 requests per minute ≈ 10 requests per second ≈ 100 ms
'api':{'public':{'get':['depth','exchange_rate','future_depth','future_estimated_price','future_hold_amount','future_index','future_kline','future_price_limit','future_ticker','future_trades','kline','otcs','ticker','trades']},'private':{'post':['account_records','batch_trade','borrow_money','borrow_order_info','borrows_info','cancel_borrow','cancel_order','cancel_otc_order','cancel_withdraw','future_batch_trade','future_cancel','future_devolve','future_explosive','future_order_info','future_orders_info','future_position','future_position_4fix','future_trade','future_trades_history','future_userinfo','future_userinfo_4fix','lend_depth','order_fee','order_history','order_info','orders_info','otc_order_history','otc_order_info','repayment','submit_otc_order','trade','trade_history','trade_otc_order','withdraw','withdraw_info','unrepayments_info','userinfo']}},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,_this396=this,_arguments384=arguments;return Promise.resolve().then(function(){params=_arguments384.length>1&&_arguments384[1]!==undefined?_arguments384[1]:{};return _this396.publicGetDepth(_this396.extend({'symbol':_this396.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this396.milliseconds();result={'bids':orderbook['bids'],'asks':_this396.sortBy(orderbook['asks'],0),'timestamp':timestamp,'datetime':_this396.iso8601(timestamp)};return result;});},fetchTicker:function fetchTicker(market){var response,ticker,timestamp,_this397=this;return Promise.resolve().then(function(){return _this397.publicGetTicker({'symbol':_this397.marketId(market)});}).then(function(_resp){response=_resp;ticker=response['ticker'];timestamp=parseInt(response['date'])*1000;return{'timestamp':timestamp,'datetime':_this397.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this398=this;return _this398.publicGetTrades({'symbol':_this398.marketId(market)});},fetchBalance:function fetchBalance(){var response,balances,result,c,currency,lowercase,account,_this399=this;return Promise.resolve().then(function(){return _this399.privatePostUserinfo();}).then(function(_resp){response=_resp;balances=response['info']['funds'];result={'info':response};for(c=0;c<_this399.currencies.length;c++){currency=_this399.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if(lowercase in balances['free']){account['free']=parseFloat(balances['free'][lowercase]);}if(lowercase in balances['freezed']){account['used']=parseFloat(balances['freezed'][lowercase]);}account['total']=_this399.sum(account['free'],account['used']);result[currency]=account;}return result;});},createOrder:function createOrder(market,type,side,amount){var price,params,order,_this400=this,_arguments388=arguments;price=_arguments388.length>4&&_arguments388[4]!==undefined?_arguments388[4]:undefined;params=_arguments388.length>5&&_arguments388[5]!==undefined?_arguments388[5]:{};order={'symbol':_this400.marketId(market),'type':side,'amount':amount};if(type=='limit'){order['price']=price;}else{order['type']+='_market';}return _this400.privatePostTrade(_this400.extend(order,params));},cancelOrder:function cancelOrder(id){var params,_this401=this,_arguments389=arguments;params=_arguments389.length>1&&_arguments389[1]!==undefined?_arguments389[1]:{};return _this401.privatePostCancelOrder(_this401.extend({'order_id':id},params));},request:function request(path){var api,method,params,headers,body,url,query,queryString,response,_this402=this,_arguments390=arguments;return Promise.resolve().then(function(){api=_arguments390.length>1&&_arguments390[1]!==undefined?_arguments390[1]:'public';method=_arguments390.length>2&&_arguments390[2]!==undefined?_arguments390[2]:'GET';params=_arguments390.length>3&&_arguments390[3]!==undefined?_arguments390[3]:{};headers=_arguments390.length>4&&_arguments390[4]!==undefined?_arguments390[4]:undefined;body=_arguments390.length>5&&_arguments390[5]!==undefined?_arguments390[5]:undefined;url='/api/'+_this402.version+'/'+path+'.do';if(api=='public'){if(Object.keys(params).length){url+='?'+_this402.urlencode(params);}}else{query=_this402.keysort(_this402.extend({'api_key':_this402.apiKey},params));// secret key must be at the end of query
queryString=_this402.urlencode(query)+'&secret_key='+_this402.secret;query['sign']=_this402.hash(_this402.encode(queryString)).toUpperCase();body=_this402.urlencode(query);headers={'Content-Type':'application/x-www-form-urlencoded'};}url=_this402.urls['api']+url;return _this402.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('result'in response){if(!response['result']){throw new ExchangeError(_this402.id+' '+_this402.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var okcoincny=extend(okcoin,{'id':'okcoincny','name':'OKCoin CNY','countries':'CN','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766792-8be9157a-5ee5-11e7-926c-6d69b8d3378d.jpg','api':'https://www.okcoin.cn','www':'https://www.okcoin.cn','doc':'https://www.okcoin.cn/rest_getStarted.html'},'markets':{'BTC/CNY':{'id':'btc_cny','symbol':'BTC/CNY','base':'BTC','quote':'CNY'},'LTC/CNY':{'id':'ltc_cny','symbol':'LTC/CNY','base':'LTC','quote':'CNY'}}});//-----------------------------------------------------------------------------
var okcoinusd=extend(okcoin,{'id':'okcoinusd','name':'OKCoin USD','countries':['CN','US'],'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766791-89ffb502-5ee5-11e7-8a5b-c5950b68ac65.jpg','api':'https://www.okcoin.com','www':'https://www.okcoin.com','doc':['https://www.okcoin.com/rest_getStarted.html','https://www.npmjs.com/package/okcoin.com']},'markets':{'BTC/USD':{'id':'btc_usd','symbol':'BTC/USD','base':'BTC','quote':'USD'},'LTC/USD':{'id':'ltc_usd','symbol':'LTC/USD','base':'LTC','quote':'USD'}}});//-----------------------------------------------------------------------------
var paymium={'id':'paymium','name':'Paymium','countries':['FR','EU'],'rateLimit':2000,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27790564-a945a9d4-5ff9-11e7-9d2d-b635763f2f24.jpg','api':'https://paymium.com/api','www':'https://www.paymium.com','doc':['https://github.com/Paymium/api-documentation','https://www.paymium.com/page/developers']},'api':{'public':{'get':['countries','data/{id}/ticker','data/{id}/trades','data/{id}/depth','bitcoin_charts/{id}/trades','bitcoin_charts/{id}/depth']},'private':{'get':['merchant/get_payment/{UUID}','user','user/addresses','user/addresses/{btc_address}','user/orders','user/orders/{UUID}','user/price_alerts'],'post':['user/orders','user/addresses','user/payment_requests','user/price_alerts','merchant/create_payment'],'delete':['user/orders/{UUID}/cancel','user/price_alerts/{id}']}},'markets':{'BTC/EUR':{'id':'eur','symbol':'BTC/EUR','base':'BTC','quote':'EUR'}},fetchBalance:function fetchBalance(){var balances,result,c,currency,lowercase,account,balance,locked,_this403=this;return Promise.resolve().then(function(){return _this403.privateGetUser();}).then(function(_resp){balances=_resp;result={'info':balances};for(c=0;c<_this403.currencies.length;c++){currency=_this403.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};balance='balance_'+lowercase;locked='locked_'+lowercase;if(balance in balances){account['free']=balances[balance];}if(locked in balances){account['used']=balances[locked];}account['total']=_this403.sum(account['free'],account['used']);result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_timestamp6,_this404=this,_arguments392=arguments;return Promise.resolve().then(function(){params=_arguments392.length>1&&_arguments392[1]!==undefined?_arguments392[1]:{};return _this404.publicGetDataIdDepth(_this404.extend({'id':_this404.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this404.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this404.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order['price'];amount=order['amount'];_timestamp6=order['timestamp']*1000;result[side].push([price,amount,_timestamp6]);}}result['bids']=_this404.sortBy(result['bids'],0,true);return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this405=this;return Promise.resolve().then(function(){return _this405.publicGetDataIdTicker({'id':_this405.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=ticker['at']*1000;return{'timestamp':timestamp,'datetime':_this405.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':parseFloat(ticker['vwap']),'open':parseFloat(ticker['open']),'close':undefined,'first':undefined,'last':parseFloat(ticker['price']),'change':undefined,'percentage':parseFloat(ticker['variation']),'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this406=this;return _this406.publicGetDataIdTrades({'id':_this406.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,order,_this407=this,_arguments395=arguments;price=_arguments395.length>4&&_arguments395[4]!==undefined?_arguments395[4]:undefined;params=_arguments395.length>5&&_arguments395[5]!==undefined?_arguments395[5]:{};order={'type':_this407.capitalize(type)+'Order','currency':_this407.marketId(market),'direction':side,'amount':amount};if(type=='market'){order['price']=price;}return _this407.privatePostUserOrders(_this407.extend(order,params));},cancelOrder:function cancelOrder(id){var params,_this408=this,_arguments396=arguments;params=_arguments396.length>1&&_arguments396[1]!==undefined?_arguments396[1]:{};return _this408.privatePostCancelOrder(_this408.extend({'orderNumber':id},params));},request:function request(path){var api,method,params,headers,body,url,query,nonce,auth,response,_this409=this,_arguments397=arguments;return Promise.resolve().then(function(){api=_arguments397.length>1&&_arguments397[1]!==undefined?_arguments397[1]:'public';method=_arguments397.length>2&&_arguments397[2]!==undefined?_arguments397[2]:'GET';params=_arguments397.length>3&&_arguments397[3]!==undefined?_arguments397[3]:{};headers=_arguments397.length>4&&_arguments397[4]!==undefined?_arguments397[4]:undefined;body=_arguments397.length>5&&_arguments397[5]!==undefined?_arguments397[5]:undefined;url=_this409.urls['api']+'/'+_this409.version+'/'+_this409.implodeParams(path,params);query=_this409.omit(params,_this409.extractParams(path));if(api=='public'){if(Object.keys(query).length){url+='?'+_this409.urlencode(query);}}else{body=_this409.json(params);nonce=_this409.nonce().toString();auth=nonce+url+body;headers={'Api-Key':_this409.apiKey,'Api-Signature':_this409.hmac(_this409.encode(auth),_this409.secret),'Api-Nonce':nonce,'Content-Type':'application/json'};}return _this409.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('errors'in response){throw new ExchangeError(_this409.id+' '+_this409.json(response));}return response;});}};//-----------------------------------------------------------------------------
var poloniex={'id':'poloniex','name':'Poloniex','countries':'US','rateLimit':500,// 6 calls per second
'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg','api':{'public':'https://poloniex.com/public','private':'https://poloniex.com/tradingApi'},'www':'https://poloniex.com','doc':['https://poloniex.com/support/api/','http://pastebin.com/dMX7mZE0']},'api':{'public':{'get':['return24hVolume','returnChartData','returnCurrencies','returnLoanOrders','returnOrderBook','returnTicker','returnTradeHistory']},'private':{'post':['buy','cancelLoanOffer','cancelOrder','closeMarginPosition','createLoanOffer','generateNewAddress','getMarginPosition','marginBuy','marginSell','moveOrder','returnActiveLoans','returnAvailableAccountBalances','returnBalances','returnCompleteBalances','returnDepositAddresses','returnDepositsWithdrawals','returnFeeInfo','returnLendingHistory','returnMarginAccountSummary','returnOpenLoanOffers','returnOpenOrders','returnOrderTrades','returnTradableBalances','returnTradeHistory','sell','toggleAutoRenew','transferBalance','withdraw']}},fetchMarkets:function fetchMarkets(){var markets,keys,result,p,id,market,_id$split7,_id$split8,quote,base,symbol,_this410=this;return Promise.resolve().then(function(){return _this410.publicGetReturnTicker();}).then(function(_resp){markets=_resp;keys=Object.keys(markets);result=[];for(p=0;p<keys.length;p++){id=keys[p];market=markets[id];_id$split7=id.split('_');_id$split8=_slicedToArray(_id$split7,2);quote=_id$split8[0];base=_id$split8[1];symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balances,result,currencies,c,currency,balance,account,_this411=this;return Promise.resolve().then(function(){return _this411.loadMarkets();}).then(function(){return _this411.privatePostReturnCompleteBalances({'account':'all'});}).then(function(_resp){balances=_resp;result={'info':balances};currencies=Object.keys(balances);for(c=0;c<currencies.length;c++){currency=currencies[c];balance=balances[currency];account={'free':parseFloat(balance['available']),'used':parseFloat(balance['onOrders']),'total':undefined};account['total']=_this411.sum(account['free'],account['used']);result[currency]=account;}return result;});},parseBidAsk:function parseBidAsk(bidask){var price=parseFloat(bidask[0]);var amount=parseFloat(bidask[1]);return[price,amount];},parseBidAsks:function parseBidAsks(bidasks){var result=[];for(var i=0;i<bidasks.length;i++){result.push(this.parseBidAsk(bidasks[i]));}return result;},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,_this412=this,_arguments400=arguments;return Promise.resolve().then(function(){params=_arguments400.length>1&&_arguments400[1]!==undefined?_arguments400[1]:{};return _this412.loadMarkets();}).then(function(){return _this412.publicGetReturnOrderBook(_this412.extend({'currencyPair':_this412.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this412.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this412.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];result[side]=_this412.parseBidAsks(orderbook[side]);}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high24hr']),'low':parseFloat(ticker['low24hr']),'bid':parseFloat(ticker['highestBid']),'ask':parseFloat(ticker['lowestAsk']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':parseFloat(ticker['percentChange']),'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['baseVolume']),'quoteVolume':parseFloat(ticker['quoteVolume']),'info':ticker};},fetchTickers:function fetchTickers(){var tickers,ids,result,i,id,market,symbol,ticker,_this413=this;return Promise.resolve().then(function(){return _this413.loadMarkets();}).then(function(){return _this413.publicGetReturnTicker();}).then(function(_resp){tickers=_resp;ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this413.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this413.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var m,tickers,ticker,_this414=this;return Promise.resolve().then(function(){return _this414.loadMarkets();}).then(function(){m=_this414.market(market);return _this414.publicGetReturnTicker();}).then(function(_resp){tickers=_resp;ticker=tickers[m['id']];return _this414.parseTicker(ticker,m);});},fetchTrades:function fetchTrades(market){var _this415=this;return Promise.resolve().then(function(){return _this415.loadMarkets();}).then(function(){return _this415.publicGetReturnTradeHistory({'currencyPair':_this415.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,method,response,result,_this416=this,_arguments404=arguments;return Promise.resolve().then(function(){price=_arguments404.length>4&&_arguments404[4]!==undefined?_arguments404[4]:undefined;params=_arguments404.length>5&&_arguments404[5]!==undefined?_arguments404[5]:{};return _this416.loadMarkets();}).then(function(){method='privatePost'+_this416.capitalize(side);return _this416[method](_this416.extend({'currencyPair':_this416.marketId(market),'rate':price,'amount':amount},params));}).then(function(_resp){response=_resp;result={'info':response,'id':response['orderNumber']};return result;});},cancelOrder:function cancelOrder(id){var params,_this417=this,_arguments405=arguments;return Promise.resolve().then(function(){params=_arguments405.length>1&&_arguments405[1]!==undefined?_arguments405[1]:{};return _this417.loadMarkets();}).then(function(){return _this417.privatePostCancelOrder(_this417.extend({'orderNumber':id},params));});},request:function request(path){var api,method,params,headers,body,url,query,response,_this418=this,_arguments406=arguments;return Promise.resolve().then(function(){api=_arguments406.length>1&&_arguments406[1]!==undefined?_arguments406[1]:'public';method=_arguments406.length>2&&_arguments406[2]!==undefined?_arguments406[2]:'GET';params=_arguments406.length>3&&_arguments406[3]!==undefined?_arguments406[3]:{};headers=_arguments406.length>4&&_arguments406[4]!==undefined?_arguments406[4]:undefined;body=_arguments406.length>5&&_arguments406[5]!==undefined?_arguments406[5]:undefined;url=_this418.urls['api'][api];query=_this418.extend({'command':path},params);if(api=='public'){url+='?'+_this418.urlencode(query);}else{query['nonce']=_this418.nonce();body=_this418.urlencode(query);headers={'Content-Type':'application/x-www-form-urlencoded','Key':_this418.apiKey,'Sign':_this418.hmac(_this418.encode(body),_this418.encode(_this418.secret),'sha512')};}return _this418.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this418.id+' '+_this418.json(response));}return response;});}};//-----------------------------------------------------------------------------
var quadrigacx={'id':'quadrigacx','name':'QuadrigaCX','countries':'CA','rateLimit':1000,'version':'v2','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766825-98a6d0de-5ee7-11e7-9fa4-38e11a2c6f52.jpg','api':'https://api.quadrigacx.com','www':'https://www.quadrigacx.com','doc':'https://www.quadrigacx.com/api_info'},'api':{'public':{'get':['order_book','ticker','transactions']},'private':{'post':['balance','bitcoin_deposit_address','bitcoin_withdrawal','buy','cancel_order','ether_deposit_address','ether_withdrawal','lookup_order','open_orders','sell','user_transactions']}},'markets':{'BTC/CAD':{'id':'btc_cad','symbol':'BTC/CAD','base':'BTC','quote':'CAD'},'BTC/USD':{'id':'btc_usd','symbol':'BTC/USD','base':'BTC','quote':'USD'},'ETH/BTC':{'id':'eth_btc','symbol':'ETH/BTC','base':'ETH','quote':'BTC'},'ETH/CAD':{'id':'eth_cad','symbol':'ETH/CAD','base':'ETH','quote':'CAD'}},fetchBalance:function fetchBalance(){var balances,result,c,currency,lowercase,account,_this419=this;return Promise.resolve().then(function(){return _this419.privatePostBalance();}).then(function(_resp){balances=_resp;result={'info':balances};for(c=0;c<_this419.currencies.length;c++){currency=_this419.currencies[c];lowercase=currency.toLowerCase();account={'free':parseFloat(balances[lowercase+'_available']),'used':parseFloat(balances[lowercase+'_reserved']),'total':parseFloat(balances[lowercase+'_balance'])};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this420=this,_arguments408=arguments;return Promise.resolve().then(function(){params=_arguments408.length>1&&_arguments408[1]!==undefined?_arguments408[1]:{};return _this420.publicGetOrderBook(_this420.extend({'book':_this420.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=parseInt(orderbook['timestamp'])*1000;result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this420.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this421=this;return Promise.resolve().then(function(){return _this421.publicGetTicker({'book':_this421.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=parseInt(ticker['timestamp'])*1000;return{'timestamp':timestamp,'datetime':_this421.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':parseFloat(ticker['vwap']),'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['volume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this422=this;return _this422.publicGetTransactions({'book':_this422.marketId(market)});},createOrder:function createOrder(market,type,side,amount){var price,params,method,order,_this423=this,_arguments411=arguments;price=_arguments411.length>4&&_arguments411[4]!==undefined?_arguments411[4]:undefined;params=_arguments411.length>5&&_arguments411[5]!==undefined?_arguments411[5]:{};method='privatePost'+_this423.capitalize(side);order={'amount':amount,'book':_this423.marketId(market)};if(type=='limit'){order['price']=price;}return _this423[method](_this423.extend(order,params));},cancelOrder:function cancelOrder(id){var params,_this424=this,_arguments412=arguments;params=_arguments412.length>1&&_arguments412[1]!==undefined?_arguments412[1]:{};return _this424.privatePostCancelOrder(_this424.extend({'id':id},params));},request:function request(path){var api,method,params,headers,body,url,nonce,request,signature,query,response,_this425=this,_arguments413=arguments;return Promise.resolve().then(function(){api=_arguments413.length>1&&_arguments413[1]!==undefined?_arguments413[1]:'public';method=_arguments413.length>2&&_arguments413[2]!==undefined?_arguments413[2]:'GET';params=_arguments413.length>3&&_arguments413[3]!==undefined?_arguments413[3]:{};headers=_arguments413.length>4&&_arguments413[4]!==undefined?_arguments413[4]:undefined;body=_arguments413.length>5&&_arguments413[5]!==undefined?_arguments413[5]:undefined;url=_this425.urls['api']+'/'+_this425.version+'/'+path;if(api=='public'){url+='?'+_this425.urlencode(params);}else{if(!_this425.uid){throw new AuthenticationError(_this425.id+' requires `'+_this425.id+'.uid` property for authentication');}nonce=_this425.nonce();request=[nonce.toString(),_this425.uid,_this425.apiKey].join('');signature=_this425.hmac(_this425.encode(request),_this425.encode(_this425.secret));query=_this425.extend({'key':_this425.apiKey,'nonce':nonce,'signature':signature},params);body=_this425.json(query);headers={'Content-Type':'application/json','Content-Length':body.length};}return _this425.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this425.id+' '+_this425.json(response));}return response;});}};//-----------------------------------------------------------------------------
var quoine={'id':'quoine','name':'QUOINE','countries':['JP','SG','VN'],'version':'2','rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766844-9615a4e8-5ee8-11e7-8814-fcd004db8cdd.jpg','api':'https://api.quoine.com','www':'https://www.quoine.com','doc':'https://developers.quoine.com'},'api':{'public':{'get':['products','products/{id}','products/{id}/price_levels','executions','ir_ladders/{currency}']},'private':{'get':['accounts/balance','crypto_accounts','executions/me','fiat_accounts','loan_bids','loans','orders','orders/{id}','orders/{id}/trades','trades','trades/{id}/loans','trading_accounts','trading_accounts/{id}'],'post':['fiat_accounts','loan_bids','orders'],'put':['loan_bids/{id}/close','loans/{id}','orders/{id}','orders/{id}/cancel','trades/{id}','trades/{id}/close','trades/close_all','trading_accounts/{id}']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,symbol,_this426=this;return Promise.resolve().then(function(){return _this426.publicGetProducts();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['id'];base=market['base_currency'];quote=market['quoted_currency'];symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balances,result,b,balance,currency,total,account,_this427=this;return Promise.resolve().then(function(){return _this427.loadMarkets();}).then(function(){return _this427.privateGetAccountsBalance();}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];total=parseFloat(balance['balance']);account={'free':total,'used':undefined,'total':total};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this428=this,_arguments416=arguments;return Promise.resolve().then(function(){params=_arguments416.length>1&&_arguments416[1]!==undefined?_arguments416[1]:{};return _this428.loadMarkets();}).then(function(){return _this428.publicGetProductsIdPriceLevels(_this428.extend({'id':_this428.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this428.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this428.iso8601(timestamp)};sides={'bids':'buy_price_levels','asks':'sell_price_levels'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[key].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high_market_ask']),'low':parseFloat(ticker['low_market_bid']),'bid':parseFloat(ticker['market_bid']),'ask':parseFloat(ticker['market_ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last_traded_price']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['volume_24h']),'quoteVolume':undefined,'info':ticker};},fetchTickers:function fetchTickers(){var tickers,result,t,ticker,base,quote,symbol,market,_this429=this;return Promise.resolve().then(function(){return _this429.loadMarkets();}).then(function(){return _this429.publicGetProducts();}).then(function(_resp){tickers=_resp;result={};for(t=0;t<tickers.length;t++){ticker=tickers[t];base=ticker['base_currency'];quote=ticker['quoted_currency'];symbol=base+'/'+quote;market=_this429.markets[symbol];result[symbol]=_this429.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this430=this;return Promise.resolve().then(function(){return _this430.loadMarkets();}).then(function(){p=_this430.market(market);return _this430.publicGetProductsId({'id':p['id']});}).then(function(_resp){ticker=_resp;return _this430.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this431=this;return Promise.resolve().then(function(){return _this431.loadMarkets();}).then(function(){return _this431.publicGetExecutions({'market_id':_this431.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,_this432=this,_arguments420=arguments;return Promise.resolve().then(function(){price=_arguments420.length>4&&_arguments420[4]!==undefined?_arguments420[4]:undefined;params=_arguments420.length>5&&_arguments420[5]!==undefined?_arguments420[5]:{};return _this432.loadMarkets();}).then(function(){order={'order_type':type,'product_id':_this432.marketId(market),'side':side,'quantity':amount};if(type=='limit'){order['price']=price;}return _this432.privatePostOrders(_this432.extend({'order':order},params));});},cancelOrder:function cancelOrder(id){var params,_this433=this,_arguments421=arguments;return Promise.resolve().then(function(){params=_arguments421.length>1&&_arguments421[1]!==undefined?_arguments421[1]:{};return _this433.loadMarkets();}).then(function(){return _this433.privatePutOrdersIdCancel(_this433.extend({'id':id},params));});},request:function request(path){var api,method,params,headers,body,url,query,nonce,request,response,_this434=this,_arguments422=arguments;return Promise.resolve().then(function(){api=_arguments422.length>1&&_arguments422[1]!==undefined?_arguments422[1]:'public';method=_arguments422.length>2&&_arguments422[2]!==undefined?_arguments422[2]:'GET';params=_arguments422.length>3&&_arguments422[3]!==undefined?_arguments422[3]:{};headers=_arguments422.length>4&&_arguments422[4]!==undefined?_arguments422[4]:undefined;body=_arguments422.length>5&&_arguments422[5]!==undefined?_arguments422[5]:undefined;url='/'+_this434.implodeParams(path,params);query=_this434.omit(params,_this434.extractParams(path));headers={'X-Quoine-API-Version':_this434.version,'Content-Type':'application/json'};if(api=='public'){if(Object.keys(query).length){url+='?'+_this434.urlencode(query);}}else{nonce=_this434.nonce();request={'path':url,'nonce':nonce,'token_id':_this434.apiKey,'iat':Math.floor(nonce/1000)// issued at
};if(Object.keys(query).length){body=_this434.json(query);}headers['X-Quoine-Auth']=_this434.jwt(request,_this434.secret);}return _this434.fetch(_this434.urls['api']+url,method,headers,body);}).then(function(_resp){response=_resp;if('message'in response){throw new ExchangeError(_this434.id+' '+_this434.json(response));}return response;});}};//-----------------------------------------------------------------------------
var southxchange={'id':'southxchange','name':'SouthXchange','countries':'AR',// Argentina
'rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27838912-4f94ec8a-60f6-11e7-9e5d-bbf9bd50a559.jpg','api':'https://www.southxchange.com/api','www':'https://www.southxchange.com','doc':'https://www.southxchange.com/Home/Api'},'api':{'public':{'get':['markets','price/{symbol}','prices','book/{symbol}','trades/{symbol}']},'private':{'post':['cancelMarketOrders','cancelOrder','generatenewaddress','listOrders','listBalances','placeOrder','withdraw']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,base,quote,symbol,id,_this435=this;return Promise.resolve().then(function(){return _this435.publicGetMarkets();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];base=market[0];quote=market[1];symbol=base+'/'+quote;id=symbol;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balances,result,b,balance,currency,uppercase,free,used,total,account,_this436=this;return Promise.resolve().then(function(){return _this436.loadMarkets();}).then(function(){return _this436.privatePostListBalances();}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['Currency'];uppercase=currency.uppercase;free=parseFloat(balance['Available']);used=parseFloat(balance['Unconfirmed']);total=_this436.sum(free,used);account={'free':free,'used':used,'total':total};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this437=this,_arguments425=arguments;return Promise.resolve().then(function(){params=_arguments425.length>1&&_arguments425[1]!==undefined?_arguments425[1]:{};return _this437.loadMarkets();}).then(function(){return _this437.publicGetBookSymbol(_this437.extend({'symbol':_this437.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this437.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this437.iso8601(timestamp)};sides={'bids':'BuyOrders','asks':'SellOrders'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['Price']);amount=parseFloat(order['Amount']);result[key].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':undefined,'low':undefined,'bid':parseFloat(ticker['Bid']),'ask':parseFloat(ticker['Ask']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['Last']),'change':parseFloat(ticker['Variation24Hr']),'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['Volume24Hr']),'info':ticker};},fetchTickers:function fetchTickers(){var response,tickers,ids,result,i,id,market,symbol,ticker,_this438=this;return Promise.resolve().then(function(){return _this438.loadMarkets();}).then(function(){return _this438.publicGetPrices();}).then(function(_resp){response=_resp;tickers=_this438.indexBy(response,'Market');ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this438.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this438.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this439=this;return Promise.resolve().then(function(){return _this439.loadMarkets();}).then(function(){p=_this439.market(market);return _this439.publicGetPriceSymbol({'symbol':_this439.marketId(market)});}).then(function(_resp){ticker=_resp;return _this439.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this440=this;return Promise.resolve().then(function(){return _this440.loadMarkets();}).then(function(){return _this440.publicGetTradesSymbol({'symbol':_this440.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,p,order,_this441=this,_arguments429=arguments;return Promise.resolve().then(function(){price=_arguments429.length>4&&_arguments429[4]!==undefined?_arguments429[4]:undefined;params=_arguments429.length>5&&_arguments429[5]!==undefined?_arguments429[5]:{};return _this441.loadMarkets();}).then(function(){p=_this441.market(market);order={'listingCurrency':p['base'],'referenceCurrency':p['quote'],'type':side,'amount':amount};if(type=='limit'){order['limitPrice']=price;}return _this441.privatePostPlaceOrder(_this441.extend(order,params));});},cancelOrder:function cancelOrder(id){var params,_this442=this,_arguments430=arguments;return Promise.resolve().then(function(){params=_arguments430.length>1&&_arguments430[1]!==undefined?_arguments430[1]:{};return _this442.loadMarkets();}).then(function(){return _this442.privatePostCancelOrder(_this442.extend({'orderCode':id},params));});},request:function request(path){var api,method,params,headers,body,url,query,nonce,response,_this443=this,_arguments431=arguments;return Promise.resolve().then(function(){api=_arguments431.length>1&&_arguments431[1]!==undefined?_arguments431[1]:'public';method=_arguments431.length>2&&_arguments431[2]!==undefined?_arguments431[2]:'GET';params=_arguments431.length>3&&_arguments431[3]!==undefined?_arguments431[3]:{};headers=_arguments431.length>4&&_arguments431[4]!==undefined?_arguments431[4]:undefined;body=_arguments431.length>5&&_arguments431[5]!==undefined?_arguments431[5]:undefined;url=_this443.urls['api']+'/'+_this443.implodeParams(path,params);query=_this443.omit(params,_this443.extractParams(path));if(api=='private'){nonce=_this443.nonce();query=_this443.extend({'key':_this443.apiKey,'nonce':nonce},query);body=_this443.json(query);headers={'Content-Type':'application/json','Hash':_this443.hmac(_this443.encode(body),_this443.encode(_this443.secret),'sha512')};}return _this443.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if(!response){throw new ExchangeError(_this443.id+' '+_this443.json(response));}return response;});}};//-----------------------------------------------------------------------------
var surbitcoin=extend(blinktrade,{'id':'surbitcoin','name':'SurBitcoin','countries':'VE','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27991511-f0a50194-6481-11e7-99b5-8f02932424cc.jpg','api':{'public':'https://api.blinktrade.com/api','private':'https://api.blinktrade.com/tapi'},'www':'https://surbitcoin.com','doc':'https://blinktrade.com/docs'},'comment':'Blinktrade API','markets':{'BTC/VEF':{'id':'BTCVEF','symbol':'BTC/VEF','base':'BTC','quote':'VEF','brokerId':1,'broker':'SurBitcoin'}}});//-----------------------------------------------------------------------------
var therock={'id':'therock','name':'TheRockTrading','countries':'MT','rateLimit':1000,'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg','api':'https://api.therocktrading.com','www':'https://therocktrading.com','doc':['https://api.therocktrading.com/doc/v1/index.html','https://api.therocktrading.com/doc/']},'api':{'public':{'get':['funds/{id}/orderbook','funds/{id}/ticker','funds/{id}/trades','funds/tickers']},'private':{'get':['balances','balances/{id}','discounts','discounts/{id}','funds','funds/{id}','funds/{id}/trades','funds/{fund_id}/orders','funds/{fund_id}/orders/{id}','funds/{fund_id}/position_balances','funds/{fund_id}/positions','funds/{fund_id}/positions/{id}','transactions','transactions/{id}','withdraw_limits/{id}','withdraw_limits'],'post':['atms/withdraw','funds/{fund_id}/orders'],'delete':['funds/{fund_id}/orders/{id}','funds/{fund_id}/orders/remove_all']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,symbol,_this444=this;return Promise.resolve().then(function(){return _this444.publicGetFundsTickers();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets['tickers'].length;p++){market=markets['tickers'][p];id=market['fund_id'];base=id.slice(0,3);quote=id.slice(3,6);symbol=base+'/'+quote;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,free,total,used,account,_this445=this;return Promise.resolve().then(function(){return _this445.loadMarkets();}).then(function(){return _this445.privateGetBalances();}).then(function(_resp){response=_resp;balances=response['balances'];result={'info':response};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];free=balance['trading_balance'];total=balance['balance'];used=total-free;account={'free':free,'used':used,'total':total};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this446=this,_arguments434=arguments;return Promise.resolve().then(function(){params=_arguments434.length>1&&_arguments434[1]!==undefined?_arguments434[1]:{};return _this446.loadMarkets();}).then(function(){return _this446.publicGetFundsIdOrderbook(_this446.extend({'id':_this446.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this446.parse8601(orderbook['date']);result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this446.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['amount']);result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=this.parse8601(ticker['date']);return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['bid']),'ask':parseFloat(ticker['ask']),'vwap':undefined,'open':parseFloat(ticker['open']),'close':parseFloat(ticker['close']),'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['volume_traded']),'quoteVolume':parseFloat(ticker['volume']),'info':ticker};},fetchTickers:function fetchTickers(){var response,tickers,ids,result,i,id,market,symbol,ticker,_this447=this;return Promise.resolve().then(function(){return _this447.loadMarkets();}).then(function(){return _this447.publicGetFundsTickers();}).then(function(_resp){response=_resp;tickers=_this447.indexBy(response['tickers'],'fund_id');ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this447.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this447.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,ticker,_this448=this;return Promise.resolve().then(function(){return _this448.loadMarkets();}).then(function(){p=_this448.market(market);return _this448.publicGetFundsIdTicker({'id':p['id']});}).then(function(_resp){ticker=_resp;return _this448.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this449=this;return Promise.resolve().then(function(){return _this449.loadMarkets();}).then(function(){return _this449.publicGetFundsIdTrades({'id':_this449.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,_this450=this,_arguments438=arguments;return Promise.resolve().then(function(){price=_arguments438.length>4&&_arguments438[4]!==undefined?_arguments438[4]:undefined;params=_arguments438.length>5&&_arguments438[5]!==undefined?_arguments438[5]:{};return _this450.loadMarkets();}).then(function(){if(type=='market'){throw new ExchangeError(_this450.id+' allows limit orders only');}return _this450.privatePostFundsFundIdOrders(_this450.extend({'fund_id':_this450.marketId(market),'side':side,'amount':amount,'price':price},params));});},cancelOrder:function cancelOrder(id){var params,_this451=this,_arguments439=arguments;return Promise.resolve().then(function(){params=_arguments439.length>1&&_arguments439[1]!==undefined?_arguments439[1]:{};return _this451.loadMarkets();}).then(function(){return _this451.privateDeleteFundsFundIdOrdersId(_this451.extend({'id':id},params));});},request:function request(path){var api,method,params,headers,body,url,query,nonce,auth,response,_this452=this,_arguments440=arguments;return Promise.resolve().then(function(){api=_arguments440.length>1&&_arguments440[1]!==undefined?_arguments440[1]:'public';method=_arguments440.length>2&&_arguments440[2]!==undefined?_arguments440[2]:'GET';params=_arguments440.length>3&&_arguments440[3]!==undefined?_arguments440[3]:{};headers=_arguments440.length>4&&_arguments440[4]!==undefined?_arguments440[4]:undefined;body=_arguments440.length>5&&_arguments440[5]!==undefined?_arguments440[5]:undefined;url=_this452.urls['api']+'/'+_this452.version+'/'+_this452.implodeParams(path,params);query=_this452.omit(params,_this452.extractParams(path));if(api=='private'){nonce=_this452.nonce().toString();auth=nonce+url;headers={'X-TRT-KEY':_this452.apiKey,'X-TRT-NONCE':nonce,'X-TRT-SIGN':_this452.hmac(_this452.encode(auth),_this452.encode(_this452.secret),'sha512')};if(Object.keys(query).length){body=_this452.json(query);headers['Content-Type']='application/json';}}return _this452.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('errors'in response){throw new ExchangeError(_this452.id+' '+_this452.json(response));}return response;});}};//-----------------------------------------------------------------------------
var urdubit=extend(blinktrade,{'id':'urdubit','name':'UrduBit','countries':'PK','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27991453-156bf3ae-6480-11e7-82eb-7295fe1b5bb4.jpg','api':{'public':'https://api.blinktrade.com/api','private':'https://api.blinktrade.com/tapi'},'www':'https://urdubit.com','doc':'https://blinktrade.com/docs'},'comment':'Blinktrade API','markets':{'BTC/PKR':{'id':'BTCPKR','symbol':'BTC/PKR','base':'BTC','quote':'PKR','brokerId':8,'broker':'UrduBit'}}});//-----------------------------------------------------------------------------
var vaultoro={'id':'vaultoro','name':'Vaultoro','countries':'CH','rateLimit':1000,'version':'1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766880-f205e870-5ee9-11e7-8fe2-0d5b15880752.jpg','api':'https://api.vaultoro.com','www':'https://www.vaultoro.com','doc':'https://api.vaultoro.com'},'api':{'public':{'get':['bidandask','buyorders','latest','latesttrades','markets','orderbook','sellorders','transactions/day','transactions/hour','transactions/month']},'private':{'get':['balance','mytrades','orders'],'post':['buy/{symbol}/{type}','cancel/{id}','sell/{symbol}/{type}','withdraw']}},fetchMarkets:function fetchMarkets(){var result,markets,market,base,quote,symbol,baseId,quoteId,id,_this453=this;return Promise.resolve().then(function(){result=[];return _this453.publicGetMarkets();}).then(function(_resp){markets=_resp;market=markets['data'];base=market['BaseCurrency'];quote=market['MarketCurrency'];symbol=base+'/'+quote;baseId=base;quoteId=quote;id=market['MarketName'];result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'baseId':baseId,'quoteId':quoteId,'info':market});return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,uppercase,free,used,total,account,_this454=this;return Promise.resolve().then(function(){return _this454.loadMarkets();}).then(function(){return _this454.privateGetBalance();}).then(function(_resp){response=_resp;balances=response['data'];result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency_code'];uppercase=currency.toUpperCase();free=balance['cash'];used=balance['reserved'];total=_this454.sum(free,used);account={'free':free,'used':used,'total':total};result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this455=this,_arguments443=arguments;return Promise.resolve().then(function(){params=_arguments443.length>1&&_arguments443[1]!==undefined?_arguments443[1]:{};return _this455.loadMarkets();}).then(function(){return _this455.publicGetOrderbook(params);}).then(function(_resp){response=_resp;orderbook={'bids':response['data'][0]['b'],'asks':response['data'][1]['s']};timestamp=_this455.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this455.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=order['Gold_Price'];amount=order['Gold_Amount'];result[side].push([price,amount]);}}result['bids']=_this455.sortBy(result['bids'],0,true);return result;});},fetchTicker:function fetchTicker(market){var quote,bidsLength,bid,ask,response,ticker,timestamp,_this456=this;return Promise.resolve().then(function(){return _this456.loadMarkets();}).then(function(){return _this456.publicGetBidandask();}).then(function(_resp){quote=_resp;bidsLength=quote['bids'].length;bid=quote['bids'][bidsLength-1];ask=quote['asks'][0];return _this456.publicGetMarkets();}).then(function(_resp){response=_resp;ticker=response['data'];timestamp=_this456.milliseconds();return{'timestamp':timestamp,'datetime':_this456.iso8601(timestamp),'high':parseFloat(ticker['24hHigh']),'low':parseFloat(ticker['24hLow']),'bid':bid[0],'ask':ask[0],'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['LastPrice']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['24hVolume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this457=this;return Promise.resolve().then(function(){return _this457.loadMarkets();}).then(function(){return _this457.publicGetTransactionsDay();});},createOrder:function createOrder(market,type,side,amount){var price,params,p,method,_this458=this,_arguments446=arguments;return Promise.resolve().then(function(){price=_arguments446.length>4&&_arguments446[4]!==undefined?_arguments446[4]:undefined;params=_arguments446.length>5&&_arguments446[5]!==undefined?_arguments446[5]:{};return _this458.loadMarkets();}).then(function(){p=_this458.market(market);method='privatePost'+_this458.capitalize(side)+'SymbolType';return _this458[method](_this458.extend({'symbol':p['quoteId'].toLowerCase(),'type':type,'gld':amount,'price':price||1},params));});},cancelOrder:function cancelOrder(id){var params,_this459=this,_arguments447=arguments;return Promise.resolve().then(function(){params=_arguments447.length>1&&_arguments447[1]!==undefined?_arguments447[1]:{};return _this459.loadMarkets();}).then(function(){return _this459.privatePostCancelId(_this459.extend({'id':id},params));});},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'public';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;var url=this.urls['api']+'/';if(api=='public'){url+=path;}else{var nonce=this.nonce();url+=this.version+'/'+this.implodeParams(path,params);var query=this.extend({'nonce':nonce,'apikey':this.apiKey},this.omit(params,this.extractParams(path)));url+='?'+this.urlencode(query);headers={'Content-Type':'application/json','X-Signature':this.hmac(this.encode(url),this.encode(this.secret))};}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var vbtc=extend(blinktrade,{'id':'vbtc','name':'VBTC','countries':'VN','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27991481-1f53d1d8-6481-11e7-884e-21d17e7939db.jpg','api':{'public':'https://api.blinktrade.com/api','private':'https://api.blinktrade.com/tapi'},'www':'https://vbtc.exchange','doc':'https://blinktrade.com/docs'},'comment':'Blinktrade API','markets':{'BTC/VND':{'id':'BTCVND','symbol':'BTC/VND','base':'BTC','quote':'VND','brokerId':3,'broker':'VBTC'}}});//-----------------------------------------------------------------------------
var virwox={'id':'virwox','name':'VirWoX','countries':'AT','rateLimit':1000,'urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766894-6da9d360-5eea-11e7-90aa-41f2711b7405.jpg','api':{'public':'http://api.virwox.com/api/json.php','private':'https://www.virwox.com/api/trading.php'},'www':'https://www.virwox.com','doc':'https://www.virwox.com/developers.php'},'api':{'public':{'get':['getInstruments','getBestPrices','getMarketDepth','estimateMarketOrder','getTradedPriceVolume','getRawTradeData','getStatistics','getTerminalList','getGridList','getGridStatistics'],'post':['getInstruments','getBestPrices','getMarketDepth','estimateMarketOrder','getTradedPriceVolume','getRawTradeData','getStatistics','getTerminalList','getGridList','getGridStatistics']},'private':{'get':['cancelOrder','getBalances','getCommissionDiscount','getOrders','getTransactions','placeOrder'],'post':['cancelOrder','getBalances','getCommissionDiscount','getOrders','getTransactions','placeOrder']}},fetchMarkets:function fetchMarkets(){var markets,keys,result,p,market,id,symbol,base,quote,_this460=this;return Promise.resolve().then(function(){return _this460.publicGetInstruments();}).then(function(_resp){markets=_resp;keys=Object.keys(markets['result']);result=[];for(p=0;p<keys.length;p++){market=markets['result'][keys[p]];id=market['instrumentID'];symbol=market['symbol'];base=market['longCurrency'];quote=market['shortCurrency'];result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,total,account,_this461=this;return Promise.resolve().then(function(){return _this461.loadMarkets();}).then(function(){return _this461.privatePostGetBalances();}).then(function(_resp){response=_resp;balances=response['result']['accountList'];result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];total=balance['balance'];account={'free':total,'used':undefined,'total':total};result[currency]=account;}return result;});},fetchBestPrices:function fetchBestPrices(market){var _this462=this;return Promise.resolve().then(function(){return _this462.loadMarkets();}).then(function(){return _this462.publicPostGetBestPrices({'symbols':[_this462.symbol(market)]});});},fetchOrderBook:function fetchOrderBook(market){var params,response,orderbook,timestamp,result,sides,keys,k,key,side,orders,i,order,price,amount,_this463=this,_arguments451=arguments;return Promise.resolve().then(function(){params=_arguments451.length>1&&_arguments451[1]!==undefined?_arguments451[1]:{};return _this463.loadMarkets();}).then(function(){return _this463.publicPostGetMarketDepth(_this463.extend({'symbols':[_this463.symbol(market)],'buyDepth':100,'sellDepth':100},params));}).then(function(_resp){response=_resp;orderbook=response['result'][0];timestamp=_this463.milliseconds();result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this463.iso8601(timestamp)};sides={'bids':'buy','asks':'sell'};keys=Object.keys(sides);for(k=0;k<keys.length;k++){key=keys[k];side=sides[key];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['price']);amount=parseFloat(order['volume']);result[key].push([price,amount]);}}return result;});},fetchTicker:function fetchTicker(market){var end,start,response,tickers,keys,length,lastKey,ticker,timestamp,_this464=this;return Promise.resolve().then(function(){return _this464.loadMarkets();}).then(function(){end=_this464.milliseconds();start=end-86400000;return _this464.publicGetTradedPriceVolume({'instrument':_this464.symbol(market),'endDate':_this464.yyyymmddhhmmss(end),'startDate':_this464.yyyymmddhhmmss(start),'HLOC':1});}).then(function(_resp){response=_resp;tickers=response['result']['priceVolumeList'];keys=Object.keys(tickers);length=keys.length;lastKey=keys[length-1];ticker=tickers[lastKey];timestamp=_this464.milliseconds();return{'timestamp':timestamp,'datetime':_this464.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':undefined,'ask':undefined,'vwap':undefined,'open':parseFloat(ticker['open']),'close':parseFloat(ticker['close']),'first':undefined,'last':undefined,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':parseFloat(ticker['longVolume']),'quoteVolume':parseFloat(ticker['shortVolume']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this465=this;return Promise.resolve().then(function(){return _this465.loadMarkets();}).then(function(){return _this465.publicGetRawTradeData({'instrument':_this465.symbol(market),'timespan':3600});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,_this466=this,_arguments454=arguments;return Promise.resolve().then(function(){price=_arguments454.length>4&&_arguments454[4]!==undefined?_arguments454[4]:undefined;params=_arguments454.length>5&&_arguments454[5]!==undefined?_arguments454[5]:{};return _this466.loadMarkets();}).then(function(){order={'instrument':_this466.symbol(market),'orderType':side.toUpperCase(),'amount':amount};if(type=='limit'){order['price']=price;}return _this466.privatePostPlaceOrder(_this466.extend(order,params));});},cancelOrder:function cancelOrder(id){var params,_this467=this,_arguments455=arguments;return Promise.resolve().then(function(){params=_arguments455.length>1&&_arguments455[1]!==undefined?_arguments455[1]:{};return _this467.loadMarkets();}).then(function(){return _this467.privatePostCancelOrder(_this467.extend({'orderID':id},params));});},request:function request(path){var api,method,params,headers,body,url,auth,nonce,response,_this468=this,_arguments456=arguments;return Promise.resolve().then(function(){api=_arguments456.length>1&&_arguments456[1]!==undefined?_arguments456[1]:'public';method=_arguments456.length>2&&_arguments456[2]!==undefined?_arguments456[2]:'GET';params=_arguments456.length>3&&_arguments456[3]!==undefined?_arguments456[3]:{};headers=_arguments456.length>4&&_arguments456[4]!==undefined?_arguments456[4]:undefined;body=_arguments456.length>5&&_arguments456[5]!==undefined?_arguments456[5]:undefined;url=_this468.urls['api'][api];auth={};if(api=='private'){auth['key']=_this468.apiKey;auth['user']=_this468.login;auth['pass']=_this468.password;}nonce=_this468.nonce();if(method=='GET'){url+='?'+_this468.urlencode(_this468.extend({'method':path,'id':nonce},auth,params));}else{headers={'Content-Type':'application/json'};body=_this468.json({'method':path,'params':_this468.extend(auth,params),'id':nonce});}return _this468.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){if(response['error']){throw new ExchangeError(_this468.id+' '+_this468.json(response));}}return response;});}};//-----------------------------------------------------------------------------
var xbtce={'id':'xbtce','name':'xBTCe','countries':'RU','rateLimit':2000,// responses are cached every 2 seconds
'version':'v1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/28059414-e235970c-662c-11e7-8c3a-08e31f78684b.jpg','api':'https://cryptottlivewebapi.xbtce.net:8443/api','www':'https://www.xbtce.com','doc':['https://www.xbtce.com/tradeapi','https://support.xbtce.info/Knowledgebase/Article/View/52/25/xbtce-exchange-api']},'api':{'public':{'get':['currency','currency/{filter}','level2','level2/{filter}','quotehistory/{symbol}/{periodicity}/bars/ask','quotehistory/{symbol}/{periodicity}/bars/bid','quotehistory/{symbol}/level2','quotehistory/{symbol}/ticks','symbol','symbol/{filter}','tick','tick/{filter}','ticker','ticker/{filter}','tradesession']},'private':{'get':['tradeserverinfo','tradesession','currency','currency/{filter}','level2','level2/{filter}','symbol','symbol/{filter}','tick','tick/{filter}','account','asset','asset/{id}','position','position/{id}','trade','trade/{id}','quotehistory/{symbol}/{periodicity}/bars/ask','quotehistory/{symbol}/{periodicity}/bars/ask/info','quotehistory/{symbol}/{periodicity}/bars/bid','quotehistory/{symbol}/{periodicity}/bars/bid/info','quotehistory/{symbol}/level2','quotehistory/{symbol}/level2/info','quotehistory/{symbol}/periodicities','quotehistory/{symbol}/ticks','quotehistory/{symbol}/ticks/info','quotehistory/cache/{symbol}/{periodicity}/bars/ask','quotehistory/cache/{symbol}/{periodicity}/bars/bid','quotehistory/cache/{symbol}/level2','quotehistory/cache/{symbol}/ticks','quotehistory/symbols','quotehistory/version'],'post':['trade','tradehistory'],'put':['trade'],'delete':['trade']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,base,quote,symbol,_this469=this;return Promise.resolve().then(function(){return _this469.privateGetSymbol();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['Symbol'];base=market['MarginCurrency'];quote=market['ProfitCurrency'];if(base=='DSH'){base='DASH';}symbol=base+'/'+quote;symbol=market['IsTradeAllowed']?symbol:id;result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var balances,result,b,balance,currency,uppercase,total,account,_this470=this;return Promise.resolve().then(function(){return _this470.loadMarkets();}).then(function(){return _this470.privateGetAsset();}).then(function(_resp){balances=_resp;result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['Currency'];uppercase=currency.toUpperCase();// xbtce names DASH incorrectly as DSH
if(uppercase=='DSH'){uppercase='DASH';}total=balance['balance'];account={'free':balance['FreeAmount'],'used':balance['LockedAmount'],'total':balance['Amount']};result[uppercase]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,result,sides,s,side,Side,orders,i,order,price,amount,_this471=this,_arguments459=arguments;return Promise.resolve().then(function(){params=_arguments459.length>1&&_arguments459[1]!==undefined?_arguments459[1]:{};return _this471.loadMarkets();}).then(function(){p=_this471.market(market);return _this471.privateGetLevel2Filter(_this471.extend({'filter':p['id']},params));}).then(function(_resp){orderbook=_resp;orderbook=orderbook[0];timestamp=orderbook['Timestamp'];result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this471.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];Side=_this471.capitalize(side);orders=orderbook[Side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order['Price']);amount=parseFloat(order['Volume']);result[side].push([price,amount]);}}return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=0;var last=undefined;if('LastBuyTimestamp'in ticker)if(timestamp<ticker['LastBuyTimestamp']){timestamp=ticker['LastBuyTimestamp'];last=ticker['LastBuyPrice'];}if('LastSellTimestamp'in ticker)if(timestamp<ticker['LastSellTimestamp']){timestamp=ticker['LastSellTimestamp'];last=ticker['LastSellPrice'];}if(!timestamp)timestamp=this.milliseconds();return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':ticker['DailyBestBuyPrice'],'low':ticker['DailyBestSellPrice'],'bid':ticker['BestBid'],'ask':ticker['BestAsk'],'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':last,'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':ticker['DailyTradedTotalVolume'],'info':ticker};},fetchTickers:function fetchTickers(){var tickers,ids,result,i,id,market,symbol,ticker,_this472=this;return Promise.resolve().then(function(){return _this472.loadMarkets();}).then(function(){return _this472.publicGetTicker();}).then(function(_resp){tickers=_resp;tickers=_this472.indexBy(tickers,'Symbol');ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=_this472.markets_by_id[id];symbol=market['symbol'];ticker=tickers[id];result[symbol]=_this472.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,tickers,ticker,_this473=this;return Promise.resolve().then(function(){return _this473.loadMarkets();}).then(function(){p=_this473.market(market);return _this473.publicGetTickerFilter({'filter':p['id']});}).then(function(_resp){tickers=_resp;tickers=_this473.indexBy(tickers,'Symbol');ticker=tickers[p['id']];return _this473.parseTicker(ticker,p);});},fetchTrades:function fetchTrades(market){var _this474=this;return Promise.resolve().then(function(){return _this474.loadMarkets();}).then(function(){// no method for trades?
return _this474.privateGetTrade();});},createOrder:function createOrder(market,type,side,amount){var price,params,_this475=this,_arguments463=arguments;return Promise.resolve().then(function(){price=_arguments463.length>4&&_arguments463[4]!==undefined?_arguments463[4]:undefined;params=_arguments463.length>5&&_arguments463[5]!==undefined?_arguments463[5]:{};return _this475.loadMarkets();}).then(function(){if(type=='market'){throw new ExchangeError(_this475.id+' allows limit orders only');}return _this475.tapiPostTrade(_this475.extend({'pair':_this475.marketId(market),'type':side,'amount':amount,'rate':price},params));});},cancelOrder:function cancelOrder(id){var params,_this476=this,_arguments464=arguments;return Promise.resolve().then(function(){params=_arguments464.length>1&&_arguments464[1]!==undefined?_arguments464[1]:{};return _this476.loadMarkets();}).then(function(){return _this476.privateDeleteTrade(_this476.extend({'Type':'Cancel','Id':id},params));});},nonce:function nonce(){return this.milliseconds();},request:function request(path){var api=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'api';var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'GET';var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var headers=arguments.length>4&&arguments[4]!==undefined?arguments[4]:undefined;var body=arguments.length>5&&arguments[5]!==undefined?arguments[5]:undefined;if(!this.apiKey)throw new AuthenticationError(this.id+' requires apiKey for all requests, their public API is always busy');if(!this.uid)throw new AuthenticationError(this.id+' requires uid property for authentication and trading');var url=this.urls['api']+'/'+this.version;if(api=='public')url+='/'+api;url+='/'+this.implodeParams(path,params);var query=this.omit(params,this.extractParams(path));if(api=='public'){if(Object.keys(query).length)url+='?'+this.urlencode(query);}else{headers={'Accept-Encoding':'gzip, deflate'};var nonce=this.nonce().toString();if(method=='POST'){if(Object.keys(query).length){headers['Content-Type']='application/json';body=this.json(query);}else url+='?'+this.urlencode(query);}var auth=nonce+this.uid+this.apiKey+method+url;if(body)auth+=body;var signature=this.hmac(this.encode(auth),this.encode(this.secret),'sha256','base64');var credentials=this.uid+':'+this.apiKey+':'+nonce+':'+this.binaryToString(signature);headers['Authorization']='HMAC '+credentials;}return this.fetch(url,method,headers,body);}};//-----------------------------------------------------------------------------
var yobit={'id':'yobit','name':'YoBit','countries':'RU','rateLimit':2000,// responses are cached every 2 seconds
'version':'3','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg','api':'https://yobit.net','www':'https://www.yobit.net','doc':'https://www.yobit.net/en/api/'},'api':{'api':{'get':['depth/{pairs}','info','ticker/{pairs}','trades/{pairs}']},'tapi':{'post':['ActiveOrders','CancelOrder','GetDepositAddress','getInfo','OrderInfo','Trade','TradeHistory','WithdrawCoinsToAddress']}},fetchMarkets:function fetchMarkets(){var markets,keys,result,p,id,market,symbol,_symbol$split11,_symbol$split12,base,quote,_this477=this;return Promise.resolve().then(function(){return _this477.apiGetInfo();}).then(function(_resp){markets=_resp;keys=Object.keys(markets['pairs']);result=[];for(p=0;p<keys.length;p++){id=keys[p];market=markets['pairs'][id];symbol=id.toUpperCase().replace('_','/');_symbol$split11=symbol.split('/');_symbol$split12=_slicedToArray(_symbol$split11,2);base=_symbol$split12[0];quote=_symbol$split12[1];base=_this477.commonCurrencyCode(base);quote=_this477.commonCurrencyCode(quote);result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,c,currency,lowercase,account,_this478=this;return Promise.resolve().then(function(){return _this478.loadMarkets();}).then(function(){return _this478.tapiPostGetInfo();}).then(function(_resp){response=_resp;balances=response['return'];result={'info':balances};for(c=0;c<_this478.currencies.length;c++){currency=_this478.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if('funds'in balances){if(lowercase in balances['funds']){account['free']=balances['funds'][lowercase];}}if('funds_incl_orders'in balances){if(lowercase in balances['funds_incl_orders']){account['total']=balances['funds_incl_orders'][lowercase];}}if(account['total']&&account['free']){account['used']=account['total']-account['free'];}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,response,orderbook,timestamp,bids,asks,result,_this479=this,_arguments467=arguments;return Promise.resolve().then(function(){params=_arguments467.length>1&&_arguments467[1]!==undefined?_arguments467[1]:{};return _this479.loadMarkets();}).then(function(){p=_this479.market(market);return _this479.apiGetDepthPairs(_this479.extend({'pairs':p['id']},params));}).then(function(_resp){response=_resp;orderbook=response[p['id']];timestamp=_this479.milliseconds();bids='bids'in orderbook?orderbook['bids']:[];asks='asks'in orderbook?orderbook['asks']:[];result={'bids':bids,'asks':asks,'timestamp':timestamp,'datetime':_this479.iso8601(timestamp)};return result;});},fetchTicker:function fetchTicker(market){var p,tickers,ticker,timestamp,_this480=this;return Promise.resolve().then(function(){return _this480.loadMarkets();}).then(function(){p=_this480.market(market);return _this480.apiGetTickerPairs({'pairs':p['id']});}).then(function(_resp){tickers=_resp;ticker=tickers[p['id']];timestamp=ticker['updated']*1000;return{'timestamp':timestamp,'datetime':_this480.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':parseFloat(ticker['avg']),'baseVolume':parseFloat(ticker['vol_cur']),'quoteVolume':parseFloat(ticker['vol']),'info':ticker};});},fetchTrades:function fetchTrades(market){var _this481=this;return Promise.resolve().then(function(){return _this481.loadMarkets();}).then(function(){return _this481.apiGetTradesPairs({'pairs':_this481.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,_this482=this,_arguments470=arguments;return Promise.resolve().then(function(){price=_arguments470.length>4&&_arguments470[4]!==undefined?_arguments470[4]:undefined;params=_arguments470.length>5&&_arguments470[5]!==undefined?_arguments470[5]:{};return _this482.loadMarkets();}).then(function(){if(type=='market'){throw new ExchangeError(_this482.id+' allows limit orders only');}return _this482.tapiPostTrade(_this482.extend({'pair':_this482.marketId(market),'type':side,'amount':amount,'rate':price},params));});},cancelOrder:function cancelOrder(id){var params,_this483=this,_arguments471=arguments;return Promise.resolve().then(function(){params=_arguments471.length>1&&_arguments471[1]!==undefined?_arguments471[1]:{};return _this483.loadMarkets();}).then(function(){return _this483.tapiPostCancelOrder(_this483.extend({'order_id':id},params));});},request:function request(path){var api,method,params,headers,body,url,query,nonce,_query2,response,_this484=this,_arguments472=arguments;return Promise.resolve().then(function(){api=_arguments472.length>1&&_arguments472[1]!==undefined?_arguments472[1]:'api';method=_arguments472.length>2&&_arguments472[2]!==undefined?_arguments472[2]:'GET';params=_arguments472.length>3&&_arguments472[3]!==undefined?_arguments472[3]:{};headers=_arguments472.length>4&&_arguments472[4]!==undefined?_arguments472[4]:undefined;body=_arguments472.length>5&&_arguments472[5]!==undefined?_arguments472[5]:undefined;url=_this484.urls['api']+'/'+api;if(api=='api'){url+='/'+_this484.version+'/'+_this484.implodeParams(path,params);query=_this484.omit(params,_this484.extractParams(path));if(Object.keys(query).length){url+='?'+_this484.urlencode(query);}}else{nonce=_this484.nonce();_query2=_this484.extend({'method':path,'nonce':nonce},params);body=_this484.urlencode(_query2);headers={'Content-Type':'application/x-www-form-urlencoded','key':_this484.apiKey,'sign':_this484.hmac(_this484.encode(body),_this484.encode(_this484.secret),'sha512')};}return _this484.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this484.id+' '+_this484.json(response));}return response;});}};//-----------------------------------------------------------------------------
var yunbi={'id':'yunbi','name':'YUNBI','countries':'CN','rateLimit':1000,'version':'v2','urls':{'logo':'https://user-images.githubusercontent.com/1294454/28570548-4d646c40-7147-11e7-9cf6-839b93e6d622.jpg','api':'https://yunbi.com','www':'https://yunbi.com','doc':['https://yunbi.com/documents/api/guide','https://yunbi.com/swagger/']},'api':{'public':{'get':['tickers','tickers/{market}','markets','order_book','k','depth','trades','k_with_pending_trades','timestamp','addresses/{address}','partners/orders/{id}/trades']},'private':{'get':['deposits','members/me','deposit','deposit_address','order','orders','trades/my'],'post':['order/delete','orders','orders/multi','orders/clear']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,symbol,_symbol$split13,_symbol$split14,base,quote,_this485=this;return Promise.resolve().then(function(){return _this485.publicGetMarkets();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['id'];symbol=market['name'];_symbol$split13=symbol.split('/');_symbol$split14=_slicedToArray(_symbol$split13,2);base=_symbol$split14[0];quote=_symbol$split14[1];base=_this485.commonCurrencyCode(base);quote=_this485.commonCurrencyCode(quote);result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,b,balance,currency,uppercase,account,_this486=this;return Promise.resolve().then(function(){return _this486.loadMarkets();}).then(function(){return _this486.privateGetMembersMe();}).then(function(_resp){response=_resp;balances=response['accounts'];result={'info':balances};for(b=0;b<balances.length;b++){balance=balances[b];currency=balance['currency'];uppercase=currency.toUpperCase();account={'free':parseFloat(balance['balance']),'used':parseFloat(balance['locked']),'total':undefined};account['total']=_this486.sum(account['free'],account['used']);result[uppercase]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,p,orderbook,timestamp,result,sides,s,side,orders,i,order,price,amount,_this487=this,_arguments475=arguments;return Promise.resolve().then(function(){params=_arguments475.length>1&&_arguments475[1]!==undefined?_arguments475[1]:{};return _this487.loadMarkets();}).then(function(){p=_this487.market(market);return _this487.publicGetDepth(_this487.extend({'market':p['id'],'limit':300},params));}).then(function(_resp){orderbook=_resp;timestamp=orderbook['timestamp']*1000;result={'bids':[],'asks':[],'timestamp':timestamp,'datetime':_this487.iso8601(timestamp)};sides=['bids','asks'];for(s=0;s<sides.length;s++){side=sides[s];orders=orderbook[side];for(i=0;i<orders.length;i++){order=orders[i];price=parseFloat(order[0]);amount=parseFloat(order[1]);result[side].push([price,amount]);}}result['bids']=_this487.sortBy(result['bids'],0,true);result['asks']=_this487.sortBy(result['asks'],0);return result;});},parseTicker:function parseTicker(ticker,market){var timestamp=ticker['at']*1000;ticker=ticker['ticker'];return{'timestamp':timestamp,'datetime':this.iso8601(timestamp),'high':parseFloat(ticker['high']),'low':parseFloat(ticker['low']),'bid':parseFloat(ticker['buy']),'ask':parseFloat(ticker['sell']),'vwap':undefined,'open':undefined,'close':undefined,'first':undefined,'last':parseFloat(ticker['last']),'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':parseFloat(ticker['vol']),'info':ticker};},fetchTickers:function fetchTickers(){var tickers,ids,result,i,id,market,symbol,base,quote,_symbol3,ticker,_this488=this;return Promise.resolve().then(function(){return _this488.loadMarkets();}).then(function(){return _this488.publicGetTickers();}).then(function(_resp){tickers=_resp;ids=Object.keys(tickers);result={};for(i=0;i<ids.length;i++){id=ids[i];market=undefined;symbol=id;if(id in _this488.markets_by_id){market=_this488.markets_by_id[id];symbol=market['symbol'];}else{base=id.slice(0,3);quote=id.slice(3,6);base=base.toUpperCase();quote=quote.toUpperCase();base=_this488.commonCurrencyCode(base);quote=_this488.commonCurrencyCode(quote);_symbol3=base+'/'+quote;}ticker=tickers[id];result[symbol]=_this488.parseTicker(ticker,market);}return result;});},fetchTicker:function fetchTicker(market){var p,response,_this489=this;return Promise.resolve().then(function(){return _this489.loadMarkets();}).then(function(){p=_this489.market(market);return _this489.publicGetTickersMarket({'market':p['id']});}).then(function(_resp){response=_resp;return _this489.parseTicker(response,p);});},fetchTrades:function fetchTrades(market){var _this490=this;return Promise.resolve().then(function(){return _this490.loadMarkets();}).then(function(){return _this490.publicGetTrades({'pair':_this490.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,order,_this491=this,_arguments479=arguments;return Promise.resolve().then(function(){price=_arguments479.length>4&&_arguments479[4]!==undefined?_arguments479[4]:undefined;params=_arguments479.length>5&&_arguments479[5]!==undefined?_arguments479[5]:{};return _this491.loadMarkets();}).then(function(){order={'market':_this491.marketId(market),'side':side,'volume':amount.toString(),'ord_type':type};if(type=='limit'){order['price']=price.toString();}return _this491.privatePostOrders(_this491.extend(order,params));});},cancelOrder:function cancelOrder(id){var _this492=this;return Promise.resolve().then(function(){return _this492.loadMarkets();}).then(function(){return _this492.privatePostOrderDelete({'id':id});});},request:function request(path){var api,method,params,headers,body,request,query,url,nonce,_query3,auth,signature,suffix,response,_this493=this,_arguments481=arguments;return Promise.resolve().then(function(){api=_arguments481.length>1&&_arguments481[1]!==undefined?_arguments481[1]:'public';method=_arguments481.length>2&&_arguments481[2]!==undefined?_arguments481[2]:'GET';params=_arguments481.length>3&&_arguments481[3]!==undefined?_arguments481[3]:{};headers=_arguments481.length>4&&_arguments481[4]!==undefined?_arguments481[4]:undefined;body=_arguments481.length>5&&_arguments481[5]!==undefined?_arguments481[5]:undefined;request='/api/'+_this493.version+'/'+_this493.implodeParams(path,params)+'.json';query=_this493.omit(params,_this493.extractParams(path));url=_this493.urls['api']+request;if(api=='public'){if(Object.keys(query).length){url+='?'+_this493.urlencode(query);}}else{nonce=_this493.nonce().toString();_query3=_this493.urlencode(_this493.keysort(_this493.extend({'access_key':_this493.apiKey,'tonce':nonce},params)));auth=method+'|'+request+'|'+_query3;signature=_this493.hmac(_this493.encode(auth),_this493.encode(_this493.secret));suffix=_query3+'&signature='+signature;if(method=='GET'){url+='?'+suffix;}else{body=suffix;headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length};}}return _this493.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this493.id+' '+_this493.json(response));}return response;});}};//-----------------------------------------------------------------------------
var zaif={'id':'zaif','name':'Zaif','countries':'JP','rateLimit':2000,'version':'1','urls':{'logo':'https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg','api':'https://api.zaif.jp','www':'https://zaif.jp','doc':['http://techbureau-api-document.readthedocs.io/ja/latest/index.html','https://corp.zaif.jp/api-docs','https://corp.zaif.jp/api-docs/api_links','https://www.npmjs.com/package/zaif.jp','https://github.com/you21979/node-zaif']},'api':{'api':{'get':['depth/{pair}','currencies/{pair}','currencies/all','currency_pairs/{pair}','currency_pairs/all','last_price/{pair}','ticker/{pair}','trades/{pair}']},'tapi':{'post':['active_orders','cancel_order','deposit_history','get_id_info','get_info','get_info2','get_personal_info','trade','trade_history','withdraw','withdraw_history']},'ecapi':{'post':['createInvoice','getInvoice','getInvoiceIdsByOrderNumber','cancelInvoice']}},fetchMarkets:function fetchMarkets(){var markets,result,p,market,id,symbol,_symbol$split15,_symbol$split16,base,quote,_this494=this;return Promise.resolve().then(function(){return _this494.apiGetCurrencyPairsAll();}).then(function(_resp){markets=_resp;result=[];for(p=0;p<markets.length;p++){market=markets[p];id=market['currency_pair'];symbol=market['name'];_symbol$split15=symbol.split('/');_symbol$split16=_slicedToArray(_symbol$split15,2);base=_symbol$split16[0];quote=_symbol$split16[1];result.push({'id':id,'symbol':symbol,'base':base,'quote':quote,'info':market});}return result;});},fetchBalance:function fetchBalance(){var response,balances,result,c,currency,lowercase,account,_this495=this;return Promise.resolve().then(function(){return _this495.loadMarkets();}).then(function(){return _this495.tapiPostGetInfo();}).then(function(_resp){response=_resp;balances=response['return'];result={'info':balances};for(c=0;c<_this495.currencies.length;c++){currency=_this495.currencies[c];lowercase=currency.toLowerCase();account={'free':undefined,'used':undefined,'total':undefined};if('funds'in balances){if(lowercase in balances['funds']){account['free']=balances['funds'][lowercase];}}if('funds_incl_orders'in balances){if(lowercase in balances['funds_incl_orders']){account['total']=balances['funds_incl_orders'][lowercase];}}if(account['total']&&account['free']){account['used']=account['total']-account['free'];}result[currency]=account;}return result;});},fetchOrderBook:function fetchOrderBook(market){var params,orderbook,timestamp,result,_this496=this,_arguments484=arguments;return Promise.resolve().then(function(){params=_arguments484.length>1&&_arguments484[1]!==undefined?_arguments484[1]:{};return _this496.loadMarkets();}).then(function(){return _this496.apiGetDepthPair(_this496.extend({'pair':_this496.marketId(market)},params));}).then(function(_resp){orderbook=_resp;timestamp=_this496.milliseconds();result={'bids':orderbook['bids'],'asks':orderbook['asks'],'timestamp':timestamp,'datetime':_this496.iso8601(timestamp)};return result;});},fetchTicker:function fetchTicker(market){var ticker,timestamp,_this497=this;return Promise.resolve().then(function(){return _this497.loadMarkets();}).then(function(){return _this497.apiGetTickerPair({'pair':_this497.marketId(market)});}).then(function(_resp){ticker=_resp;timestamp=_this497.milliseconds();return{'timestamp':timestamp,'datetime':_this497.iso8601(timestamp),'high':ticker['high'],'low':ticker['low'],'bid':ticker['bid'],'ask':ticker['ask'],'vwap':ticker['vwap'],'open':undefined,'close':undefined,'first':undefined,'last':ticker['last'],'change':undefined,'percentage':undefined,'average':undefined,'baseVolume':undefined,'quoteVolume':ticker['volume'],'info':ticker};});},fetchTrades:function fetchTrades(market){var _this498=this;return Promise.resolve().then(function(){return _this498.loadMarkets();}).then(function(){return _this498.apiGetTradesPair({'pair':_this498.marketId(market)});});},createOrder:function createOrder(market,type,side,amount){var price,params,_this499=this,_arguments487=arguments;return Promise.resolve().then(function(){price=_arguments487.length>4&&_arguments487[4]!==undefined?_arguments487[4]:undefined;params=_arguments487.length>5&&_arguments487[5]!==undefined?_arguments487[5]:{};return _this499.loadMarkets();}).then(function(){if(type=='market'){throw new ExchangeError(_this499.id+' allows limit orders only');}return _this499.tapiPostTrade(_this499.extend({'currency_pair':_this499.marketId(market),'action':side=='buy'?'bid':'ask','amount':amount,'price':price},params));});},cancelOrder:function cancelOrder(id){var params,_this500=this,_arguments488=arguments;return Promise.resolve().then(function(){params=_arguments488.length>1&&_arguments488[1]!==undefined?_arguments488[1]:{};return _this500.loadMarkets();}).then(function(){return _this500.tapiPostCancelOrder(_this500.extend({'order_id':id},params));});},request:function request(path){var api,method,params,headers,body,url,nonce,response,_this501=this,_arguments489=arguments;return Promise.resolve().then(function(){api=_arguments489.length>1&&_arguments489[1]!==undefined?_arguments489[1]:'api';method=_arguments489.length>2&&_arguments489[2]!==undefined?_arguments489[2]:'GET';params=_arguments489.length>3&&_arguments489[3]!==undefined?_arguments489[3]:{};headers=_arguments489.length>4&&_arguments489[4]!==undefined?_arguments489[4]:undefined;body=_arguments489.length>5&&_arguments489[5]!==undefined?_arguments489[5]:undefined;url=_this501.urls['api']+'/'+api;if(api=='api'){url+='/'+_this501.version+'/'+_this501.implodeParams(path,params);}else{nonce=_this501.nonce();body=_this501.urlencode(_this501.extend({'method':path,'nonce':nonce},params));headers={'Content-Type':'application/x-www-form-urlencoded','Content-Length':body.length,'Key':_this501.apiKey,'Sign':_this501.hmac(_this501.encode(body),_this501.encode(_this501.secret),'sha512')};}return _this501.fetch(url,method,headers,body);}).then(function(_resp){response=_resp;if('error'in response){throw new ExchangeError(_this501.id+' '+response['error']);}if('success'in response){if(!response['success']){throw new ExchangeError(_this501.id+' '+_this501.json(response));}}return response;});}};//=============================================================================
var exchanges={'_1broker':_1broker,'_1btcxe':_1btcxe,'anxpro':anxpro,'bit2c':bit2c,'bitbay':bitbay,'bitbays':bitbays,'bitcoincoid':bitcoincoid,'bitfinex':bitfinex,'bitflyer':bitflyer,'bitlish':bitlish,'bitmarket':bitmarket,'bitmex':bitmex,'bitso':bitso,'bitstamp':bitstamp,'bittrex':bittrex,'bl3p':bl3p,'btcchina':btcchina,'btce':btce,'btcexchange':btcexchange,'btcmarkets':btcmarkets,'btctradeua':btctradeua,'btcturk':btcturk,'btcx':btcx,'bter':bter,'bxinth':bxinth,'ccex':ccex,'cex':cex,'chbtc':chbtc,'chilebit':chilebit,'coincheck':coincheck,'coingi':coingi,'coinmarketcap':coinmarketcap,'coinmate':coinmate,'coinsecure':coinsecure,'coinspot':coinspot,'dsx':dsx,'exmo':exmo,'flowbtc':flowbtc,'foxbit':foxbit,'fybse':fybse,'fybsg':fybsg,'gatecoin':gatecoin,'gdax':gdax,'gemini':gemini,'hitbtc':hitbtc,'huobi':huobi,'itbit':itbit,'jubi':jubi,'kraken':kraken,'lakebtc':lakebtc,'livecoin':livecoin,'liqui':liqui,'luno':luno,'mercado':mercado,'okcoincny':okcoincny,'okcoinusd':okcoinusd,'paymium':paymium,'poloniex':poloniex,'quadrigacx':quadrigacx,'quoine':quoine,'southxchange':southxchange,'surbitcoin':surbitcoin,'therock':therock,'urdubit':urdubit,'vaultoro':vaultoro,'vbtc':vbtc,'virwox':virwox,'xbtce':xbtce,'yobit':yobit,'yunbi':yunbi,'zaif':zaif};var defineAllExchanges=function defineAllExchanges(exchanges){var result={};var _loop3=function _loop3(id){result[id]=function(params){return new Exchange(extend(exchanges[id],params));};};for(var id in exchanges){_loop3(id);}result.exchanges=Object.keys(exchanges);return result;};if(isNode||isReactNative){Object.assign(module.exports=defineAllExchanges(exchanges),{version:version,// exceptions
CCXTError:CCXTError,ExchangeError:ExchangeError,AuthenticationError:AuthenticationError,NetworkError:NetworkError,DDoSProtection:DDoSProtection,RequestTimeout:RequestTimeout,ExchangeNotAvailable:ExchangeNotAvailable,// common utility functions
sleep:sleep,timeout:timeout,capitalize:capitalize,keysort:keysort,extend:extend,omit:omit,indexBy:indexBy,sortBy:sortBy,flatten:flatten,unique:unique,pluck:pluck,urlencode:urlencode,sum:sum,decimal:decimal,// underscore aliases
index_by:indexBy,sort_by:sortBy,// crypto functions
binaryConcat:binaryConcat,stringToBinary:stringToBinary,binaryToString:binaryToString,stringToBase64:stringToBase64,utf16ToBase64:utf16ToBase64,base64ToBinary:base64ToBinary,base64ToString:base64ToString,urlencodeBase64:urlencodeBase64,hash:hash,hmac:hmac,jwt:jwt});}else window.ccxt=defineAllExchanges(exchanges);})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,